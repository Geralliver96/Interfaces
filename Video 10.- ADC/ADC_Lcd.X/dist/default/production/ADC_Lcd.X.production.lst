

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 15:53:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _ADRES	set	4035
    94  0000                     _TRISDbits	set	3989
    95  0000                     _LATDbits	set	3980
    96  0000                     _ADCON0bits	set	4034
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADCON0	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _LATBbits	set	3978
   101  0000                     _TRISBbits	set	3987
   102                           
   103                           	psect	smallconst
   104  000800                     __psmallconst:
   105                           	callstack 0
   106  000800  00                 	db	0
   107  000801                     STR_2:
   108  000801  56                 	db	86	;'V'
   109  000802  6F                 	db	111	;'o'
   110  000803  6C                 	db	108	;'l'
   111  000804  74                 	db	116	;'t'
   112  000805  61                 	db	97	;'a'
   113  000806  6A                 	db	106	;'j'
   114  000807  65                 	db	101	;'e'
   115  000808  3A                 	db	58	;':'
   116  000809  20                 	db	32
   117  00080A  25                 	db	37
   118  00080B  30                 	db	48	;'0'
   119  00080C  2E                 	db	46
   120  00080D  32                 	db	50	;'2'
   121  00080E  66                 	db	102	;'f'
   122  00080F  00                 	db	0
   123  000810                     STR_1:
   124  000810  41                 	db	65	;'A'
   125  000811  44                 	db	68	;'D'
   126  000812  43                 	db	67	;'C'
   127  000813  3A                 	db	58	;':'
   128  000814  20                 	db	32
   129  000815  25                 	db	37
   130  000816  75                 	db	117	;'u'
   131  000817  20                 	db	32
   132  000818  20                 	db	32
   133  000819  20                 	db	32
   134  00081A  00                 	db	0
   135  00081B                     STR_3:
   136  00081B  49                 	db	73	;'I'
   137  00081C  4E                 	db	78	;'N'
   138  00081D  46                 	db	70	;'F'
   139  00081E  00                 	db	0
   140  00081F                     STR_7:
   141  00081F  4E                 	db	78	;'N'
   142  000820  41                 	db	65	;'A'
   143  000821  4E                 	db	78	;'N'
   144  000822  00                 	db	0
   145  000823                     STR_4:
   146  000823  69                 	db	105	;'i'
   147  000824  6E                 	db	110	;'n'
   148  000825  66                 	db	102	;'f'
   149  000826  00                 	db	0
   150  000827                     STR_8:
   151  000827  6E                 	db	110	;'n'
   152  000828  61                 	db	97	;'a'
   153  000829  6E                 	db	110	;'n'
   154  00082A  00                 	db	0
   155  00082B                     STR_11:
   156  00082B  6C                 	db	108	;'l'
   157  00082C  66                 	db	102	;'f'
   158  00082D  00                 	db	0
   159  00082E  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  003E9C                     __pcinit:
   165                           	callstack 0
   166  003E9C                     start_initialization:
   167                           	callstack 0
   168  003E9C                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Clear objects allocated to BANK1 (80 bytes)
   172  003E9C  EE01  F000         	lfsr	0,__pbssBANK1
   173  003EA0  0E50               	movlw	80
   174  003EA2                     clear_0:
   175  003EA2  6AEE               	clrf	postinc0,c
   176  003EA4  06E8               	decf	wreg,f,c
   177  003EA6  E1FD               	bnz	clear_0
   178                           
   179                           ; Clear objects allocated to BANK0 (42 bytes)
   180  003EA8  EE00  F0D3         	lfsr	0,__pbssBANK0
   181  003EAC  0E2A               	movlw	42
   182  003EAE                     clear_1:
   183  003EAE  6AEE               	clrf	postinc0,c
   184  003EB0  06E8               	decf	wreg,f,c
   185  003EB2  E1FD               	bnz	clear_1
   186  003EB4                     end_of_initialization:
   187                           	callstack 0
   188  003EB4                     __end_of__initialization:
   189                           	callstack 0
   190  003EB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  003EB6  6EF8               	movwf	tblptru,c
   192  003EB8  0100               	movlb	0
   193  003EBA  EF1B  F017         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssBANK0
   196  0000D3                     __pbssBANK0:
   197                           	callstack 0
   198  0000D3                     floorf@F527:
   199                           	callstack 0
   200  0000D3                     	ds	4
   201  0000D7                     ___fpclassifyf@F465:
   202                           	callstack 0
   203  0000D7                     	ds	4
   204  0000DB                     _voltaje:
   205                           	callstack 0
   206  0000DB                     	ds	4
   207  0000DF                     _nout:
   208                           	callstack 0
   209  0000DF                     	ds	2
   210  0000E1                     _width:
   211                           	callstack 0
   212  0000E1                     	ds	2
   213  0000E3                     _prec:
   214                           	callstack 0
   215  0000E3                     	ds	2
   216  0000E5                     _flags:
   217                           	callstack 0
   218  0000E5                     	ds	2
   219  0000E7                     _valor_adc:
   220                           	callstack 0
   221  0000E7                     	ds	2
   222  0000E9                     _buffer:
   223                           	callstack 0
   224  0000E9                     	ds	20
   225                           
   226                           	psect	bssBANK1
   227  000100                     __pbssBANK1:
   228                           	callstack 0
   229  000100                     _dbuf:
   230                           	callstack 0
   231  000100                     	ds	80
   232                           
   233                           	psect	cstackBANK0
   234  000060                     __pcstackBANK0:
   235                           	callstack 0
   236  000060                     ??_efgtoa:
   237                           
   238                           ; 1 bytes @ 0x0
   239  000060                     	ds	5
   240  000065                     _efgtoa$939:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x5
   244  000065                     	ds	2
   245  000067                     _efgtoa$940:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x7
   249  000067                     	ds	2
   250  000069                     _efgtoa$945:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x9
   254  000069                     	ds	2
   255  00006B                     _efgtoa$949:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0xB
   259  00006B                     	ds	2
   260  00006D                     _efgtoa$950:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xD
   264  00006D                     	ds	2
   265  00006F                     _efgtoa$951:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xF
   269  00006F                     	ds	2
   270  000071                     efgtoa@t:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x11
   274  000071                     	ds	2
   275  000073                     efgtoa@pp:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x13
   279  000073                     	ds	2
   280  000075                     efgtoa@ne:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x15
   284  000075                     	ds	2
   285  000077                     efgtoa@m:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x17
   289  000077                     	ds	2
   290  000079                     efgtoa@ou:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0x19
   294  000079                     	ds	4
   295  00007D                     efgtoa@d:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x1D
   299  00007D                     	ds	2
   300  00007F                     efgtoa@sign:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1F
   304  00007F                     	ds	2
   305  000081                     efgtoa@p:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x21
   309  000081                     	ds	2
   310  000083                     efgtoa@w:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x23
   314  000083                     	ds	2
   315  000085                     efgtoa@nmode:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x25
   319  000085                     	ds	1
   320  000086                     efgtoa@mode:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x26
   324  000086                     	ds	1
   325  000087                     efgtoa@h:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x27
   329  000087                     	ds	4
   330  00008B                     efgtoa@l:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x2B
   334  00008B                     	ds	4
   335  00008F                     efgtoa@i:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2F
   339  00008F                     	ds	2
   340  000091                     efgtoa@g:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x31
   344  000091                     	ds	4
   345  000095                     efgtoa@e:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x35
   349  000095                     	ds	2
   350  000097                     efgtoa@n:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x37
   354  000097                     	ds	2
   355  000099                     efgtoa@u:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x39
   359  000099                     	ds	4
   360  00009D                     ?_vfpfcnvrt:
   361                           	callstack 0
   362  00009D                     vfpfcnvrt@fp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x3D
   366  00009D                     	ds	2
   367  00009F                     vfpfcnvrt@fmt:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x3F
   371  00009F                     	ds	2
   372  0000A1                     vfpfcnvrt@ap:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x41
   376  0000A1                     	ds	2
   377  0000A3                     vfpfcnvrt@llu:
   378                           	callstack 0
   379                           
   380                           ; 8 bytes @ 0x43
   381  0000A3                     	ds	8
   382  0000AB                     vfpfcnvrt@done:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x4B
   386  0000AB                     	ds	2
   387  0000AD                     _vfpfcnvrt$972:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x4D
   391  0000AD                     	ds	2
   392  0000AF                     _vfpfcnvrt$976:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x4F
   396  0000AF                     	ds	2
   397  0000B1                     vfpfcnvrt@f:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x51
   401  0000B1                     	ds	4
   402  0000B5                     vfpfcnvrt@ct:
   403                           	callstack 0
   404                           
   405                           ; 3 bytes @ 0x55
   406  0000B5                     	ds	3
   407  0000B8                     vfpfcnvrt@c:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x58
   411  0000B8                     	ds	1
   412  0000B9                     ?_vfprintf:
   413                           	callstack 0
   414  0000B9                     vfprintf@fp:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x59
   418  0000B9                     	ds	2
   419  0000BB                     vfprintf@fmt:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x5B
   423  0000BB                     	ds	2
   424  0000BD                     vfprintf@ap:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x5D
   428  0000BD                     	ds	2
   429  0000BF                     vfprintf@cfmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x5F
   433  0000BF                     	ds	2
   434  0000C1                     ?_sprintf:
   435                           	callstack 0
   436  0000C1                     sprintf@s:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x61
   440  0000C1                     	ds	2
   441  0000C3                     sprintf@fmt:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x63
   445  0000C3                     	ds	6
   446  0000C9                     sprintf@ap:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x69
   450  0000C9                     	ds	2
   451  0000CB                     sprintf@f:
   452                           	callstack 0
   453                           
   454                           ; 6 bytes @ 0x6B
   455  0000CB                     	ds	6
   456  0000D1                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x71
   459  0000D1                     	ds	2
   460                           
   461                           	psect	cstackCOMRAM
   462  000001                     __pcstackCOMRAM:
   463                           	callstack 0
   464  000001                     ?_ADC_Read:
   465                           	callstack 0
   466  000001                     ?_strlen:
   467                           	callstack 0
   468  000001                     ?___fpclassifyf:
   469                           	callstack 0
   470  000001                     ?_isupper:
   471                           	callstack 0
   472  000001                     ?_isdigit:
   473                           	callstack 0
   474  000001                     ?_strncmp:
   475                           	callstack 0
   476  000001                     ?_isspace:
   477                           	callstack 0
   478  000001                     ?___wmul:
   479                           	callstack 0
   480  000001                     ?___awdiv:
   481                           	callstack 0
   482  000001                     ?___awmod:
   483                           	callstack 0
   484  000001                     ?___fladd:
   485                           	callstack 0
   486  000001                     ?___flneg:
   487                           	callstack 0
   488  000001                     ?___fltol:
   489                           	callstack 0
   490  000001                     ?___xxtofl:
   491                           	callstack 0
   492  000001                     ?___lodiv:
   493                           	callstack 0
   494  000001                     ?___lomod:
   495                           	callstack 0
   496  000001                     ADC_Init@p_ang:
   497                           	callstack 0
   498  000001                     Lcd_Port@a:
   499                           	callstack 0
   500  000001                     ___wmul@multiplier:
   501                           	callstack 0
   502  000001                     ___awdiv@dividend:
   503                           	callstack 0
   504  000001                     ___awmod@dividend:
   505                           	callstack 0
   506  000001                     isdigit@c:
   507                           	callstack 0
   508  000001                     isspace@c:
   509                           	callstack 0
   510  000001                     isupper@c:
   511                           	callstack 0
   512  000001                     fputc@c:
   513                           	callstack 0
   514  000001                     strcpy@dest:
   515                           	callstack 0
   516  000001                     strlen@s:
   517                           	callstack 0
   518  000001                     strncmp@_l:
   519                           	callstack 0
   520  000001                     ___fleq@ff1:
   521                           	callstack 0
   522  000001                     ___flneg@f1:
   523                           	callstack 0
   524  000001                     ___fltol@f1:
   525                           	callstack 0
   526  000001                     ___fladd@b:
   527                           	callstack 0
   528  000001                     ___xxtofl@val:
   529                           	callstack 0
   530  000001                     ___fpclassifyf@x:
   531                           	callstack 0
   532  000001                     ___lodiv@dividend:
   533                           	callstack 0
   534  000001                     ___lomod@dividend:
   535                           	callstack 0
   536                           
   537                           ; 8 bytes @ 0x0
   538  000001                     	ds	1
   539  000002                     ??_Lcd_Cmd:
   540  000002                     Lcd_Write_Char@temp:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x1
   544  000002                     	ds	1
   545  000003                     ??_isupper:
   546  000003                     ??_isdigit:
   547  000003                     ??_isspace:
   548  000003                     ADC_Read@ch:
   549                           	callstack 0
   550  000003                     Lcd_Cmd@a:
   551                           	callstack 0
   552  000003                     Lcd_Write_Char@y:
   553                           	callstack 0
   554  000003                     ___wmul@multiplicand:
   555                           	callstack 0
   556  000003                     ___awdiv@divisor:
   557                           	callstack 0
   558  000003                     ___awmod@divisor:
   559                           	callstack 0
   560  000003                     fputc@fp:
   561                           	callstack 0
   562  000003                     strcpy@src:
   563                           	callstack 0
   564  000003                     strlen@a:
   565                           	callstack 0
   566  000003                     strncmp@_r:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570  000003                     	ds	1
   571  000004                     ??_Lcd_Init:
   572  000004                     Lcd_Set_Cursor@b:
   573                           	callstack 0
   574  000004                     Lcd_Write_Char@a:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x3
   578  000004                     	ds	1
   579  000005                     ??_fputc:
   580  000005                     ??___fpclassifyf:
   581  000005                     ??_strcpy:
   582  000005                     ??___fltol:
   583  000005                     ??___xxtofl:
   584  000005                     Lcd_Set_Cursor@a:
   585                           	callstack 0
   586  000005                     ___awdiv@counter:
   587                           	callstack 0
   588  000005                     ___awmod@counter:
   589                           	callstack 0
   590  000005                     Lcd_Write_String@a:
   591                           	callstack 0
   592  000005                     ___wmul@product:
   593                           	callstack 0
   594  000005                     strncmp@n:
   595                           	callstack 0
   596  000005                     ___fleq@ff2:
   597                           	callstack 0
   598  000005                     ___fladd@a:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x4
   602  000005                     	ds	1
   603  000006                     Lcd_Set_Cursor@z:
   604                           	callstack 0
   605  000006                     ___awdiv@sign:
   606                           	callstack 0
   607  000006                     ___awmod@sign:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x5
   611  000006                     	ds	1
   612  000007                     ??_strncmp:
   613  000007                     ?_tolower:
   614                           	callstack 0
   615  000007                     Lcd_Set_Cursor@y:
   616                           	callstack 0
   617  000007                     _isspace$1042:
   618                           	callstack 0
   619  000007                     Lcd_Write_String@i:
   620                           	callstack 0
   621  000007                     ___awdiv@quotient:
   622                           	callstack 0
   623  000007                     strcpy@s:
   624                           	callstack 0
   625  000007                     tolower@c:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x6
   629  000007                     	ds	1
   630  000008                     ?_atoi:
   631                           	callstack 0
   632  000008                     Lcd_Set_Cursor@temp:
   633                           	callstack 0
   634  000008                     atoi@s:
   635                           	callstack 0
   636  000008                     strncmp@l:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x7
   640  000008                     	ds	1
   641  000009                     ??___fladd:
   642  000009                     ??_tolower:
   643  000009                     ??___fleq:
   644  000009                     ___fltol@sign1:
   645                           	callstack 0
   646  000009                     ___xxtofl@sign:
   647                           	callstack 0
   648  000009                     ___fpclassifyf@e:
   649                           	callstack 0
   650  000009                     strcpy@d:
   651                           	callstack 0
   652  000009                     ___lodiv@divisor:
   653                           	callstack 0
   654  000009                     ___lomod@divisor:
   655                           	callstack 0
   656                           
   657                           ; 8 bytes @ 0x8
   658  000009                     	ds	1
   659  00000A                     ??_atoi:
   660  00000A                     ___fltol@exp1:
   661                           	callstack 0
   662  00000A                     ___xxtofl@exp:
   663                           	callstack 0
   664  00000A                     fputs@s:
   665                           	callstack 0
   666  00000A                     strncmp@r:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x9
   670  00000A                     	ds	1
   671  00000B                     ___xxtofl@arg:
   672                           	callstack 0
   673  00000B                     ___fpclassifyf@u:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0xA
   677  00000B                     	ds	1
   678  00000C                     fputs@fp:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0xB
   682  00000C                     	ds	1
   683  00000D                     ___fladd@signs:
   684                           	callstack 0
   685  00000D                     _tolower$1106:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0xC
   689  00000D                     	ds	1
   690  00000E                     ___fladd@aexp:
   691                           	callstack 0
   692  00000E                     fputs@c:
   693                           	callstack 0
   694  00000E                     atoi@neg:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0xD
   698  00000E                     	ds	1
   699  00000F                     ?___flmul:
   700                           	callstack 0
   701  00000F                     ___fladd@bexp:
   702                           	callstack 0
   703  00000F                     fputs@i:
   704                           	callstack 0
   705  00000F                     ___flmul@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0xE
   709  00000F                     	ds	1
   710  000010                     ___fladd@grs:
   711                           	callstack 0
   712  000010                     _atoi$1011:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0xF
   716  000010                     	ds	1
   717  000011                     ?_pad:
   718                           	callstack 0
   719  000011                     ___lomod@counter:
   720                           	callstack 0
   721  000011                     pad@fp:
   722                           	callstack 0
   723  000011                     ___lodiv@quotient:
   724                           	callstack 0
   725                           
   726                           ; 8 bytes @ 0x10
   727  000011                     	ds	1
   728  000012                     _atoi$1013:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x11
   732  000012                     	ds	1
   733  000013                     pad@buf:
   734                           	callstack 0
   735  000013                     ___flmul@a:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x12
   739  000013                     	ds	1
   740  000014                     _atoi$1012:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x13
   744  000014                     	ds	1
   745  000015                     pad@p:
   746                           	callstack 0
   747  000015                     atoi@n:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x14
   751  000015                     	ds	2
   752  000017                     ??___flmul:
   753  000017                     ??_pad:
   754                           
   755                           ; 1 bytes @ 0x16
   756  000017                     	ds	1
   757  000018                     pad@i:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x17
   761  000018                     	ds	1
   762  000019                     ___lodiv@counter:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x18
   766  000019                     	ds	1
   767  00001A                     pad@w:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x19
   771  00001A                     	ds	1
   772  00001B                     ___flmul@sign:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x1A
   776  00001B                     	ds	1
   777  00001C                     ?_utoa:
   778                           	callstack 0
   779  00001C                     utoa@fp:
   780                           	callstack 0
   781  00001C                     ___flmul@grs:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x1B
   785  00001C                     	ds	2
   786  00001E                     utoa@d:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x1D
   790  00001E                     	ds	2
   791  000020                     ___flmul@aexp:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x1F
   795  000020                     	ds	1
   796  000021                     ___flmul@bexp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x20
   800  000021                     	ds	1
   801  000022                     ___flmul@prod:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x21
   805  000022                     	ds	4
   806  000026                     ??_utoa:
   807  000026                     ___flmul@temp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x25
   811  000026                     	ds	2
   812  000028                     ?___fldiv:
   813                           	callstack 0
   814  000028                     ?___flsub:
   815                           	callstack 0
   816  000028                     ___flge@ff1:
   817                           	callstack 0
   818  000028                     ___flsub@b:
   819                           	callstack 0
   820  000028                     ___fldiv@b:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x27
   824  000028                     	ds	4
   825  00002C                     ___flge@ff2:
   826                           	callstack 0
   827  00002C                     ___flsub@a:
   828                           	callstack 0
   829  00002C                     ___fldiv@a:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x2B
   833  00002C                     	ds	2
   834  00002E                     utoa@p:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x2D
   838  00002E                     	ds	2
   839  000030                     ??___fldiv:
   840  000030                     ??___flge:
   841  000030                     utoa@w:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x2F
   845  000030                     	ds	2
   846  000032                     utoa@n:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x31
   850  000032                     	ds	2
   851  000034                     ___fldiv@rem:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x33
   855  000034                     	ds	4
   856  000038                     ___fldiv@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x37
   860  000038                     	ds	1
   861  000039                     ___fldiv@new_exp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x38
   865  000039                     	ds	1
   866  00003A                     utoa@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x39
   870  00003A                     	ds	1
   871  00003B                     ___fldiv@grs:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x3A
   875  00003B                     	ds	4
   876  00003F                     ___fldiv@bexp:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x3E
   880  00003F                     	ds	1
   881  000040                     ___fldiv@aexp:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x3F
   885  000040                     	ds	1
   886  000041                     ?_floorf:
   887                           	callstack 0
   888  000041                     floorf@x:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x40
   892  000041                     	ds	4
   893  000045                     ??_floorf:
   894                           
   895                           ; 1 bytes @ 0x44
   896  000045                     	ds	6
   897  00004B                     floorf@m:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x4A
   901  00004B                     	ds	4
   902  00004F                     floorf@e:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x4E
   906  00004F                     	ds	2
   907  000051                     floorf@u:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x50
   911  000051                     	ds	4
   912  000055                     ?_efgtoa:
   913                           	callstack 0
   914  000055                     efgtoa@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x54
   918  000055                     	ds	2
   919  000057                     efgtoa@f:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x56
   923  000057                     	ds	4
   924  00005B                     efgtoa@c:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x5A
   928  00005B                     	ds	1
   929  00005C                     ??_vfpfcnvrt:
   930                           
   931                           ; 1 bytes @ 0x5B
   932  00005C                     	ds	4
   933  000060                     
   934                           ; 1 bytes @ 0x5F
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 26 in file "ADC_Lcd.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   954 ;;      Params:         0       0       0       0       0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0
   956 ;;      Temps:          0       2       0       0       0       0       0       0       0
   957 ;;      Totals:         0       2       0       0       0       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels required when called: 8
   960 ;; This function calls:
   961 ;;		_ADC_Init
   962 ;;		_ADC_Read
   963 ;;		_Lcd_Init
   964 ;;		_Lcd_Set_Cursor
   965 ;;		_Lcd_Write_String
   966 ;;		___fldiv
   967 ;;		___flge
   968 ;;		___flmul
   969 ;;		___xxtofl
   970 ;;		_sprintf
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text0
   977  002E36                     __ptext0:
   978                           	callstack 0
   979  002E36                     _main:
   980                           	callstack 23
   981  002E36                     
   982                           ;ADC_Lcd.c: 28:     ADC_Init(0x0E);
   983  002E36  0E0E               	movlw	14
   984  002E38  EC6F  F01F         	call	_ADC_Init
   985                           
   986                           ;ADC_Lcd.c: 29:     Lcd_Init();
   987  002E3C  ECD5  F01C         	call	_Lcd_Init	;wreg free
   988  002E40                     
   989                           ;ADC_Lcd.c: 30:     TRISBbits.RB0 = 0;
   990  002E40  9093               	bcf	147,0,c	;volatile
   991  002E42                     
   992                           ;ADC_Lcd.c: 31:     LATBbits.LB0 = 0;
   993  002E42  908A               	bcf	138,0,c	;volatile
   994  002E44                     l4405:
   995                           
   996                           ;ADC_Lcd.c: 34:     {;ADC_Lcd.c: 35:         valor_adc = ADC_Read(0);
   997  002E44  0E00               	movlw	0
   998  002E46  EC4D  F01E         	call	_ADC_Read
   999  002E4A  C001  F0E7         	movff	?_ADC_Read,_valor_adc
  1000  002E4E  C002  F0E8         	movff	?_ADC_Read+1,_valor_adc+1
  1001  002E52                     
  1002                           ;ADC_Lcd.c: 36:         voltaje = (float)(valor_adc * 5.0) / 1023.0;
  1003  002E52  0E00               	movlw	0
  1004  002E54  6E13               	movwf	___flmul@a^0,c
  1005  002E56  0E00               	movlw	0
  1006  002E58  6E14               	movwf	(___flmul@a+1)^0,c
  1007  002E5A  0EA0               	movlw	160
  1008  002E5C  6E15               	movwf	(___flmul@a+2)^0,c
  1009  002E5E  0E40               	movlw	64
  1010  002E60  6E16               	movwf	(___flmul@a+3)^0,c
  1011  002E62  C0E7  F001         	movff	_valor_adc,___xxtofl@val
  1012  002E66  C0E8  F002         	movff	_valor_adc+1,___xxtofl@val+1
  1013  002E6A  0E00               	movlw	0
  1014  002E6C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1015  002E6E  0EFF               	movlw	-1
  1016  002E70  6E03               	movwf	(___xxtofl@val+2)^0,c
  1017  002E72  6E04               	movwf	(___xxtofl@val+3)^0,c
  1018  002E74  0E01               	movlw	1
  1019  002E76  EC79  F015         	call	___xxtofl
  1020  002E7A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1021  002E7E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1022  002E82  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1023  002E86  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1024  002E8A  EC8C  F00F         	call	___flmul	;wreg free
  1025  002E8E  C00F  F028         	movff	?___flmul,___fldiv@b
  1026  002E92  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1027  002E96  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1028  002E9A  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1029  002E9E  0E00               	movlw	0
  1030  002EA0  6E2C               	movwf	___fldiv@a^0,c
  1031  002EA2  0EC0               	movlw	192
  1032  002EA4  6E2D               	movwf	(___fldiv@a+1)^0,c
  1033  002EA6  0E7F               	movlw	127
  1034  002EA8  6E2E               	movwf	(___fldiv@a+2)^0,c
  1035  002EAA  0E44               	movlw	68
  1036  002EAC  6E2F               	movwf	(___fldiv@a+3)^0,c
  1037  002EAE  ECA1  F011         	call	___fldiv	;wreg free
  1038  002EB2  C028  F0DB         	movff	?___fldiv,_voltaje
  1039  002EB6  C029  F0DC         	movff	?___fldiv+1,_voltaje+1
  1040  002EBA  C02A  F0DD         	movff	?___fldiv+2,_voltaje+2
  1041  002EBE  C02B  F0DE         	movff	?___fldiv+3,_voltaje+3
  1042  002EC2                     
  1043                           ;ADC_Lcd.c: 38:         Lcd_Set_Cursor(1,1);
  1044  002EC2  0E01               	movlw	1
  1045  002EC4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1046  002EC6  0E01               	movlw	1
  1047  002EC8  EC2D  F01A         	call	_Lcd_Set_Cursor
  1048  002ECC                     
  1049                           ;ADC_Lcd.c: 39:         sprintf(buffer, "ADC: %u   ", valor_adc);
  1050  002ECC  0EE9               	movlw	low _buffer
  1051  002ECE  0100               	movlb	0	; () banked
  1052  002ED0  6FC1               	movwf	sprintf@s& (0+255),b
  1053  002ED2  0E00               	movlw	high _buffer
  1054  002ED4  6FC2               	movwf	(sprintf@s+1)& (0+255),b
  1055  002ED6  0E10               	movlw	low STR_1
  1056  002ED8  6FC3               	movwf	sprintf@fmt& (0+255),b
  1057  002EDA  0E08               	movlw	high STR_1
  1058  002EDC  6FC4               	movwf	(sprintf@fmt+1)& (0+255),b
  1059  002EDE  C0E7  F0C5         	movff	_valor_adc,?_sprintf+4
  1060  002EE2  C0E8  F0C6         	movff	_valor_adc+1,?_sprintf+5
  1061  002EE6  ECD8  F01D         	call	_sprintf	;wreg free
  1062  002EEA                     
  1063                           ;ADC_Lcd.c: 40:         Lcd_Write_String(buffer);
  1064  002EEA  0EE9               	movlw	low _buffer
  1065  002EEC  6E05               	movwf	Lcd_Write_String@a^0,c
  1066  002EEE  0E00               	movlw	high _buffer
  1067  002EF0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1068  002EF2  EC92  F01E         	call	_Lcd_Write_String	;wreg free
  1069  002EF6                     
  1070                           ;ADC_Lcd.c: 41:         Lcd_Set_Cursor(2,1);
  1071  002EF6  0E01               	movlw	1
  1072  002EF8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1073  002EFA  0E02               	movlw	2
  1074  002EFC  EC2D  F01A         	call	_Lcd_Set_Cursor
  1075  002F00                     
  1076                           ;ADC_Lcd.c: 42:         sprintf(buffer, "Voltaje: %0.2f", voltaje);
  1077  002F00  0EE9               	movlw	low _buffer
  1078  002F02  0100               	movlb	0	; () banked
  1079  002F04  6FC1               	movwf	sprintf@s& (0+255),b
  1080  002F06  0E00               	movlw	high _buffer
  1081  002F08  6FC2               	movwf	(sprintf@s+1)& (0+255),b
  1082  002F0A  0E01               	movlw	low STR_2
  1083  002F0C  6FC3               	movwf	sprintf@fmt& (0+255),b
  1084  002F0E  0E08               	movlw	high STR_2
  1085  002F10  6FC4               	movwf	(sprintf@fmt+1)& (0+255),b
  1086  002F12  C0DB  F0C5         	movff	_voltaje,?_sprintf+4
  1087  002F16  C0DC  F0C6         	movff	_voltaje+1,?_sprintf+5
  1088  002F1A  C0DD  F0C7         	movff	_voltaje+2,?_sprintf+6
  1089  002F1E  C0DE  F0C8         	movff	_voltaje+3,?_sprintf+7
  1090  002F22  ECD8  F01D         	call	_sprintf	;wreg free
  1091  002F26                     
  1092                           ;ADC_Lcd.c: 43:         Lcd_Write_String(buffer);
  1093  002F26  0EE9               	movlw	low _buffer
  1094  002F28  6E05               	movwf	Lcd_Write_String@a^0,c
  1095  002F2A  0E00               	movlw	high _buffer
  1096  002F2C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1097  002F2E  EC92  F01E         	call	_Lcd_Write_String	;wreg free
  1098  002F32                     
  1099                           ;ADC_Lcd.c: 45:         if(voltaje > 4.2)
  1100  002F32  0E66               	movlw	102
  1101  002F34  6E28               	movwf	___flge@ff1^0,c
  1102  002F36  0E66               	movlw	102
  1103  002F38  6E29               	movwf	(___flge@ff1+1)^0,c
  1104  002F3A  0E86               	movlw	134
  1105  002F3C  6E2A               	movwf	(___flge@ff1+2)^0,c
  1106  002F3E  0E40               	movlw	64
  1107  002F40  6E2B               	movwf	(___flge@ff1+3)^0,c
  1108  002F42  C0DB  F02C         	movff	_voltaje,___flge@ff2
  1109  002F46  C0DC  F02D         	movff	_voltaje+1,___flge@ff2+1
  1110  002F4A  C0DD  F02E         	movff	_voltaje+2,___flge@ff2+2
  1111  002F4E  C0DE  F02F         	movff	_voltaje+3,___flge@ff2+3
  1112  002F52  EC49  F018         	call	___flge	;wreg free
  1113  002F56  B0D8               	btfsc	status,0,c
  1114  002F58  EFB0  F017         	goto	u5341
  1115  002F5C  EFB2  F017         	goto	u5340
  1116  002F60                     u5341:
  1117  002F60  EFB5  F017         	goto	l30
  1118  002F64                     u5340:
  1119  002F64                     
  1120                           ;ADC_Lcd.c: 46:         {;ADC_Lcd.c: 47:             LATBbits.LB0 = 1;
  1121  002F64  808A               	bsf	138,0,c	;volatile
  1122                           
  1123                           ;ADC_Lcd.c: 48:         }
  1124  002F66  EFB6  F017         	goto	l4425
  1125  002F6A                     l30:
  1126                           
  1127                           ;ADC_Lcd.c: 50:         {;ADC_Lcd.c: 51:             LATBbits.LB0 = 0;
  1128  002F6A  908A               	bcf	138,0,c	;volatile
  1129  002F6C                     l4425:
  1130                           
  1131                           ;ADC_Lcd.c: 53:         _delay((unsigned long)((150)*(48000000/4000.0)));
  1132  002F6C  0E0A               	movlw	10
  1133  002F6E  0100               	movlb	0	; () banked
  1134  002F70  6FD2               	movwf	(??_main+1)& (0+255),b
  1135  002F72  0E22               	movlw	34
  1136  002F74  6FD1               	movwf	??_main& (0+255),b
  1137  002F76  0EA1               	movlw	161
  1138  002F78                     u5357:
  1139  002F78  2EE8               	decfsz	wreg,f,c
  1140  002F7A  D7FE               	bra	u5357
  1141  002F7C  2FD1               	decfsz	??_main& (0+255),f,b
  1142  002F7E  D7FC               	bra	u5357
  1143  002F80  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1144  002F82  D7FA               	bra	u5357
  1145  002F84  EF22  F017         	goto	l4405
  1146  002F88  EF00  F000         	goto	start
  1147  002F8C                     __end_of_main:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _sprintf *****************
  1151 ;; Defined at:
  1152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  s               2   97[BANK0 ] PTR unsigned char 
  1155 ;;		 -> buffer(20), 
  1156 ;;  fmt             2   99[BANK0 ] PTR const unsigned char 
  1157 ;;		 -> STR_2(15), STR_1(11), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  f               6  107[BANK0 ] struct _IO_FILE
  1160 ;;  ap              2  105[BANK0 ] PTR void [1]
  1161 ;;		 -> ?_sprintf(2), 
  1162 ;;  ret             2    0        int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  2   97[BANK0 ] int 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1172 ;;      Params:         0       8       0       0       0       0       0       0       0
  1173 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1175 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1176 ;;Total ram usage:       16 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 7
  1179 ;; This function calls:
  1180 ;;		_vfprintf
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text1
  1187  003BB0                     __ptext1:
  1188                           	callstack 0
  1189  003BB0                     _sprintf:
  1190                           	callstack 23
  1191  003BB0  0EC5               	movlw	low (?_sprintf+4)
  1192  003BB2  0100               	movlb	0	; () banked
  1193  003BB4  6FC9               	movwf	sprintf@ap& (0+255),b
  1194  003BB6  0E00               	movlw	high (?_sprintf+4)
  1195  003BB8  6FCA               	movwf	(sprintf@ap+1)& (0+255),b
  1196  003BBA  C0C1  F0CB         	movff	sprintf@s,sprintf@f
  1197  003BBE  C0C2  F0CC         	movff	sprintf@s+1,sprintf@f+1
  1198  003BC2                     
  1199                           ; BSR set to: 0
  1200  003BC2  0E00               	movlw	0
  1201  003BC4  6FCE               	movwf	(sprintf@f+3)& (0+255),b
  1202  003BC6  0E00               	movlw	0
  1203  003BC8  6FCD               	movwf	(sprintf@f+2)& (0+255),b
  1204  003BCA                     
  1205                           ; BSR set to: 0
  1206  003BCA  0E00               	movlw	0
  1207  003BCC  6FD0               	movwf	(sprintf@f+5)& (0+255),b
  1208  003BCE  0E00               	movlw	0
  1209  003BD0  6FCF               	movwf	(sprintf@f+4)& (0+255),b
  1210  003BD2                     
  1211                           ; BSR set to: 0
  1212  003BD2  0ECB               	movlw	low sprintf@f
  1213  003BD4  6FB9               	movwf	vfprintf@fp& (0+255),b
  1214  003BD6  0E00               	movlw	high sprintf@f
  1215  003BD8  6FBA               	movwf	(vfprintf@fp+1)& (0+255),b
  1216  003BDA  C0C3  F0BB         	movff	sprintf@fmt,vfprintf@fmt
  1217  003BDE  C0C4  F0BC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1218  003BE2  0EC9               	movlw	low sprintf@ap
  1219  003BE4  6FBD               	movwf	vfprintf@ap& (0+255),b
  1220  003BE6  0E00               	movlw	high sprintf@ap
  1221  003BE8  6FBE               	movwf	(vfprintf@ap+1)& (0+255),b
  1222  003BEA  EC1B  F01D         	call	_vfprintf	;wreg free
  1223  003BEE  0100               	movlb	0	; () banked
  1224  003BF0  51CD               	movf	(sprintf@f+2)& (0+255),w,b
  1225  003BF2  25C1               	addwf	sprintf@s& (0+255),w,b
  1226  003BF4  6ED9               	movwf	fsr2l,c
  1227  003BF6  51CE               	movf	(sprintf@f+3)& (0+255),w,b
  1228  003BF8  21C2               	addwfc	(sprintf@s+1)& (0+255),w,b
  1229  003BFA  6EDA               	movwf	fsr2h,c
  1230  003BFC  0E00               	movlw	0
  1231  003BFE  6EDF               	movwf	indf2,c
  1232  003C00                     
  1233                           ; BSR set to: 0
  1234  003C00  0012               	return		;funcret
  1235  003C02                     __end_of_sprintf:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _vfprintf *****************
  1239 ;; Defined at:
  1240 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  1243 ;;		 -> sprintf@f(6), 
  1244 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  1245 ;;		 -> STR_2(15), STR_1(11), 
  1246 ;;  ap              2   93[BANK0 ] PTR PTR void 
  1247 ;;		 -> sprintf@ap(2), 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  cfmt            2   95[BANK0 ] PTR unsigned char 
  1250 ;;		 -> STR_2(15), STR_1(11), 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2   89[BANK0 ] int 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       6       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        8 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 6
  1267 ;; This function calls:
  1268 ;;		_vfpfcnvrt
  1269 ;; This function is called by:
  1270 ;;		_sprintf
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text2
  1275  003A36                     __ptext2:
  1276                           	callstack 0
  1277  003A36                     _vfprintf:
  1278                           	callstack 23
  1279  003A36                     
  1280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1281  003A36  C0BB  F0BF         	movff	vfprintf@fmt,vfprintf@cfmt
  1282  003A3A  C0BC  F0C0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1283  003A3E                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1285  003A3E  0E00               	movlw	0
  1286  003A40  0100               	movlb	0	; () banked
  1287  003A42  6FE0               	movwf	(_nout+1)& (0+255),b
  1288  003A44  0E00               	movlw	0
  1289  003A46  6FDF               	movwf	_nout& (0+255),b
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1292  003A48  EF39  F01D         	goto	l4245
  1293  003A4C                     l4243:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1297  003A4C  C0B9  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1298  003A50  C0BA  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1299  003A54  0EBF               	movlw	low vfprintf@cfmt
  1300  003A56  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1301  003A58  0E00               	movlw	high vfprintf@cfmt
  1302  003A5A  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1303  003A5C  C0BD  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1304  003A60  C0BE  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1305  003A64  EC44  F00A         	call	_vfpfcnvrt	;wreg free
  1306  003A68  0100               	movlb	0	; () banked
  1307  003A6A  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1308  003A6C  27DF               	addwf	_nout& (0+255),f,b
  1309  003A6E  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1310  003A70  23E0               	addwfc	(_nout+1)& (0+255),f,b
  1311  003A72                     l4245:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1315  003A72  C0BF  FFF6         	movff	vfprintf@cfmt,tblptrl
  1316  003A76  C0C0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1317  003A7A                     	if	0	;tblptru may be non-zero
  1318  003A7A                     	endif
  1319  003A7A                     	if	0	;tblptru may be non-zero
  1320  003A7A                     	endif
  1321  003A7A  0008               	tblrd		*
  1322  003A7C  50F5               	movf	tablat,w,c
  1323  003A7E  0900               	iorlw	0
  1324  003A80  A4D8               	btfss	status,2,c
  1325  003A82  EF45  F01D         	goto	u5161
  1326  003A86  EF47  F01D         	goto	u5160
  1327  003A8A                     u5161:
  1328  003A8A  EF26  F01D         	goto	l4243
  1329  003A8E                     u5160:
  1330  003A8E                     
  1331                           ; BSR set to: 0
  1332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1333  003A8E  C0DF  F0B9         	movff	_nout,?_vfprintf
  1334  003A92  C0E0  F0BA         	movff	_nout+1,?_vfprintf+1
  1335  003A96                     
  1336                           ; BSR set to: 0
  1337  003A96  0012               	return		;funcret
  1338  003A98                     __end_of_vfprintf:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _vfpfcnvrt *****************
  1342 ;; Defined at:
  1343 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1346 ;;		 -> sprintf@f(6), 
  1347 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1348 ;;		 -> vfprintf@cfmt(2), 
  1349 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1350 ;;		 -> sprintf@ap(2), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  llu             8   67[BANK0 ] unsigned long long 
  1353 ;;  ll              8    0        long long 
  1354 ;;  f               4   81[BANK0 ] long long 
  1355 ;;  ct              3   85[BANK0 ] unsigned char [3]
  1356 ;;  vp              3    0        PTR void 
  1357 ;;  cp              3    0        PTR unsigned char 
  1358 ;;  done            2   75[BANK0 ] int 
  1359 ;;  i               2    0        int 
  1360 ;;  c               1   88[BANK0 ] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2   61[BANK0 ] int 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       6       0       0       0       0       0       0       0
  1371 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1372 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         4      28       0       0       0       0       0       0       0
  1374 ;;Total ram usage:       32 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 5
  1377 ;; This function calls:
  1378 ;;		_atoi
  1379 ;;		_efgtoa
  1380 ;;		_fputc
  1381 ;;		_isdigit
  1382 ;;		_isupper
  1383 ;;		_strncmp
  1384 ;;		_tolower
  1385 ;;		_utoa
  1386 ;; This function is called by:
  1387 ;;		_vfprintf
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text3
  1392  001488                     __ptext3:
  1393                           	callstack 0
  1394  001488                     _vfpfcnvrt:
  1395                           	callstack 23
  1396  001488                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1398  001488  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1399  00148C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1400  001490  CFDE FFF6          	movff	postinc2,tblptrl
  1401  001494  CFDD FFF7          	movff	postdec2,tblptrh
  1402  001498                     	if	0	;tblptru may be non-zero
  1403  001498                     	endif
  1404  001498                     	if	0	;tblptru may be non-zero
  1405  001498                     	endif
  1406  001498  0008               	tblrd		*
  1407  00149A  50F5               	movf	tablat,w,c
  1408  00149C  0A25               	xorlw	37
  1409  00149E  A4D8               	btfss	status,2,c
  1410  0014A0  EF54  F00A         	goto	u4991
  1411  0014A4  EF56  F00A         	goto	u4990
  1412  0014A8                     u4991:
  1413  0014A8  EF10  F00D         	goto	l4203
  1414  0014AC                     u4990:
  1415  0014AC                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1417  0014AC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  0014B0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  0014B4  2ADE               	incf	postinc2,f,c
  1420  0014B6  0E00               	movlw	0
  1421  0014B8  22DD               	addwfc	postdec2,f,c
  1422  0014BA                     
  1423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1424  0014BA  0E00               	movlw	0
  1425  0014BC  0100               	movlb	0	; () banked
  1426  0014BE  6FE2               	movwf	(_width+1)& (0+255),b
  1427  0014C0  0E00               	movlw	0
  1428  0014C2  6FE1               	movwf	_width& (0+255),b
  1429  0014C4  C0E1  F0E5         	movff	_width,_flags
  1430  0014C8  C0E2  F0E6         	movff	_width+1,_flags+1
  1431  0014CC                     
  1432                           ; BSR set to: 0
  1433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1434  0014CC  69E3               	setf	_prec& (0+255),b
  1435  0014CE  69E4               	setf	(_prec+1)& (0+255),b
  1436  0014D0                     
  1437                           ; BSR set to: 0
  1438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1439  0014D0  0E00               	movlw	0
  1440  0014D2  6FAC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1441  0014D4  0E00               	movlw	0
  1442  0014D6  6FAB               	movwf	vfpfcnvrt@done& (0+255),b
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1445  0014D8  EFB4  F00A         	goto	l4117
  1446  0014DC                     l4091:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1450  0014DC  81E5               	bsf	_flags& (0+255),0,b
  1451  0014DE                     l4093:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1455  0014DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1456  0014E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1457  0014E6  2ADE               	incf	postinc2,f,c
  1458  0014E8  0E00               	movlw	0
  1459  0014EA  22DD               	addwfc	postdec2,f,c
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1462  0014EC  EFB4  F00A         	goto	l4117
  1463  0014F0                     l4095:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1467  0014F0  83E5               	bsf	_flags& (0+255),1,b
  1468  0014F2  EF6F  F00A         	goto	l4093
  1469  0014F6                     l4099:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1473  0014F6  85E5               	bsf	_flags& (0+255),2,b
  1474  0014F8  EF6F  F00A         	goto	l4093
  1475  0014FC                     l4103:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1479  0014FC  87E5               	bsf	_flags& (0+255),3,b
  1480  0014FE  EF6F  F00A         	goto	l4093
  1481  001502                     l4107:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1485  001502  89E5               	bsf	_flags& (0+255),4,b
  1486  001504  EF6F  F00A         	goto	l4093
  1487  001508                     l4111:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1491  001508  0E00               	movlw	0
  1492  00150A  6FAC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1493  00150C  0E01               	movlw	1
  1494  00150E  6FAB               	movwf	vfpfcnvrt@done& (0+255),b
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1497  001510  EFB4  F00A         	goto	l4117
  1498  001514                     l4115:
  1499                           
  1500                           ; BSR set to: 0
  1501  001514  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502  001518  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503  00151C  CFDE FFF6          	movff	postinc2,tblptrl
  1504  001520  CFDD FFF7          	movff	postdec2,tblptrh
  1505  001524                     	if	0	;tblptru may be non-zero
  1506  001524                     	endif
  1507  001524                     	if	0	;tblptru may be non-zero
  1508  001524                     	endif
  1509  001524  0008               	tblrd		*
  1510  001526  50F5               	movf	tablat,w,c
  1511  001528  6E5C               	movwf	??_vfpfcnvrt^0,c
  1512  00152A  6A5D               	clrf	(??_vfpfcnvrt+1)^0,c
  1513                           
  1514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1515                           ; Switch size 1, requested type "simple"
  1516                           ; Number of cases is 1, Range of values is 0 to 0
  1517                           ; switch strategies available:
  1518                           ; Name         Instructions Cycles
  1519                           ; simple_byte            4     3 (average)
  1520                           ;	Chosen strategy is simple_byte
  1521  00152C  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1522  00152E  0A00               	xorlw	0	; case 0
  1523  001530  B4D8               	btfsc	status,2,c
  1524  001532  EF9D  F00A         	goto	l4485
  1525  001536  EF84  F00A         	goto	l4111
  1526  00153A                     l4485:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ; Switch size 1, requested type "simple"
  1530                           ; Number of cases is 5, Range of values is 32 to 48
  1531                           ; switch strategies available:
  1532                           ; Name         Instructions Cycles
  1533                           ; simple_byte           16     9 (average)
  1534                           ;	Chosen strategy is simple_byte
  1535  00153A  505C               	movf	??_vfpfcnvrt^0,w,c
  1536  00153C  0A20               	xorlw	32	; case 32
  1537  00153E  B4D8               	btfsc	status,2,c
  1538  001540  EF7E  F00A         	goto	l4103
  1539  001544  0A03               	xorlw	3	; case 35
  1540  001546  B4D8               	btfsc	status,2,c
  1541  001548  EF81  F00A         	goto	l4107
  1542  00154C  0A08               	xorlw	8	; case 43
  1543  00154E  B4D8               	btfsc	status,2,c
  1544  001550  EF7B  F00A         	goto	l4099
  1545  001554  0A06               	xorlw	6	; case 45
  1546  001556  B4D8               	btfsc	status,2,c
  1547  001558  EF6E  F00A         	goto	l4091
  1548  00155C  0A1D               	xorlw	29	; case 48
  1549  00155E  B4D8               	btfsc	status,2,c
  1550  001560  EF78  F00A         	goto	l4095
  1551  001564  EF84  F00A         	goto	l4111
  1552  001568                     l4117:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1556  001568  51AB               	movf	vfpfcnvrt@done& (0+255),w,b
  1557  00156A  11AC               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1558  00156C  B4D8               	btfsc	status,2,c
  1559  00156E  EFBB  F00A         	goto	u5001
  1560  001572  EFBD  F00A         	goto	u5000
  1561  001576                     u5001:
  1562  001576  EF8A  F00A         	goto	l4115
  1563  00157A                     u5000:
  1564  00157A                     
  1565                           ; BSR set to: 0
  1566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1567  00157A  A1E5               	btfss	_flags& (0+255),0,b
  1568  00157C  EFC2  F00A         	goto	u5011
  1569  001580  EFC4  F00A         	goto	u5010
  1570  001584                     u5011:
  1571  001584  EFC5  F00A         	goto	l4121
  1572  001588                     u5010:
  1573  001588                     
  1574                           ; BSR set to: 0
  1575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1576  001588  93E5               	bcf	_flags& (0+255),1,b
  1577  00158A                     l4121:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1581  00158A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582  00158E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583  001592  CFDE FFF6          	movff	postinc2,tblptrl
  1584  001596  CFDD FFF7          	movff	postdec2,tblptrh
  1585  00159A                     	if	0	;tblptru may be non-zero
  1586  00159A                     	endif
  1587  00159A                     	if	0	;tblptru may be non-zero
  1588  00159A                     	endif
  1589  00159A  0008               	tblrd		*
  1590  00159C  50F5               	movf	tablat,w,c
  1591  00159E  0A2E               	xorlw	46
  1592  0015A0  A4D8               	btfss	status,2,c
  1593  0015A2  EFD5  F00A         	goto	u5021
  1594  0015A6  EFD7  F00A         	goto	u5020
  1595  0015AA                     u5021:
  1596  0015AA  EF55  F00B         	goto	l4141
  1597  0015AE                     u5020:
  1598  0015AE                     
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1601  0015AE  0E00               	movlw	0
  1602  0015B0  6FE4               	movwf	(_prec+1)& (0+255),b
  1603  0015B2  0E00               	movlw	0
  1604  0015B4  6FE3               	movwf	_prec& (0+255),b
  1605  0015B6                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1608  0015B6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  0015BA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  0015BE  2ADE               	incf	postinc2,f,c
  1611  0015C0  0E00               	movlw	0
  1612  0015C2  22DD               	addwfc	postdec2,f,c
  1613  0015C4                     
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1616  0015C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617  0015C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618  0015CC  CFDE FFF6          	movff	postinc2,tblptrl
  1619  0015D0  CFDD FFF7          	movff	postdec2,tblptrh
  1620  0015D4                     	if	0	;tblptru may be non-zero
  1621  0015D4                     	endif
  1622  0015D4                     	if	0	;tblptru may be non-zero
  1623  0015D4                     	endif
  1624  0015D4  0008               	tblrd		*
  1625  0015D6  50F5               	movf	tablat,w,c
  1626  0015D8  0A2A               	xorlw	42
  1627  0015DA  A4D8               	btfss	status,2,c
  1628  0015DC  EFF2  F00A         	goto	u5031
  1629  0015E0  EFF4  F00A         	goto	u5030
  1630  0015E4                     u5031:
  1631  0015E4  EF11  F00B         	goto	l4131
  1632  0015E8                     u5030:
  1633  0015E8                     
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1636  0015E8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637  0015EC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638  0015F0  2ADE               	incf	postinc2,f,c
  1639  0015F2  0E00               	movlw	0
  1640  0015F4  22DD               	addwfc	postdec2,f,c
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1643  0015F6  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1644  0015FA  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1645  0015FE  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1646  001602  0E02               	movlw	2
  1647  001604  26DE               	addwf	postinc2,f,c
  1648  001606  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1649  00160A  0E00               	movlw	0
  1650  00160C  22DD               	addwfc	postdec2,f,c
  1651  00160E  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1652  001612  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1653  001616  CFDE F0E3          	movff	postinc2,_prec
  1654  00161A  CFDD F0E4          	movff	postdec2,_prec+1
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1657  00161E  EF55  F00B         	goto	l4141
  1658  001622                     l4131:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1662  001622  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  001626  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  00162A  CFDE F008          	movff	postinc2,atoi@s
  1665  00162E  CFDD F009          	movff	postdec2,atoi@s+1
  1666  001632  EC53  F016         	call	_atoi	;wreg free
  1667  001636  C008  F0E3         	movff	?_atoi,_prec
  1668  00163A  C009  F0E4         	movff	?_atoi+1,_prec+1
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1671  00163E  EF28  F00B         	goto	l4135
  1672  001642                     l4133:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1676  001642  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  001646  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  00164A  2ADE               	incf	postinc2,f,c
  1679  00164C  0E00               	movlw	0
  1680  00164E  22DD               	addwfc	postdec2,f,c
  1681  001650                     l4135:
  1682  001650  0ED0               	movlw	208
  1683  001652  6E5C               	movwf	??_vfpfcnvrt^0,c
  1684  001654  0EFF               	movlw	255
  1685  001656  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1686  001658  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1687  00165C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1688  001660  CFDE FFF6          	movff	postinc2,tblptrl
  1689  001664  CFDD FFF7          	movff	postdec2,tblptrh
  1690  001668                     	if	0	;tblptru may be non-zero
  1691  001668                     	endif
  1692  001668                     	if	0	;tblptru may be non-zero
  1693  001668                     	endif
  1694  001668  0008               	tblrd		*
  1695  00166A  50F5               	movf	tablat,w,c
  1696  00166C  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1697  00166E  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1698  001670  505C               	movf	??_vfpfcnvrt^0,w,c
  1699  001672  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1700  001674  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1701  001676  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1702  001678  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1703  00167A  E10A               	bnz	u5040
  1704  00167C  0E0A               	movlw	10
  1705  00167E  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1706  001680  A0D8               	btfss	status,0,c
  1707  001682  EF45  F00B         	goto	u5041
  1708  001686  EF48  F00B         	goto	u5040
  1709  00168A                     u5041:
  1710  00168A  0E01               	movlw	1
  1711  00168C  EF49  F00B         	goto	u5050
  1712  001690                     u5040:
  1713  001690  0E00               	movlw	0
  1714  001692                     u5050:
  1715  001692  0100               	movlb	0	; () banked
  1716  001694  6FAD               	movwf	_vfpfcnvrt$972& (0+255),b
  1717  001696  6BAE               	clrf	(_vfpfcnvrt$972+1)& (0+255),b
  1718  001698                     
  1719                           ; BSR set to: 0
  1720  001698  51AD               	movf	_vfpfcnvrt$972& (0+255),w,b
  1721  00169A  11AE               	iorwf	(_vfpfcnvrt$972+1)& (0+255),w,b
  1722  00169C  A4D8               	btfss	status,2,c
  1723  00169E  EF53  F00B         	goto	u5061
  1724  0016A2  EF55  F00B         	goto	u5060
  1725  0016A6                     u5061:
  1726  0016A6  EF21  F00B         	goto	l4133
  1727  0016AA                     u5060:
  1728  0016AA                     l4141:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1732  0016AA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1733  0016AE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1734  0016B2  CFDE FFF6          	movff	postinc2,tblptrl
  1735  0016B6  CFDD FFF7          	movff	postdec2,tblptrh
  1736  0016BA                     	if	0	;tblptru may be non-zero
  1737  0016BA                     	endif
  1738  0016BA                     	if	0	;tblptru may be non-zero
  1739  0016BA                     	endif
  1740  0016BA  0008               	tblrd		*
  1741  0016BC  50F5               	movf	tablat,w,c
  1742  0016BE  6E07               	movwf	tolower@c^0,c
  1743  0016C0  6A08               	clrf	(tolower@c+1)^0,c
  1744  0016C2  EC4C  F01D         	call	_tolower	;wreg free
  1745  0016C6  5007               	movf	?_tolower^0,w,c
  1746  0016C8  0100               	movlb	0	; () banked
  1747  0016CA  6FB5               	movwf	vfpfcnvrt@ct& (0+255),b
  1748  0016CC                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1751  0016CC  51B5               	movf	vfpfcnvrt@ct& (0+255),w,b
  1752  0016CE  B4D8               	btfsc	status,2,c
  1753  0016D0  EF6C  F00B         	goto	u5071
  1754  0016D4  EF6E  F00B         	goto	u5070
  1755  0016D8                     u5071:
  1756  0016D8  EFA8  F00B         	goto	l4151
  1757  0016DC                     u5070:
  1758  0016DC                     
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1761  0016DC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762  0016E0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763  0016E4  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1764  0016E8  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1765  0016EC  0E01               	movlw	1
  1766  0016EE  265C               	addwf	??_vfpfcnvrt^0,f,c
  1767  0016F0  0E00               	movlw	0
  1768  0016F2  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1769  0016F4  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1770  0016F8  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1771  0016FC                     	if	0	;tblptru may be non-zero
  1772  0016FC                     	endif
  1773  0016FC                     	if	0	;tblptru may be non-zero
  1774  0016FC                     	endif
  1775  0016FC  0008               	tblrd		*
  1776  0016FE  50F5               	movf	tablat,w,c
  1777  001700  6E07               	movwf	tolower@c^0,c
  1778  001702  6A08               	clrf	(tolower@c+1)^0,c
  1779  001704  EC4C  F01D         	call	_tolower	;wreg free
  1780  001708  5007               	movf	?_tolower^0,w,c
  1781  00170A  0100               	movlb	0	; () banked
  1782  00170C  6FB6               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1783  00170E                     
  1784                           ; BSR set to: 0
  1785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1786  00170E  51B6               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1787  001710  B4D8               	btfsc	status,2,c
  1788  001712  EF8D  F00B         	goto	u5081
  1789  001716  EF8F  F00B         	goto	u5080
  1790  00171A                     u5081:
  1791  00171A  EFA8  F00B         	goto	l4151
  1792  00171E                     u5080:
  1793  00171E                     
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1796  00171E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  001722  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  001726  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1799  00172A  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1800  00172E  0E02               	movlw	2
  1801  001730  265C               	addwf	??_vfpfcnvrt^0,f,c
  1802  001732  0E00               	movlw	0
  1803  001734  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1804  001736  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1805  00173A  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1806  00173E                     	if	0	;tblptru may be non-zero
  1807  00173E                     	endif
  1808  00173E                     	if	0	;tblptru may be non-zero
  1809  00173E                     	endif
  1810  00173E  0008               	tblrd		*
  1811  001740  50F5               	movf	tablat,w,c
  1812  001742  6E07               	movwf	tolower@c^0,c
  1813  001744  6A08               	clrf	(tolower@c+1)^0,c
  1814  001746  EC4C  F01D         	call	_tolower	;wreg free
  1815  00174A  5007               	movf	?_tolower^0,w,c
  1816  00174C  0100               	movlb	0	; () banked
  1817  00174E  6FB7               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1818  001750                     l4151:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1822  001750  0E66               	movlw	102
  1823  001752  19B5               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1824  001754  A4D8               	btfss	status,2,c
  1825  001756  EFAF  F00B         	goto	u5091
  1826  00175A  EFB1  F00B         	goto	u5090
  1827  00175E                     u5091:
  1828  00175E  EFF1  F00B         	goto	l4163
  1829  001762                     u5090:
  1830  001762                     
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1833  001762  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834  001766  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835  00176A  CFDE FFF6          	movff	postinc2,tblptrl
  1836  00176E  CFDD FFF7          	movff	postdec2,tblptrh
  1837  001772                     	if	0	;tblptru may be non-zero
  1838  001772                     	endif
  1839  001772                     	if	0	;tblptru may be non-zero
  1840  001772                     	endif
  1841  001772  0008               	tblrd		*
  1842  001774  CFF5 F0B8          	movff	tablat,vfpfcnvrt@c
  1843  001778                     
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1846  001778  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1847  00177C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1848  001780  2ADE               	incf	postinc2,f,c
  1849  001782  0E00               	movlw	0
  1850  001784  22DD               	addwfc	postdec2,f,c
  1851  001786                     
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1854  001786  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1855  00178A  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1856  00178E  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1857  001792  0E04               	movlw	4
  1858  001794  26DE               	addwf	postinc2,f,c
  1859  001796  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1860  00179A  0E00               	movlw	0
  1861  00179C  22DD               	addwfc	postdec2,f,c
  1862  00179E  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1863  0017A2  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1864  0017A6  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f
  1865  0017AA  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+1
  1866  0017AE  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+2
  1867  0017B2  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+3
  1868  0017B6                     l4159:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1872  0017B6  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1873  0017BA  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1874  0017BE  C0B1  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1875  0017C2  C0B2  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1876  0017C6  C0B3  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1877  0017CA  C0B4  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1878  0017CE  C0B8  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1879  0017D2  EC18  F004         	call	_efgtoa	;wreg free
  1880  0017D6  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1881  0017DA  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1882  0017DE  EF2B  F00D         	goto	l984
  1883  0017E2                     l4163:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1887  0017E2  0EB5               	movlw	low vfpfcnvrt@ct
  1888  0017E4  6E01               	movwf	strncmp@_l^0,c
  1889  0017E6  0E00               	movlw	high vfpfcnvrt@ct
  1890  0017E8  6E02               	movwf	(strncmp@_l+1)^0,c
  1891  0017EA  0E2B               	movlw	low STR_11
  1892  0017EC  6E03               	movwf	strncmp@_r^0,c
  1893  0017EE  0E08               	movlw	high STR_11
  1894  0017F0  6E04               	movwf	(strncmp@_r+1)^0,c
  1895  0017F2  0E00               	movlw	0
  1896  0017F4  6E06               	movwf	(strncmp@n+1)^0,c
  1897  0017F6  0E02               	movlw	2
  1898  0017F8  6E05               	movwf	strncmp@n^0,c
  1899  0017FA  ECC2  F019         	call	_strncmp	;wreg free
  1900  0017FE  5001               	movf	?_strncmp^0,w,c
  1901  001800  1002               	iorwf	(?_strncmp+1)^0,w,c
  1902  001802  A4D8               	btfss	status,2,c
  1903  001804  EF06  F00C         	goto	u5101
  1904  001808  EF08  F00C         	goto	u5100
  1905  00180C                     u5101:
  1906  00180C  EF84  F00C         	goto	l4179
  1907  001810                     u5100:
  1908  001810                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1910  001810  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1911  001814  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1912  001818  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1913  00181C  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1914  001820  0E01               	movlw	1
  1915  001822  265C               	addwf	??_vfpfcnvrt^0,f,c
  1916  001824  0E00               	movlw	0
  1917  001826  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1918  001828  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1919  00182C  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1920  001830                     	if	0	;tblptru may be non-zero
  1921  001830                     	endif
  1922  001830                     	if	0	;tblptru may be non-zero
  1923  001830                     	endif
  1924  001830  0008               	tblrd		*
  1925  001832  CFF5 F0B8          	movff	tablat,vfpfcnvrt@c
  1926  001836  0EBF               	movlw	191
  1927  001838  6E5C               	movwf	??_vfpfcnvrt^0,c
  1928  00183A  0EFF               	movlw	255
  1929  00183C  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1930  00183E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1931  001842  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1932  001846  CFDE FFF6          	movff	postinc2,tblptrl
  1933  00184A  CFDD FFF7          	movff	postdec2,tblptrh
  1934  00184E                     	if	0	;tblptru may be non-zero
  1935  00184E                     	endif
  1936  00184E                     	if	0	;tblptru may be non-zero
  1937  00184E                     	endif
  1938  00184E  0008               	tblrd		*
  1939  001850  50F5               	movf	tablat,w,c
  1940  001852  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1941  001854  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1942  001856  505C               	movf	??_vfpfcnvrt^0,w,c
  1943  001858  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1944  00185A  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1945  00185C  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1946  00185E  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1947  001860  E10A               	bnz	u5110
  1948  001862  0E1A               	movlw	26
  1949  001864  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1950  001866  A0D8               	btfss	status,0,c
  1951  001868  EF38  F00C         	goto	u5111
  1952  00186C  EF3B  F00C         	goto	u5110
  1953  001870                     u5111:
  1954  001870  0E01               	movlw	1
  1955  001872  EF3C  F00C         	goto	u5120
  1956  001876                     u5110:
  1957  001876  0E00               	movlw	0
  1958  001878                     u5120:
  1959  001878  0100               	movlb	0	; () banked
  1960  00187A  6FAF               	movwf	_vfpfcnvrt$976& (0+255),b
  1961  00187C  6BB0               	clrf	(_vfpfcnvrt$976+1)& (0+255),b
  1962  00187E                     
  1963                           ; BSR set to: 0
  1964  00187E  51AF               	movf	_vfpfcnvrt$976& (0+255),w,b
  1965  001880  11B0               	iorwf	(_vfpfcnvrt$976+1)& (0+255),w,b
  1966  001882  B4D8               	btfsc	status,2,c
  1967  001884  EF46  F00C         	goto	u5131
  1968  001888  EF48  F00C         	goto	u5130
  1969  00188C                     u5131:
  1970  00188C  EF62  F00C         	goto	l4173
  1971  001890                     u5130:
  1972  001890                     
  1973                           ; BSR set to: 0
  1974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1975  001890  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1976  001894  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1977  001898  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1978  00189C  0E04               	movlw	4
  1979  00189E  26DE               	addwf	postinc2,f,c
  1980  0018A0  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1981  0018A4  0E00               	movlw	0
  1982  0018A6  22DD               	addwfc	postdec2,f,c
  1983  0018A8  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1984  0018AC  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1985  0018B0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f
  1986  0018B4  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+1
  1987  0018B8  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+2
  1988  0018BC  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+3
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1991  0018C0  EF7A  F00C         	goto	l991
  1992  0018C4                     l4173:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1996  0018C4  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1997  0018C8  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1998  0018CC  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1999  0018D0  0E04               	movlw	4
  2000  0018D2  26DE               	addwf	postinc2,f,c
  2001  0018D4  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2002  0018D8  0E00               	movlw	0
  2003  0018DA  22DD               	addwfc	postdec2,f,c
  2004  0018DC  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2005  0018E0  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2006  0018E4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f
  2007  0018E8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+1
  2008  0018EC  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+2
  2009  0018F0  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+3
  2010  0018F4                     l991:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2014  0018F4  0E02               	movlw	2
  2015  0018F6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2016  0018FA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2017  0018FE  26DE               	addwf	postinc2,f,c
  2018  001900  0E00               	movlw	0
  2019  001902  22DD               	addwfc	postdec2,f,c
  2020  001904  EFDB  F00B         	goto	l4159
  2021  001908                     l4179:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2024  001908  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025  00190C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026  001910  CFDE FFF6          	movff	postinc2,tblptrl
  2027  001914  CFDD FFF7          	movff	postdec2,tblptrh
  2028  001918                     	if	0	;tblptru may be non-zero
  2029  001918                     	endif
  2030  001918                     	if	0	;tblptru may be non-zero
  2031  001918                     	endif
  2032  001918  0008               	tblrd		*
  2033  00191A  50F5               	movf	tablat,w,c
  2034  00191C  0A75               	xorlw	117
  2035  00191E  A4D8               	btfss	status,2,c
  2036  001920  EF94  F00C         	goto	u5141
  2037  001924  EF96  F00C         	goto	u5140
  2038  001928                     u5141:
  2039  001928  EFD8  F00C         	goto	l4187
  2040  00192C                     u5140:
  2041  00192C                     
  2042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2043  00192C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044  001930  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045  001934  2ADE               	incf	postinc2,f,c
  2046  001936  0E00               	movlw	0
  2047  001938  22DD               	addwfc	postdec2,f,c
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2050  00193A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2051  00193E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2052  001942  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  2053  001946  0E02               	movlw	2
  2054  001948  26DE               	addwf	postinc2,f,c
  2055  00194A  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2056  00194E  0E00               	movlw	0
  2057  001950  22DD               	addwfc	postdec2,f,c
  2058  001952  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2059  001956  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2060  00195A  CFDE F05E          	movff	postinc2,??_vfpfcnvrt+2
  2061  00195E  CFDD F05F          	movff	postdec2,??_vfpfcnvrt+3
  2062  001962  C05E  F0A3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2063  001966  C05F  F0A4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2064  00196A  0100               	movlb	0	; () banked
  2065  00196C  6BA5               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2066  00196E  6BA6               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2067  001970  6BA7               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2068  001972  6BA8               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2069  001974  6BA9               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2070  001976  6BAA               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2071  001978                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2074  001978  C09D  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2075  00197C  C09E  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2076  001980  C0A3  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2077  001984  C0A4  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2078  001988  C0A5  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2079  00198C  C0A6  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2080  001990  C0A7  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2081  001994  C0A8  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2082  001998  C0A9  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2083  00199C  C0AA  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2084  0019A0  EC77  F014         	call	_utoa	;wreg free
  2085  0019A4  C01C  F09D         	movff	?_utoa,?_vfpfcnvrt
  2086  0019A8  C01D  F09E         	movff	?_utoa+1,?_vfpfcnvrt+1
  2087  0019AC  EF2B  F00D         	goto	l984
  2088  0019B0                     l4187:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2091  0019B0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2092  0019B4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2093  0019B8  CFDE FFF6          	movff	postinc2,tblptrl
  2094  0019BC  CFDD FFF7          	movff	postdec2,tblptrh
  2095  0019C0                     	if	0	;tblptru may be non-zero
  2096  0019C0                     	endif
  2097  0019C0                     	if	0	;tblptru may be non-zero
  2098  0019C0                     	endif
  2099  0019C0  0008               	tblrd		*
  2100  0019C2  50F5               	movf	tablat,w,c
  2101  0019C4  0A25               	xorlw	37
  2102  0019C6  A4D8               	btfss	status,2,c
  2103  0019C8  EFE8  F00C         	goto	u5151
  2104  0019CC  EFEA  F00C         	goto	u5150
  2105  0019D0                     u5151:
  2106  0019D0  EF02  F00D         	goto	l4197
  2107  0019D4                     u5150:
  2108  0019D4                     
  2109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2110  0019D4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2111  0019D8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2112  0019DC  2ADE               	incf	postinc2,f,c
  2113  0019DE  0E00               	movlw	0
  2114  0019E0  22DD               	addwfc	postdec2,f,c
  2115  0019E2                     
  2116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2117  0019E2  0E00               	movlw	0
  2118  0019E4  6E02               	movwf	(fputc@c+1)^0,c
  2119  0019E6  0E25               	movlw	37
  2120  0019E8  6E01               	movwf	fputc@c^0,c
  2121  0019EA  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2122  0019EE  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2123  0019F2  ECFE  F01A         	call	_fputc	;wreg free
  2124  0019F6                     l4193:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2127  0019F6  0E00               	movlw	0
  2128  0019F8  0100               	movlb	0	; () banked
  2129  0019FA  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2130  0019FC  0E01               	movlw	1
  2131  0019FE  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2132  001A00  EF2B  F00D         	goto	l984
  2133  001A04                     l4197:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2136  001A04  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2137  001A08  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2138  001A0C  2ADE               	incf	postinc2,f,c
  2139  001A0E  0E00               	movlw	0
  2140  001A10  22DD               	addwfc	postdec2,f,c
  2141  001A12                     
  2142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2143  001A12  0E00               	movlw	0
  2144  001A14  0100               	movlb	0	; () banked
  2145  001A16  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2146  001A18  0E00               	movlw	0
  2147  001A1A  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2148  001A1C  EF2B  F00D         	goto	l984
  2149  001A20                     l4203:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2152  001A20  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2153  001A24  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2154  001A28  CFDE FFF6          	movff	postinc2,tblptrl
  2155  001A2C  CFDD FFF7          	movff	postdec2,tblptrh
  2156  001A30                     	if	0	;tblptru may be non-zero
  2157  001A30                     	endif
  2158  001A30                     	if	0	;tblptru may be non-zero
  2159  001A30                     	endif
  2160  001A30  0008               	tblrd		*
  2161  001A32  50F5               	movf	tablat,w,c
  2162  001A34  6E01               	movwf	fputc@c^0,c
  2163  001A36  6A02               	clrf	(fputc@c+1)^0,c
  2164  001A38  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2165  001A3C  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2166  001A40  ECFE  F01A         	call	_fputc	;wreg free
  2167  001A44                     
  2168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2169  001A44  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  001A48  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  001A4C  2ADE               	incf	postinc2,f,c
  2172  001A4E  0E00               	movlw	0
  2173  001A50  22DD               	addwfc	postdec2,f,c
  2174  001A52  EFFB  F00C         	goto	l4193
  2175  001A56                     l984:
  2176  001A56  0012               	return		;funcret
  2177  001A58                     __end_of_vfpfcnvrt:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _utoa *****************
  2181 ;; Defined at:
  2182 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2185 ;;		 -> sprintf@f(6), 
  2186 ;;  d               8   29[COMRAM] unsigned long long 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  n               8   49[COMRAM] unsigned long long 
  2189 ;;  i               2   57[COMRAM] int 
  2190 ;;  w               2   47[COMRAM] int 
  2191 ;;  p               2   45[COMRAM] int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   27[COMRAM] int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2201 ;;      Params:        10       0       0       0       0       0       0       0       0
  2202 ;;      Locals:        14       0       0       0       0       0       0       0       0
  2203 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2204 ;;      Totals:        32       0       0       0       0       0       0       0       0
  2205 ;;Total ram usage:       32 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 4
  2208 ;; This function calls:
  2209 ;;		___lodiv
  2210 ;;		___lomod
  2211 ;;		_pad
  2212 ;; This function is called by:
  2213 ;;		_vfpfcnvrt
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text4
  2218  0028EE                     __ptext4:
  2219                           	callstack 0
  2220  0028EE                     _utoa:
  2221                           	callstack 23
  2222  0028EE                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2224  0028EE  0100               	movlb	0	; () banked
  2225  0028F0  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  2226  0028F2  EF7D  F014         	goto	u4801
  2227  0028F6  EF7F  F014         	goto	u4800
  2228  0028FA                     u4801:
  2229  0028FA  EF80  F014         	goto	l3977
  2230  0028FE                     u4800:
  2231  0028FE                     
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2234  0028FE  93E5               	bcf	_flags& (0+255),1,b
  2235  002900                     l3977:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2239  002900  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  2240  002902  EF8D  F014         	goto	u4810
  2241  002906  51E4               	movf	(_prec+1)& (0+255),w,b
  2242  002908  E106               	bnz	u4811
  2243  00290A  05E3               	decf	_prec& (0+255),w,b
  2244  00290C  B0D8               	btfsc	status,0,c
  2245  00290E  EF8B  F014         	goto	u4811
  2246  002912  EF8D  F014         	goto	u4810
  2247  002916                     u4811:
  2248  002916  EF93  F014         	goto	l945
  2249  00291A                     u4810:
  2250  00291A                     
  2251                           ; BSR set to: 0
  2252  00291A  0E00               	movlw	0
  2253  00291C  6E2F               	movwf	(utoa@p+1)^0,c
  2254  00291E  0E01               	movlw	1
  2255  002920  6E2E               	movwf	utoa@p^0,c
  2256  002922  EF97  F014         	goto	l947
  2257  002926                     l945:
  2258                           
  2259                           ; BSR set to: 0
  2260  002926  C0E3  F02E         	movff	_prec,utoa@p
  2261  00292A  C0E4  F02F         	movff	_prec+1,utoa@p+1
  2262  00292E                     l947:
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2266  00292E  C0E1  F030         	movff	_width,utoa@w
  2267  002932  C0E2  F031         	movff	_width+1,utoa@w+1
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2270  002936  C01E  F032         	movff	utoa@d,utoa@n
  2271  00293A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2272  00293E  C020  F034         	movff	utoa@d+2,utoa@n+2
  2273  002942  C021  F035         	movff	utoa@d+3,utoa@n+3
  2274  002946  C022  F036         	movff	utoa@d+4,utoa@n+4
  2275  00294A  C023  F037         	movff	utoa@d+5,utoa@n+5
  2276  00294E  C024  F038         	movff	utoa@d+6,utoa@n+6
  2277  002952  C025  F039         	movff	utoa@d+7,utoa@n+7
  2278  002956                     
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2281  002956  0E00               	movlw	0
  2282  002958  6E3B               	movwf	(utoa@i+1)^0,c
  2283  00295A  0E4F               	movlw	79
  2284  00295C  6E3A               	movwf	utoa@i^0,c
  2285  00295E                     
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2288  00295E  0E00               	movlw	0
  2289  002960  0101               	movlb	1	; () banked
  2290  002962  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2293  002964  EF2A  F015         	goto	l3995
  2294  002968                     l3985:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  2297  002968  063A               	decf	utoa@i^0,f,c
  2298  00296A  A0D8               	btfss	status,0,c
  2299  00296C  063B               	decf	(utoa@i+1)^0,f,c
  2300  00296E                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2302  00296E  0E00               	movlw	low _dbuf
  2303  002970  243A               	addwf	utoa@i^0,w,c
  2304  002972  6ED9               	movwf	fsr2l,c
  2305  002974  0E01               	movlw	high _dbuf
  2306  002976  203B               	addwfc	(utoa@i+1)^0,w,c
  2307  002978  6EDA               	movwf	fsr2h,c
  2308  00297A  C032  F001         	movff	utoa@n,___lomod@dividend
  2309  00297E  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2310  002982  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2311  002986  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2312  00298A  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2313  00298E  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2314  002992  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2315  002996  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2316  00299A  0E0A               	movlw	10
  2317  00299C  6E09               	movwf	___lomod@divisor^0,c
  2318  00299E  0E00               	movlw	0
  2319  0029A0  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2320  0029A2  0E00               	movlw	0
  2321  0029A4  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2322  0029A6  0E00               	movlw	0
  2323  0029A8  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2324  0029AA  0E00               	movlw	0
  2325  0029AC  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2326  0029AE  0E00               	movlw	0
  2327  0029B0  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2328  0029B2  0E00               	movlw	0
  2329  0029B4  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2330  0029B6  0E00               	movlw	0
  2331  0029B8  6E10               	movwf	(___lomod@divisor+7)^0,c
  2332  0029BA  EC96  F01A         	call	___lomod	;wreg free
  2333  0029BE  C001  F026         	movff	?___lomod,??_utoa
  2334  0029C2  C002  F027         	movff	?___lomod+1,??_utoa+1
  2335  0029C6  C003  F028         	movff	?___lomod+2,??_utoa+2
  2336  0029CA  C004  F029         	movff	?___lomod+3,??_utoa+3
  2337  0029CE  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2338  0029D2  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2339  0029D6  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2340  0029DA  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2341  0029DE  5026               	movf	??_utoa^0,w,c
  2342  0029E0  0F30               	addlw	48
  2343  0029E2  6EDF               	movwf	indf2,c
  2344  0029E4                     
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  2346  0029E4  062E               	decf	utoa@p^0,f,c
  2347  0029E6  A0D8               	btfss	status,0,c
  2348  0029E8  062F               	decf	(utoa@p+1)^0,f,c
  2349  0029EA                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  2351  0029EA  0630               	decf	utoa@w^0,f,c
  2352  0029EC  A0D8               	btfss	status,0,c
  2353  0029EE  0631               	decf	(utoa@w+1)^0,f,c
  2354  0029F0                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2356  0029F0  C032  F001         	movff	utoa@n,___lodiv@dividend
  2357  0029F4  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2358  0029F8  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2359  0029FC  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2360  002A00  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2361  002A04  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2362  002A08  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2363  002A0C  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2364  002A10  0E0A               	movlw	10
  2365  002A12  6E09               	movwf	___lodiv@divisor^0,c
  2366  002A14  0E00               	movlw	0
  2367  002A16  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2368  002A18  0E00               	movlw	0
  2369  002A1A  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2370  002A1C  0E00               	movlw	0
  2371  002A1E  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2372  002A20  0E00               	movlw	0
  2373  002A22  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2374  002A24  0E00               	movlw	0
  2375  002A26  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2376  002A28  0E00               	movlw	0
  2377  002A2A  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2378  002A2C  0E00               	movlw	0
  2379  002A2E  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2380  002A30  EC4A  F019         	call	___lodiv	;wreg free
  2381  002A34  C001  F032         	movff	?___lodiv,utoa@n
  2382  002A38  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2383  002A3C  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2384  002A40  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2385  002A44  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2386  002A48  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2387  002A4C  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2388  002A50  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2389  002A54                     l3995:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2392  002A54  503A               	movf	utoa@i^0,w,c
  2393  002A56  103B               	iorwf	(utoa@i+1)^0,w,c
  2394  002A58  B4D8               	btfsc	status,2,c
  2395  002A5A  EF31  F015         	goto	u4821
  2396  002A5E  EF33  F015         	goto	u4820
  2397  002A62                     u4821:
  2398  002A62  EF64  F015         	goto	l4005
  2399  002A66                     u4820:
  2400  002A66  5032               	movf	utoa@n^0,w,c
  2401  002A68  1033               	iorwf	(utoa@n+1)^0,w,c
  2402  002A6A  1034               	iorwf	(utoa@n+2)^0,w,c
  2403  002A6C  1035               	iorwf	(utoa@n+3)^0,w,c
  2404  002A6E  1036               	iorwf	(utoa@n+4)^0,w,c
  2405  002A70  1037               	iorwf	(utoa@n+5)^0,w,c
  2406  002A72  1038               	iorwf	(utoa@n+6)^0,w,c
  2407  002A74  1039               	iorwf	(utoa@n+7)^0,w,c
  2408  002A76  A4D8               	btfss	status,2,c
  2409  002A78  EF40  F015         	goto	u4831
  2410  002A7C  EF42  F015         	goto	u4830
  2411  002A80                     u4831:
  2412  002A80  EFB4  F014         	goto	l3985
  2413  002A84                     u4830:
  2414  002A84  BE2F               	btfsc	(utoa@p+1)^0,7,c
  2415  002A86  EF4F  F015         	goto	u4840
  2416  002A8A  502F               	movf	(utoa@p+1)^0,w,c
  2417  002A8C  E106               	bnz	u4841
  2418  002A8E  042E               	decf	utoa@p^0,w,c
  2419  002A90  B0D8               	btfsc	status,0,c
  2420  002A92  EF4D  F015         	goto	u4841
  2421  002A96  EF4F  F015         	goto	u4840
  2422  002A9A                     u4841:
  2423  002A9A  EFB4  F014         	goto	l3985
  2424  002A9E                     u4840:
  2425  002A9E  BE31               	btfsc	(utoa@w+1)^0,7,c
  2426  002AA0  EF5A  F015         	goto	u4851
  2427  002AA4  5031               	movf	(utoa@w+1)^0,w,c
  2428  002AA6  E108               	bnz	u4850
  2429  002AA8  0430               	decf	utoa@w^0,w,c
  2430  002AAA  A0D8               	btfss	status,0,c
  2431  002AAC  EF5A  F015         	goto	u4851
  2432  002AB0  EF5C  F015         	goto	u4850
  2433  002AB4                     u4851:
  2434  002AB4  EF64  F015         	goto	l4005
  2435  002AB8                     u4850:
  2436  002AB8  0100               	movlb	0	; () banked
  2437  002ABA  B3E5               	btfsc	_flags& (0+255),1,b
  2438  002ABC  EF62  F015         	goto	u4861
  2439  002AC0  EF64  F015         	goto	u4860
  2440  002AC4                     u4861:
  2441  002AC4  EFB4  F014         	goto	l3985
  2442  002AC8                     u4860:
  2443  002AC8                     l4005:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2446  002AC8  C01C  F011         	movff	utoa@fp,pad@fp
  2447  002ACC  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2448  002AD0  0E00               	movlw	low _dbuf
  2449  002AD2  243A               	addwf	utoa@i^0,w,c
  2450  002AD4  6E13               	movwf	pad@buf^0,c
  2451  002AD6  0E01               	movlw	high _dbuf
  2452  002AD8  203B               	addwfc	(utoa@i+1)^0,w,c
  2453  002ADA  6E14               	movwf	(pad@buf+1)^0,c
  2454  002ADC  C030  F015         	movff	utoa@w,pad@p
  2455  002AE0  C031  F016         	movff	utoa@w+1,pad@p+1
  2456  002AE4  EC63  F01B         	call	_pad	;wreg free
  2457  002AE8  C011  F01C         	movff	?_pad,?_utoa
  2458  002AEC  C012  F01D         	movff	?_pad+1,?_utoa+1
  2459  002AF0  0012               	return		;funcret
  2460  002AF2                     __end_of_utoa:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function ___lomod *****************
  2464 ;; Defined at:
  2465 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  dividend        8    0[COMRAM] unsigned long long 
  2468 ;;  divisor         8    8[COMRAM] unsigned long long 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  counter         1   16[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  8    0[COMRAM] unsigned long long 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2480 ;;      Params:        16       0       0       0       0       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2483 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:       17 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_utoa
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text5
  2494  00352C                     __ptext5:
  2495                           	callstack 0
  2496  00352C                     ___lomod:
  2497                           	callstack 26
  2498  00352C  5009               	movf	___lomod@divisor^0,w,c
  2499  00352E  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2500  003530  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2501  003532  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2502  003534  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2503  003536  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2504  003538  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2505  00353A  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2506  00353C  B4D8               	btfsc	status,2,c
  2507  00353E  EFA3  F01A         	goto	u3891
  2508  003542  EFA5  F01A         	goto	u3890
  2509  003546                     u3891:
  2510  003546  EFED  F01A         	goto	l571
  2511  00354A                     u3890:
  2512  00354A  0E01               	movlw	1
  2513  00354C  6E11               	movwf	___lomod@counter^0,c
  2514  00354E  EFB3  F01A         	goto	l3537
  2515  003552                     l3535:
  2516  003552  90D8               	bcf	status,0,c
  2517  003554  3609               	rlcf	___lomod@divisor^0,f,c
  2518  003556  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2519  003558  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2520  00355A  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2521  00355C  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2522  00355E  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2523  003560  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2524  003562  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2525  003564  2A11               	incf	___lomod@counter^0,f,c
  2526  003566                     l3537:
  2527  003566  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2528  003568  EFB8  F01A         	goto	u3901
  2529  00356C  EFBA  F01A         	goto	u3900
  2530  003570                     u3901:
  2531  003570  EFA9  F01A         	goto	l3535
  2532  003574                     u3900:
  2533  003574                     l3539:
  2534  003574  5009               	movf	___lomod@divisor^0,w,c
  2535  003576  5C01               	subwf	___lomod@dividend^0,w,c
  2536  003578  500A               	movf	(___lomod@divisor+1)^0,w,c
  2537  00357A  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2538  00357C  500B               	movf	(___lomod@divisor+2)^0,w,c
  2539  00357E  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2540  003580  500C               	movf	(___lomod@divisor+3)^0,w,c
  2541  003582  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2542  003584  500D               	movf	(___lomod@divisor+4)^0,w,c
  2543  003586  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2544  003588  500E               	movf	(___lomod@divisor+5)^0,w,c
  2545  00358A  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2546  00358C  500F               	movf	(___lomod@divisor+6)^0,w,c
  2547  00358E  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2548  003590  5010               	movf	(___lomod@divisor+7)^0,w,c
  2549  003592  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2550  003594  A0D8               	btfss	status,0,c
  2551  003596  EFCF  F01A         	goto	u3911
  2552  00359A  EFD1  F01A         	goto	u3910
  2553  00359E                     u3911:
  2554  00359E  EFE1  F01A         	goto	l3543
  2555  0035A2                     u3910:
  2556  0035A2  5009               	movf	___lomod@divisor^0,w,c
  2557  0035A4  5E01               	subwf	___lomod@dividend^0,f,c
  2558  0035A6  500A               	movf	(___lomod@divisor+1)^0,w,c
  2559  0035A8  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2560  0035AA  500B               	movf	(___lomod@divisor+2)^0,w,c
  2561  0035AC  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2562  0035AE  500C               	movf	(___lomod@divisor+3)^0,w,c
  2563  0035B0  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2564  0035B2  500D               	movf	(___lomod@divisor+4)^0,w,c
  2565  0035B4  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2566  0035B6  500E               	movf	(___lomod@divisor+5)^0,w,c
  2567  0035B8  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2568  0035BA  500F               	movf	(___lomod@divisor+6)^0,w,c
  2569  0035BC  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2570  0035BE  5010               	movf	(___lomod@divisor+7)^0,w,c
  2571  0035C0  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2572  0035C2                     l3543:
  2573  0035C2  90D8               	bcf	status,0,c
  2574  0035C4  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2575  0035C6  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2576  0035C8  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2577  0035CA  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2578  0035CC  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2579  0035CE  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2580  0035D0  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2581  0035D2  3209               	rrcf	___lomod@divisor^0,f,c
  2582  0035D4  2E11               	decfsz	___lomod@counter^0,f,c
  2583  0035D6  EFBA  F01A         	goto	l3539
  2584  0035DA                     l571:
  2585  0035DA  C001  F001         	movff	___lomod@dividend,?___lomod
  2586  0035DE  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2587  0035E2  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2588  0035E6  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2589  0035EA  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2590  0035EE  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2591  0035F2  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2592  0035F6  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2593  0035FA  0012               	return		;funcret
  2594  0035FC                     __end_of___lomod:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function ___lodiv *****************
  2598 ;; Defined at:
  2599 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  dividend        8    0[COMRAM] unsigned long long 
  2602 ;;  divisor         8    8[COMRAM] unsigned long long 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  quotient        8   16[COMRAM] unsigned long long 
  2605 ;;  counter         1   24[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  8    0[COMRAM] unsigned long long 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:        16       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2618 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:       25 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_utoa
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text6
  2629  003294                     __ptext6:
  2630                           	callstack 0
  2631  003294                     ___lodiv:
  2632                           	callstack 26
  2633  003294  EE20  F011         	lfsr	2,___lodiv@quotient
  2634  003298  0E07               	movlw	7
  2635  00329A                     u3851:
  2636  00329A  6ADE               	clrf	postinc2,c
  2637  00329C  06E8               	decf	wreg,f,c
  2638  00329E  E2FD               	bc	u3851
  2639  0032A0  5009               	movf	___lodiv@divisor^0,w,c
  2640  0032A2  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2641  0032A4  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2642  0032A6  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2643  0032A8  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2644  0032AA  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2645  0032AC  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2646  0032AE  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2647  0032B0  B4D8               	btfsc	status,2,c
  2648  0032B2  EF5D  F019         	goto	u3861
  2649  0032B6  EF5F  F019         	goto	u3860
  2650  0032BA                     u3861:
  2651  0032BA  EFB1  F019         	goto	l561
  2652  0032BE                     u3860:
  2653  0032BE  0E01               	movlw	1
  2654  0032C0  6E19               	movwf	___lodiv@counter^0,c
  2655  0032C2  EF6D  F019         	goto	l3517
  2656  0032C6                     l3515:
  2657  0032C6  90D8               	bcf	status,0,c
  2658  0032C8  3609               	rlcf	___lodiv@divisor^0,f,c
  2659  0032CA  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2660  0032CC  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2661  0032CE  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2662  0032D0  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2663  0032D2  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2664  0032D4  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2665  0032D6  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2666  0032D8  2A19               	incf	___lodiv@counter^0,f,c
  2667  0032DA                     l3517:
  2668  0032DA  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2669  0032DC  EF72  F019         	goto	u3871
  2670  0032E0  EF74  F019         	goto	u3870
  2671  0032E4                     u3871:
  2672  0032E4  EF63  F019         	goto	l3515
  2673  0032E8                     u3870:
  2674  0032E8                     l3519:
  2675  0032E8  90D8               	bcf	status,0,c
  2676  0032EA  3611               	rlcf	___lodiv@quotient^0,f,c
  2677  0032EC  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2678  0032EE  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2679  0032F0  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2680  0032F2  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2681  0032F4  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2682  0032F6  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2683  0032F8  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2684  0032FA  5009               	movf	___lodiv@divisor^0,w,c
  2685  0032FC  5C01               	subwf	___lodiv@dividend^0,w,c
  2686  0032FE  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2687  003300  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2688  003302  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2689  003304  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2690  003306  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2691  003308  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2692  00330A  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2693  00330C  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2694  00330E  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2695  003310  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2696  003312  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2697  003314  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2698  003316  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2699  003318  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2700  00331A  A0D8               	btfss	status,0,c
  2701  00331C  EF92  F019         	goto	u3881
  2702  003320  EF94  F019         	goto	u3880
  2703  003324                     u3881:
  2704  003324  EFA5  F019         	goto	l3527
  2705  003328                     u3880:
  2706  003328  5009               	movf	___lodiv@divisor^0,w,c
  2707  00332A  5E01               	subwf	___lodiv@dividend^0,f,c
  2708  00332C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2709  00332E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2710  003330  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2711  003332  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2712  003334  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2713  003336  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2714  003338  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2715  00333A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2716  00333C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2717  00333E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2718  003340  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2719  003342  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2720  003344  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2721  003346  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2722  003348  8011               	bsf	___lodiv@quotient^0,0,c
  2723  00334A                     l3527:
  2724  00334A  90D8               	bcf	status,0,c
  2725  00334C  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2726  00334E  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2727  003350  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2728  003352  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2729  003354  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2730  003356  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2731  003358  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2732  00335A  3209               	rrcf	___lodiv@divisor^0,f,c
  2733  00335C  2E19               	decfsz	___lodiv@counter^0,f,c
  2734  00335E  EF74  F019         	goto	l3519
  2735  003362                     l561:
  2736  003362  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2737  003366  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2738  00336A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2739  00336E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2740  003372  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2741  003376  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2742  00337A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2743  00337E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2744  003382  0012               	return		;funcret
  2745  003384                     __end_of___lodiv:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _strncmp *****************
  2749 ;; Defined at:
  2750 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2753 ;;		 -> vfpfcnvrt@ct(3), 
  2754 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2755 ;;		 -> STR_13(3), 
  2756 ;;  n               2    4[COMRAM] unsigned int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2759 ;;		 -> STR_13(3), 
  2760 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2761 ;;		 -> vfpfcnvrt@ct(3), 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2    0[COMRAM] int 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         6       0       0       0       0       0       0       0       0
  2772 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2774 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2775 ;;Total ram usage:       11 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_vfpfcnvrt
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text7
  2785  003384                     __ptext7:
  2786                           	callstack 0
  2787  003384                     _strncmp:
  2788                           	callstack 27
  2789  003384  C001  F008         	movff	strncmp@_l,strncmp@l
  2790  003388  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2791  00338C  C003  F00A         	movff	strncmp@_r,strncmp@r
  2792  003390  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2793  003394  0605               	decf	strncmp@n^0,f,c
  2794  003396  A0D8               	btfss	status,0,c
  2795  003398  0606               	decf	(strncmp@n+1)^0,f,c
  2796  00339A  2805               	incf	strncmp@n^0,w,c
  2797  00339C  E106               	bnz	u4941
  2798  00339E  2806               	incf	(strncmp@n+1)^0,w,c
  2799  0033A0  A4D8               	btfss	status,2,c
  2800  0033A2  EFD5  F019         	goto	u4941
  2801  0033A6  EFD7  F019         	goto	u4940
  2802  0033AA                     u4941:
  2803  0033AA  EFE4  F019         	goto	l4059
  2804  0033AE                     u4940:
  2805  0033AE  0E00               	movlw	0
  2806  0033B0  6E02               	movwf	(?_strncmp+1)^0,c
  2807  0033B2  0E00               	movlw	0
  2808  0033B4  6E01               	movwf	?_strncmp^0,c
  2809  0033B6  EF2C  F01A         	goto	l1113
  2810  0033BA                     l4057:
  2811  0033BA  4A08               	infsnz	strncmp@l^0,f,c
  2812  0033BC  2A09               	incf	(strncmp@l+1)^0,f,c
  2813  0033BE  4A0A               	infsnz	strncmp@r^0,f,c
  2814  0033C0  2A0B               	incf	(strncmp@r+1)^0,f,c
  2815  0033C2  0605               	decf	strncmp@n^0,f,c
  2816  0033C4  A0D8               	btfss	status,0,c
  2817  0033C6  0606               	decf	(strncmp@n+1)^0,f,c
  2818  0033C8                     l4059:
  2819  0033C8  C008  FFD9         	movff	strncmp@l,fsr2l
  2820  0033CC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2821  0033D0  50DF               	movf	indf2,w,c
  2822  0033D2  B4D8               	btfsc	status,2,c
  2823  0033D4  EFEE  F019         	goto	u4951
  2824  0033D8  EFF0  F019         	goto	u4950
  2825  0033DC                     u4951:
  2826  0033DC  EF1B  F01A         	goto	l4067
  2827  0033E0                     u4950:
  2828  0033E0  C00A  FFF6         	movff	strncmp@r,tblptrl
  2829  0033E4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2830  0033E8                     	if	0	;tblptru may be non-zero
  2831  0033E8                     	endif
  2832  0033E8                     	if	0	;tblptru may be non-zero
  2833  0033E8                     	endif
  2834  0033E8  0008               	tblrd		*
  2835  0033EA  50F5               	movf	tablat,w,c
  2836  0033EC  0900               	iorlw	0
  2837  0033EE  B4D8               	btfsc	status,2,c
  2838  0033F0  EFFC  F019         	goto	u4961
  2839  0033F4  EFFE  F019         	goto	u4960
  2840  0033F8                     u4961:
  2841  0033F8  EF1B  F01A         	goto	l4067
  2842  0033FC                     u4960:
  2843  0033FC  5005               	movf	strncmp@n^0,w,c
  2844  0033FE  1006               	iorwf	(strncmp@n+1)^0,w,c
  2845  003400  B4D8               	btfsc	status,2,c
  2846  003402  EF05  F01A         	goto	u4971
  2847  003406  EF07  F01A         	goto	u4970
  2848  00340A                     u4971:
  2849  00340A  EF1B  F01A         	goto	l4067
  2850  00340E                     u4970:
  2851  00340E  C008  FFD9         	movff	strncmp@l,fsr2l
  2852  003412  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2853  003416  50DF               	movf	indf2,w,c
  2854  003418  6E07               	movwf	??_strncmp^0,c
  2855  00341A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2856  00341E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2857  003422                     	if	0	;tblptru may be non-zero
  2858  003422                     	endif
  2859  003422                     	if	0	;tblptru may be non-zero
  2860  003422                     	endif
  2861  003422  0008               	tblrd		*
  2862  003424  50F5               	movf	tablat,w,c
  2863  003426  1807               	xorwf	??_strncmp^0,w,c
  2864  003428  B4D8               	btfsc	status,2,c
  2865  00342A  EF19  F01A         	goto	u4981
  2866  00342E  EF1B  F01A         	goto	u4980
  2867  003432                     u4981:
  2868  003432  EFDD  F019         	goto	l4057
  2869  003436                     u4980:
  2870  003436                     l4067:
  2871  003436  C008  FFD9         	movff	strncmp@l,fsr2l
  2872  00343A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2873  00343E  50DF               	movf	indf2,w,c
  2874  003440  6E07               	movwf	??_strncmp^0,c
  2875  003442  C00A  FFF6         	movff	strncmp@r,tblptrl
  2876  003446  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2877  00344A                     	if	0	;tblptru may be non-zero
  2878  00344A                     	endif
  2879  00344A                     	if	0	;tblptru may be non-zero
  2880  00344A                     	endif
  2881  00344A  0008               	tblrd		*
  2882  00344C  50F5               	movf	tablat,w,c
  2883  00344E  5C07               	subwf	??_strncmp^0,w,c
  2884  003450  6E01               	movwf	?_strncmp^0,c
  2885  003452  6A02               	clrf	(?_strncmp+1)^0,c
  2886  003454  A0D8               	btfss	status,0,c
  2887  003456  0602               	decf	(?_strncmp+1)^0,f,c
  2888  003458                     l1113:
  2889  003458  0012               	return		;funcret
  2890  00345A                     __end_of_strncmp:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _efgtoa *****************
  2894 ;; Defined at:
  2895 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2898 ;;		 -> sprintf@f(6), 
  2899 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2900 ;;  c               1   90[COMRAM] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  u               4   57[BANK0 ] unsigned char 
  2903 ;;  g               4   49[BANK0 ] unsigned char 
  2904 ;;  l               4   43[BANK0 ] unsigned char 
  2905 ;;  h               4   39[BANK0 ] unsigned char 
  2906 ;;  ou              4   25[BANK0 ] unsigned char 
  2907 ;;  n               2   55[BANK0 ] int 
  2908 ;;  e               2   53[BANK0 ] int 
  2909 ;;  i               2   47[BANK0 ] int 
  2910 ;;  w               2   35[BANK0 ] int 
  2911 ;;  p               2   33[BANK0 ] int 
  2912 ;;  sign            2   31[BANK0 ] int 
  2913 ;;  d               2   29[BANK0 ] int 
  2914 ;;  m               2   23[BANK0 ] int 
  2915 ;;  ne              2   21[BANK0 ] int 
  2916 ;;  pp              2   19[BANK0 ] int 
  2917 ;;  t               2   17[BANK0 ] int 
  2918 ;;  mode            1   38[BANK0 ] unsigned char 
  2919 ;;  nmode           1   37[BANK0 ] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  2   84[COMRAM] int 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2929 ;;      Params:         7       0       0       0       0       0       0       0       0
  2930 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2931 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2932 ;;      Totals:         7      61       0       0       0       0       0       0       0
  2933 ;;Total ram usage:       68 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; Hardware stack levels required when called: 4
  2936 ;; This function calls:
  2937 ;;		___awdiv
  2938 ;;		___awmod
  2939 ;;		___fladd
  2940 ;;		___fldiv
  2941 ;;		___fleq
  2942 ;;		___flge
  2943 ;;		___flmul
  2944 ;;		___flneg
  2945 ;;		___flsub
  2946 ;;		___fltol
  2947 ;;		___fpclassifyf
  2948 ;;		_floorf
  2949 ;;		_isupper
  2950 ;;		_pad
  2951 ;;		_strcpy
  2952 ;;		_tolower
  2953 ;; This function is called by:
  2954 ;;		_vfpfcnvrt
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text8
  2959  000830                     __ptext8:
  2960                           	callstack 0
  2961  000830                     _efgtoa:
  2962                           	callstack 23
  2963  000830                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2965  000830  0E00               	movlw	0
  2966  000832  0100               	movlb	0	; () banked
  2967  000834  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2968  000836  0E00               	movlw	0
  2969  000838  6F7F               	movwf	efgtoa@sign& (0+255),b
  2970  00083A                     
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2973  00083A  C057  F091         	movff	efgtoa@f,efgtoa@g
  2974  00083E  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2975  000842  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2976  000846  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2977  00084A                     
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2980  00084A  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2981  00084C  EF2C  F004         	goto	u4260
  2982  000850  EF2A  F004         	goto	u4261
  2983  000854                     u4261:
  2984  000854  EF42  F004         	goto	l3675
  2985  000858                     u4260:
  2986  000858                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2989  000858  0E00               	movlw	0
  2990  00085A  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2991  00085C  0E01               	movlw	1
  2992  00085E  6F7F               	movwf	efgtoa@sign& (0+255),b
  2993  000860                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2996  000860  C091  F001         	movff	efgtoa@g,___flneg@f1
  2997  000864  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2998  000868  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2999  00086C  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3000  000870  ECCE  F01E         	call	___flneg	;wreg free
  3001  000874  C001  F091         	movff	?___flneg,efgtoa@g
  3002  000878  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  3003  00087C  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  3004  000880  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  3005  000884                     l3675:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3008  000884  0E00               	movlw	0
  3009  000886  0100               	movlb	0	; () banked
  3010  000888  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  3011  00088A  0E00               	movlw	0
  3012  00088C  6F97               	movwf	efgtoa@n& (0+255),b
  3013  00088E                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3016  00088E  C0E1  F083         	movff	_width,efgtoa@w
  3017  000892  C0E2  F084         	movff	_width+1,efgtoa@w+1
  3018  000896                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3021  000896  517F               	movf	efgtoa@sign& (0+255),w,b
  3022  000898  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3023  00089A  A4D8               	btfss	status,2,c
  3024  00089C  EF52  F004         	goto	u4271
  3025  0008A0  EF54  F004         	goto	u4270
  3026  0008A4                     u4271:
  3027  0008A4  EF5B  F004         	goto	l3683
  3028  0008A8                     u4270:
  3029  0008A8                     
  3030                           ; BSR set to: 0
  3031  0008A8  A5E5               	btfss	_flags& (0+255),2,b
  3032  0008AA  EF59  F004         	goto	u4281
  3033  0008AE  EF5B  F004         	goto	u4280
  3034  0008B2                     u4281:
  3035  0008B2  EF75  F004         	goto	l3695
  3036  0008B6                     u4280:
  3037  0008B6                     l3683:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3041  0008B6  517F               	movf	efgtoa@sign& (0+255),w,b
  3042  0008B8  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3043  0008BA  A4D8               	btfss	status,2,c
  3044  0008BC  EF62  F004         	goto	u4291
  3045  0008C0  EF64  F004         	goto	u4290
  3046  0008C4                     u4291:
  3047  0008C4  EF6A  F004         	goto	l3687
  3048  0008C8                     u4290:
  3049  0008C8                     
  3050                           ; BSR set to: 0
  3051  0008C8  0E00               	movlw	0
  3052  0008CA  6F66               	movwf	(_efgtoa$939+1)& (0+255),b
  3053  0008CC  0E2B               	movlw	43
  3054  0008CE  6F65               	movwf	_efgtoa$939& (0+255),b
  3055  0008D0  EF6E  F004         	goto	l3689
  3056  0008D4                     l3687:
  3057                           
  3058                           ; BSR set to: 0
  3059  0008D4  0E00               	movlw	0
  3060  0008D6  6F66               	movwf	(_efgtoa$939+1)& (0+255),b
  3061  0008D8  0E2D               	movlw	45
  3062  0008DA  6F65               	movwf	_efgtoa$939& (0+255),b
  3063  0008DC                     l3689:
  3064                           
  3065                           ; BSR set to: 0
  3066  0008DC  C065  F100         	movff	_efgtoa$939,_dbuf
  3067  0008E0                     
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3070  0008E0  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3071  0008E2  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3072  0008E4                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3075  0008E4  0783               	decf	efgtoa@w& (0+255),f,b
  3076  0008E6  A0D8               	btfss	status,0,c
  3077  0008E8  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3078  0008EA                     l3695:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3082  0008EA  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  3083  0008EE  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3084  0008F2  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3085  0008F6  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3086  0008FA  ECCB  F018         	call	___fpclassifyf	;wreg free
  3087  0008FE  0401               	decf	?___fpclassifyf^0,w,c
  3088  000900  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3089  000902  A4D8               	btfss	status,2,c
  3090  000904  EF86  F004         	goto	u4301
  3091  000908  EF88  F004         	goto	u4300
  3092  00090C                     u4301:
  3093  00090C  EFDF  F004         	goto	l3713
  3094  000910                     u4300:
  3095  000910  0EBF               	movlw	191
  3096  000912  0100               	movlb	0	; () banked
  3097  000914  6F60               	movwf	??_efgtoa& (0+255),b
  3098  000916  0EFF               	movlw	255
  3099  000918  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3100  00091A  505B               	movf	efgtoa@c^0,w,c
  3101  00091C  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3102  00091E  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3103  000920  5160               	movf	??_efgtoa& (0+255),w,b
  3104  000922  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3105  000924  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3106  000926  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3107  000928  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3108  00092A  E10A               	bnz	u4310
  3109  00092C  0E1A               	movlw	26
  3110  00092E  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3111  000930  A0D8               	btfss	status,0,c
  3112  000932  EF9D  F004         	goto	u4311
  3113  000936  EFA0  F004         	goto	u4310
  3114  00093A                     u4311:
  3115  00093A  0E01               	movlw	1
  3116  00093C  EFA1  F004         	goto	u4320
  3117  000940                     u4310:
  3118  000940  0E00               	movlw	0
  3119  000942                     u4320:
  3120  000942  6F67               	movwf	_efgtoa$940& (0+255),b
  3121  000944  6B68               	clrf	(_efgtoa$940+1)& (0+255),b
  3122  000946                     
  3123                           ; BSR set to: 0
  3124  000946  5167               	movf	_efgtoa$940& (0+255),w,b
  3125  000948  1168               	iorwf	(_efgtoa$940+1)& (0+255),w,b
  3126  00094A  B4D8               	btfsc	status,2,c
  3127  00094C  EFAA  F004         	goto	u4331
  3128  000950  EFAC  F004         	goto	u4330
  3129  000954                     u4331:
  3130  000954  EFBA  F004         	goto	l3705
  3131  000958                     u4330:
  3132  000958                     
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3135  000958  0E00               	movlw	low _dbuf
  3136  00095A  2597               	addwf	efgtoa@n& (0+255),w,b
  3137  00095C  6E01               	movwf	strcpy@dest^0,c
  3138  00095E  0E01               	movlw	high _dbuf
  3139  000960  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3140  000962  6E02               	movwf	(strcpy@dest+1)^0,c
  3141  000964  0E1B               	movlw	low STR_3
  3142  000966  6E03               	movwf	strcpy@src^0,c
  3143  000968  0E08               	movlw	high STR_3
  3144  00096A  6E04               	movwf	(strcpy@src+1)^0,c
  3145  00096C  EC7C  F01D         	call	_strcpy	;wreg free
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3148  000970  EFC6  F004         	goto	l3707
  3149  000974                     l3705:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3153  000974  0E00               	movlw	low _dbuf
  3154  000976  2597               	addwf	efgtoa@n& (0+255),w,b
  3155  000978  6E01               	movwf	strcpy@dest^0,c
  3156  00097A  0E01               	movlw	high _dbuf
  3157  00097C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3158  00097E  6E02               	movwf	(strcpy@dest+1)^0,c
  3159  000980  0E23               	movlw	low STR_4
  3160  000982  6E03               	movwf	strcpy@src^0,c
  3161  000984  0E08               	movlw	high STR_4
  3162  000986  6E04               	movwf	(strcpy@src+1)^0,c
  3163  000988  EC7C  F01D         	call	_strcpy	;wreg free
  3164  00098C                     l3707:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3167  00098C  0100               	movlb	0	; () banked
  3168  00098E  0EFD               	movlw	253
  3169  000990  2783               	addwf	efgtoa@w& (0+255),f,b
  3170  000992  0EFF               	movlw	255
  3171  000994  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3172  000996                     l3709:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3175  000996  C055  F011         	movff	efgtoa@fp,pad@fp
  3176  00099A  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3177  00099E  0E00               	movlw	low _dbuf
  3178  0009A0  6E13               	movwf	pad@buf^0,c
  3179  0009A2  0E01               	movlw	high _dbuf
  3180  0009A4  6E14               	movwf	(pad@buf+1)^0,c
  3181  0009A6  C083  F015         	movff	efgtoa@w,pad@p
  3182  0009AA  C084  F016         	movff	efgtoa@w+1,pad@p+1
  3183  0009AE  EC63  F01B         	call	_pad	;wreg free
  3184  0009B2  C011  F055         	movff	?_pad,?_efgtoa
  3185  0009B6  C012  F056         	movff	?_pad+1,?_efgtoa+1
  3186  0009BA  EF43  F00A         	goto	l865
  3187  0009BE                     l3713:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3190  0009BE  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  3191  0009C2  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3192  0009C6  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3193  0009CA  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3194  0009CE  ECCB  F018         	call	___fpclassifyf	;wreg free
  3195  0009D2  5001               	movf	?___fpclassifyf^0,w,c
  3196  0009D4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3197  0009D6  A4D8               	btfss	status,2,c
  3198  0009D8  EFF0  F004         	goto	u4341
  3199  0009DC  EFF2  F004         	goto	u4340
  3200  0009E0                     u4341:
  3201  0009E0  EF32  F005         	goto	l3731
  3202  0009E4                     u4340:
  3203  0009E4  0EBF               	movlw	191
  3204  0009E6  0100               	movlb	0	; () banked
  3205  0009E8  6F60               	movwf	??_efgtoa& (0+255),b
  3206  0009EA  0EFF               	movlw	255
  3207  0009EC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3208  0009EE  505B               	movf	efgtoa@c^0,w,c
  3209  0009F0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3210  0009F2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3211  0009F4  5160               	movf	??_efgtoa& (0+255),w,b
  3212  0009F6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3213  0009F8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3214  0009FA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3215  0009FC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3216  0009FE  E10A               	bnz	u4350
  3217  000A00  0E1A               	movlw	26
  3218  000A02  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3219  000A04  A0D8               	btfss	status,0,c
  3220  000A06  EF07  F005         	goto	u4351
  3221  000A0A  EF0A  F005         	goto	u4350
  3222  000A0E                     u4351:
  3223  000A0E  0E01               	movlw	1
  3224  000A10  EF0B  F005         	goto	u4360
  3225  000A14                     u4350:
  3226  000A14  0E00               	movlw	0
  3227  000A16                     u4360:
  3228  000A16  6F69               	movwf	_efgtoa$945& (0+255),b
  3229  000A18  6B6A               	clrf	(_efgtoa$945+1)& (0+255),b
  3230  000A1A                     
  3231                           ; BSR set to: 0
  3232  000A1A  5169               	movf	_efgtoa$945& (0+255),w,b
  3233  000A1C  116A               	iorwf	(_efgtoa$945+1)& (0+255),w,b
  3234  000A1E  B4D8               	btfsc	status,2,c
  3235  000A20  EF14  F005         	goto	u4371
  3236  000A24  EF16  F005         	goto	u4370
  3237  000A28                     u4371:
  3238  000A28  EF24  F005         	goto	l3723
  3239  000A2C                     u4370:
  3240  000A2C                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3243  000A2C  0E00               	movlw	low _dbuf
  3244  000A2E  2597               	addwf	efgtoa@n& (0+255),w,b
  3245  000A30  6E01               	movwf	strcpy@dest^0,c
  3246  000A32  0E01               	movlw	high _dbuf
  3247  000A34  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3248  000A36  6E02               	movwf	(strcpy@dest+1)^0,c
  3249  000A38  0E1F               	movlw	low STR_7
  3250  000A3A  6E03               	movwf	strcpy@src^0,c
  3251  000A3C  0E08               	movlw	high STR_7
  3252  000A3E  6E04               	movwf	(strcpy@src+1)^0,c
  3253  000A40  EC7C  F01D         	call	_strcpy	;wreg free
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3256  000A44  EFC6  F004         	goto	l3707
  3257  000A48                     l3723:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3261  000A48  0E00               	movlw	low _dbuf
  3262  000A4A  2597               	addwf	efgtoa@n& (0+255),w,b
  3263  000A4C  6E01               	movwf	strcpy@dest^0,c
  3264  000A4E  0E01               	movlw	high _dbuf
  3265  000A50  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3266  000A52  6E02               	movwf	(strcpy@dest+1)^0,c
  3267  000A54  0E27               	movlw	low STR_8
  3268  000A56  6E03               	movwf	strcpy@src^0,c
  3269  000A58  0E08               	movlw	high STR_8
  3270  000A5A  6E04               	movwf	(strcpy@src+1)^0,c
  3271  000A5C  EC7C  F01D         	call	_strcpy	;wreg free
  3272  000A60  EFC6  F004         	goto	l3707
  3273  000A64                     l3731:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3276  000A64  0E00               	movlw	0
  3277  000A66  0100               	movlb	0	; () banked
  3278  000A68  6F99               	movwf	efgtoa@u& (0+255),b
  3279  000A6A  0E00               	movlw	0
  3280  000A6C  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3281  000A6E  0E80               	movlw	128
  3282  000A70  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3283  000A72  0E3F               	movlw	63
  3284  000A74  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3287  000A76  0E00               	movlw	0
  3288  000A78  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3289  000A7A  0E00               	movlw	0
  3290  000A7C  6F95               	movwf	efgtoa@e& (0+255),b
  3291  000A7E                     
  3292                           ; BSR set to: 0
  3293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3294  000A7E  C091  F001         	movff	efgtoa@g,___fleq@ff1
  3295  000A82  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3296  000A86  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3297  000A8A  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3298  000A8E  0E00               	movlw	0
  3299  000A90  6E05               	movwf	___fleq@ff2^0,c
  3300  000A92  0E00               	movlw	0
  3301  000A94  6E06               	movwf	(___fleq@ff2+1)^0,c
  3302  000A96  0E00               	movlw	0
  3303  000A98  6E07               	movwf	(___fleq@ff2+2)^0,c
  3304  000A9A  0E00               	movlw	0
  3305  000A9C  6E08               	movwf	(___fleq@ff2+3)^0,c
  3306  000A9E  EC80  F01C         	call	___fleq	;wreg free
  3307  000AA2  B0D8               	btfsc	status,0,c
  3308  000AA4  EF56  F005         	goto	u4381
  3309  000AA8  EF58  F005         	goto	u4380
  3310  000AAC                     u4381:
  3311  000AAC  EFDB  F005         	goto	l3749
  3312  000AB0                     u4380:
  3313  000AB0  EF77  F005         	goto	l3741
  3314  000AB4                     l3737:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3317  000AB4  C099  F00F         	movff	efgtoa@u,___flmul@b
  3318  000AB8  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3319  000ABC  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3320  000AC0  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3321  000AC4  0E00               	movlw	0
  3322  000AC6  6E13               	movwf	___flmul@a^0,c
  3323  000AC8  0E00               	movlw	0
  3324  000ACA  6E14               	movwf	(___flmul@a+1)^0,c
  3325  000ACC  0E20               	movlw	32
  3326  000ACE  6E15               	movwf	(___flmul@a+2)^0,c
  3327  000AD0  0E41               	movlw	65
  3328  000AD2  6E16               	movwf	(___flmul@a+3)^0,c
  3329  000AD4  EC8C  F00F         	call	___flmul	;wreg free
  3330  000AD8  C00F  F099         	movff	?___flmul,efgtoa@u
  3331  000ADC  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  3332  000AE0  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  3333  000AE4  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  3334  000AE8                     
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3336  000AE8  0100               	movlb	0	; () banked
  3337  000AEA  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3338  000AEC  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3339  000AEE                     l3741:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3342  000AEE  C091  F028         	movff	efgtoa@g,___flge@ff1
  3343  000AF2  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3344  000AF6  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3345  000AFA  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3346  000AFE  0E00               	movlw	0
  3347  000B00  6E13               	movwf	___flmul@a^0,c
  3348  000B02  0E00               	movlw	0
  3349  000B04  6E14               	movwf	(___flmul@a+1)^0,c
  3350  000B06  0E20               	movlw	32
  3351  000B08  6E15               	movwf	(___flmul@a+2)^0,c
  3352  000B0A  0E41               	movlw	65
  3353  000B0C  6E16               	movwf	(___flmul@a+3)^0,c
  3354  000B0E  C099  F00F         	movff	efgtoa@u,___flmul@b
  3355  000B12  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3356  000B16  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3357  000B1A  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3358  000B1E  EC8C  F00F         	call	___flmul	;wreg free
  3359  000B22  C00F  F02C         	movff	?___flmul,___flge@ff2
  3360  000B26  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3361  000B2A  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3362  000B2E  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3363  000B32  EC49  F018         	call	___flge	;wreg free
  3364  000B36  B0D8               	btfsc	status,0,c
  3365  000B38  EFA0  F005         	goto	u4391
  3366  000B3C  EFA2  F005         	goto	u4390
  3367  000B40                     u4391:
  3368  000B40  EF5A  F005         	goto	l3737
  3369  000B44                     u4390:
  3370  000B44  EFC2  F005         	goto	l3747
  3371  000B48                     l3743:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3374  000B48  C099  F028         	movff	efgtoa@u,___fldiv@b
  3375  000B4C  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3376  000B50  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3377  000B54  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3378  000B58  0E00               	movlw	0
  3379  000B5A  6E2C               	movwf	___fldiv@a^0,c
  3380  000B5C  0E00               	movlw	0
  3381  000B5E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3382  000B60  0E20               	movlw	32
  3383  000B62  6E2E               	movwf	(___fldiv@a+2)^0,c
  3384  000B64  0E41               	movlw	65
  3385  000B66  6E2F               	movwf	(___fldiv@a+3)^0,c
  3386  000B68  ECA1  F011         	call	___fldiv	;wreg free
  3387  000B6C  C028  F099         	movff	?___fldiv,efgtoa@u
  3388  000B70  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3389  000B74  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3390  000B78  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3391  000B7C                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3393  000B7C  0100               	movlb	0	; () banked
  3394  000B7E  0795               	decf	efgtoa@e& (0+255),f,b
  3395  000B80  A0D8               	btfss	status,0,c
  3396  000B82  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  3397  000B84                     l3747:
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3400  000B84  C091  F028         	movff	efgtoa@g,___flge@ff1
  3401  000B88  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3402  000B8C  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3403  000B90  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3404  000B94  C099  F02C         	movff	efgtoa@u,___flge@ff2
  3405  000B98  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3406  000B9C  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3407  000BA0  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3408  000BA4  EC49  F018         	call	___flge	;wreg free
  3409  000BA8  A0D8               	btfss	status,0,c
  3410  000BAA  EFD9  F005         	goto	u4401
  3411  000BAE  EFDB  F005         	goto	u4400
  3412  000BB2                     u4401:
  3413  000BB2  EFA4  F005         	goto	l3743
  3414  000BB6                     u4400:
  3415  000BB6                     l3749:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3418  000BB6  C05B  F007         	movff	efgtoa@c,tolower@c
  3419  000BBA  6A08               	clrf	(tolower@c+1)^0,c
  3420  000BBC  EC4C  F01D         	call	_tolower	;wreg free
  3421  000BC0  5007               	movf	?_tolower^0,w,c
  3422  000BC2  0100               	movlb	0	; () banked
  3423  000BC4  6F86               	movwf	efgtoa@mode& (0+255),b
  3424  000BC6                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3427  000BC6  C086  F085         	movff	efgtoa@mode,efgtoa@nmode
  3428  000BCA                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3431  000BCA  0E67               	movlw	103
  3432  000BCC  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3433  000BCE  A4D8               	btfss	status,2,c
  3434  000BD0  EFEC  F005         	goto	u4411
  3435  000BD4  EFEE  F005         	goto	u4410
  3436  000BD8                     u4411:
  3437  000BD8  EF14  F006         	goto	l3763
  3438  000BDC                     u4410:
  3439  000BDC                     
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3442  000BDC  51E3               	movf	_prec& (0+255),w,b
  3443  000BDE  11E4               	iorwf	(_prec+1)& (0+255),w,b
  3444  000BE0  A4D8               	btfss	status,2,c
  3445  000BE2  EFF5  F005         	goto	u4421
  3446  000BE6  EFF7  F005         	goto	u4420
  3447  000BEA                     u4421:
  3448  000BEA  EFFB  F005         	goto	l3759
  3449  000BEE                     u4420:
  3450  000BEE                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3453  000BEE  0E00               	movlw	0
  3454  000BF0  6FE4               	movwf	(_prec+1)& (0+255),b
  3455  000BF2  0E01               	movlw	1
  3456  000BF4  6FE3               	movwf	_prec& (0+255),b
  3457  000BF6                     l3759:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3461  000BF6  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  3462  000BF8  EF08  F006         	goto	u4430
  3463  000BFC  51E4               	movf	(_prec+1)& (0+255),w,b
  3464  000BFE  E106               	bnz	u4431
  3465  000C00  05E3               	decf	_prec& (0+255),w,b
  3466  000C02  B0D8               	btfsc	status,0,c
  3467  000C04  EF06  F006         	goto	u4431
  3468  000C08  EF08  F006         	goto	u4430
  3469  000C0C                     u4431:
  3470  000C0C  EF0E  F006         	goto	l883
  3471  000C10                     u4430:
  3472  000C10                     l3761:
  3473                           
  3474                           ; BSR set to: 0
  3475  000C10  0E00               	movlw	0
  3476  000C12  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3477  000C14  0E06               	movlw	6
  3478  000C16  6F81               	movwf	efgtoa@p& (0+255),b
  3479  000C18  EF1D  F006         	goto	l3769
  3480  000C1C                     l883:
  3481                           
  3482                           ; BSR set to: 0
  3483  000C1C  C0E3  F081         	movff	_prec,efgtoa@p
  3484  000C20  C0E4  F082         	movff	_prec+1,efgtoa@p+1
  3485  000C24  EF1D  F006         	goto	l3769
  3486  000C28                     l3763:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3490  000C28  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  3491  000C2A  EF19  F006         	goto	u4441
  3492  000C2E  EF1B  F006         	goto	u4440
  3493  000C32                     u4441:
  3494  000C32  EF08  F006         	goto	l3761
  3495  000C36                     u4440:
  3496  000C36  EF0E  F006         	goto	l883
  3497  000C3A                     l3769:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3501  000C3A  0E67               	movlw	103
  3502  000C3C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3503  000C3E  A4D8               	btfss	status,2,c
  3504  000C40  EF24  F006         	goto	u4451
  3505  000C44  EF26  F006         	goto	u4450
  3506  000C48                     u4451:
  3507  000C48  EF55  F006         	goto	l3779
  3508  000C4C                     u4450:
  3509  000C4C                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3512  000C4C  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3513  000C4E  EF34  F006         	goto	u4460
  3514  000C52  0EFC               	movlw	252
  3515  000C54  5D95               	subwf	efgtoa@e& (0+255),w,b
  3516  000C56  0EFF               	movlw	255
  3517  000C58  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3518  000C5A  A0D8               	btfss	status,0,c
  3519  000C5C  EF32  F006         	goto	u4461
  3520  000C60  EF34  F006         	goto	u4460
  3521  000C64                     u4461:
  3522  000C64  EF53  F006         	goto	l3777
  3523  000C68                     u4460:
  3524  000C68                     
  3525                           ; BSR set to: 0
  3526  000C68  0EFF               	movlw	255
  3527  000C6A  6F60               	movwf	??_efgtoa& (0+255),b
  3528  000C6C  0EFF               	movlw	255
  3529  000C6E  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3530  000C70  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  3531  000C74  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  3532  000C78  5160               	movf	??_efgtoa& (0+255),w,b
  3533  000C7A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3534  000C7C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3535  000C7E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3536  000C80  5195               	movf	efgtoa@e& (0+255),w,b
  3537  000C82  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3538  000C84  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3539  000C86  0A80               	xorlw	128
  3540  000C88  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  3541  000C8A  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3542  000C8C  0A80               	xorlw	128
  3543  000C8E  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3544  000C90  A0D8               	btfss	status,0,c
  3545  000C92  EF4D  F006         	goto	u4471
  3546  000C96  EF4F  F006         	goto	u4470
  3547  000C9A                     u4471:
  3548  000C9A  EF53  F006         	goto	l3777
  3549  000C9E                     u4470:
  3550  000C9E                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3553  000C9E  0E66               	movlw	102
  3554  000CA0  6F85               	movwf	efgtoa@nmode& (0+255),b
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3557  000CA2  EF55  F006         	goto	l3779
  3558  000CA6                     l3777:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3562  000CA6  0E65               	movlw	101
  3563  000CA8  6F85               	movwf	efgtoa@nmode& (0+255),b
  3564  000CAA                     l3779:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3568  000CAA  C081  F077         	movff	efgtoa@p,efgtoa@m
  3569  000CAE  C082  F078         	movff	efgtoa@p+1,efgtoa@m+1
  3570  000CB2                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3573  000CB2  0E67               	movlw	103
  3574  000CB4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3575  000CB6  A4D8               	btfss	status,2,c
  3576  000CB8  EF60  F006         	goto	u4481
  3577  000CBC  EF62  F006         	goto	u4480
  3578  000CC0                     u4481:
  3579  000CC0  EF72  F006         	goto	l3787
  3580  000CC4                     u4480:
  3581  000CC4                     
  3582                           ; BSR set to: 0
  3583  000CC4  0E66               	movlw	102
  3584  000CC6  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3585  000CC8  A4D8               	btfss	status,2,c
  3586  000CCA  EF69  F006         	goto	u4491
  3587  000CCE  EF6B  F006         	goto	u4490
  3588  000CD2                     u4491:
  3589  000CD2  EF74  F006         	goto	l3789
  3590  000CD6                     u4490:
  3591  000CD6                     
  3592                           ; BSR set to: 0
  3593  000CD6  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3594  000CD8  EF72  F006         	goto	u4500
  3595  000CDC  EF70  F006         	goto	u4501
  3596  000CE0                     u4501:
  3597  000CE0  EF74  F006         	goto	l3789
  3598  000CE4                     u4500:
  3599  000CE4                     l3787:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3603  000CE4  4B77               	infsnz	efgtoa@m& (0+255),f,b
  3604  000CE6  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  3605  000CE8                     l3789:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3609  000CE8  0E66               	movlw	102
  3610  000CEA  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3611  000CEC  A4D8               	btfss	status,2,c
  3612  000CEE  EF7B  F006         	goto	u4511
  3613  000CF2  EF7D  F006         	goto	u4510
  3614  000CF6                     u4511:
  3615  000CF6  EF9D  F006         	goto	l3799
  3616  000CFA                     u4510:
  3617  000CFA                     
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3620  000CFA  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3621  000CFC  EF84  F006         	goto	u4520
  3622  000D00  EF82  F006         	goto	u4521
  3623  000D04                     u4521:
  3624  000D04  EF90  F006         	goto	l3795
  3625  000D08                     u4520:
  3626  000D08                     
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3629  000D08  0E00               	movlw	0
  3630  000D0A  6F99               	movwf	efgtoa@u& (0+255),b
  3631  000D0C  0E00               	movlw	0
  3632  000D0E  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3633  000D10  0E80               	movlw	128
  3634  000D12  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3635  000D14  0E3F               	movlw	63
  3636  000D16  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3639  000D18  0E00               	movlw	0
  3640  000D1A  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3641  000D1C  0E00               	movlw	0
  3642  000D1E  6F95               	movwf	efgtoa@e& (0+255),b
  3643  000D20                     l3795:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3647  000D20  0E67               	movlw	103
  3648  000D22  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3649  000D24  B4D8               	btfsc	status,2,c
  3650  000D26  EF97  F006         	goto	u4531
  3651  000D2A  EF99  F006         	goto	u4530
  3652  000D2E                     u4531:
  3653  000D2E  EF9D  F006         	goto	l3799
  3654  000D32                     u4530:
  3655  000D32                     
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3658  000D32  5195               	movf	efgtoa@e& (0+255),w,b
  3659  000D34  2777               	addwf	efgtoa@m& (0+255),f,b
  3660  000D36  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3661  000D38  2378               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3662  000D3A                     l3799:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3666  000D3A  0E00               	movlw	0
  3667  000D3C  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3668  000D3E  0E00               	movlw	0
  3669  000D40  6F8F               	movwf	efgtoa@i& (0+255),b
  3670  000D42                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3673  000D42  C091  F087         	movff	efgtoa@g,efgtoa@h
  3674  000D46  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  3675  000D4A  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  3676  000D4E  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  3677  000D52                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3680  000D52  C099  F079         	movff	efgtoa@u,efgtoa@ou
  3681  000D56  C09A  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  3682  000D5A  C09B  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  3683  000D5E  C09C  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3686  000D62  EF2E  F007         	goto	l3813
  3687  000D66                     l3805:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3691  000D66  C087  F028         	movff	efgtoa@h,___fldiv@b
  3692  000D6A  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3693  000D6E  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3694  000D72  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3695  000D76  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3696  000D7A  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3697  000D7E  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3698  000D82  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3699  000D86  ECA1  F011         	call	___fldiv	;wreg free
  3700  000D8A  C028  F041         	movff	?___fldiv,floorf@x
  3701  000D8E  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3702  000D92  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3703  000D96  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3704  000D9A  EC6E  F013         	call	_floorf	;wreg free
  3705  000D9E  C041  F08B         	movff	?_floorf,efgtoa@l
  3706  000DA2  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3707  000DA6  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3708  000DAA  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3711  000DAE  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3712  000DB2  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3713  000DB6  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3714  000DBA  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3715  000DBE  ECC6  F017         	call	___fltol	;wreg free
  3716  000DC2  C001  F07D         	movff	?___fltol,efgtoa@d
  3717  000DC6  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3718  000DCA                     
  3719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3720  000DCA  C087  F028         	movff	efgtoa@h,___flsub@b
  3721  000DCE  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3722  000DD2  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3723  000DD6  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3724  000DDA  C099  F013         	movff	efgtoa@u,___flmul@a
  3725  000DDE  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3726  000DE2  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3727  000DE6  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3728  000DEA  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3729  000DEE  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3730  000DF2  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3731  000DF6  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3732  000DFA  EC8C  F00F         	call	___flmul	;wreg free
  3733  000DFE  C00F  F02C         	movff	?___flmul,___flsub@a
  3734  000E02  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3735  000E06  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3736  000E0A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3737  000E0E  EC2A  F01E         	call	___flsub	;wreg free
  3738  000E12  C028  F087         	movff	?___flsub,efgtoa@h
  3739  000E16  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3740  000E1A  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3741  000E1E  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3742  000E22                     
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3744  000E22  C099  F028         	movff	efgtoa@u,___fldiv@b
  3745  000E26  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3746  000E2A  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3747  000E2E  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3748  000E32  0E00               	movlw	0
  3749  000E34  6E2C               	movwf	___fldiv@a^0,c
  3750  000E36  0E00               	movlw	0
  3751  000E38  6E2D               	movwf	(___fldiv@a+1)^0,c
  3752  000E3A  0E20               	movlw	32
  3753  000E3C  6E2E               	movwf	(___fldiv@a+2)^0,c
  3754  000E3E  0E41               	movlw	65
  3755  000E40  6E2F               	movwf	(___fldiv@a+3)^0,c
  3756  000E42  ECA1  F011         	call	___fldiv	;wreg free
  3757  000E46  C028  F099         	movff	?___fldiv,efgtoa@u
  3758  000E4A  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3759  000E4E  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3760  000E52  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3761  000E56                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3763  000E56  0100               	movlb	0	; () banked
  3764  000E58  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3765  000E5A  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3766  000E5C                     l3813:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3770  000E5C  5177               	movf	efgtoa@m& (0+255),w,b
  3771  000E5E  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3772  000E60  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3773  000E62  0A80               	xorlw	128
  3774  000E64  6F60               	movwf	??_efgtoa& (0+255),b
  3775  000E66  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  3776  000E68  0A80               	xorlw	128
  3777  000E6A  5960               	subwfb	??_efgtoa& (0+255),w,b
  3778  000E6C  A0D8               	btfss	status,0,c
  3779  000E6E  EF3B  F007         	goto	u4541
  3780  000E72  EF3D  F007         	goto	u4540
  3781  000E76                     u4541:
  3782  000E76  EFB3  F006         	goto	l3805
  3783  000E7A                     u4540:
  3784  000E7A                     
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3787  000E7A  C099  F00F         	movff	efgtoa@u,___flmul@b
  3788  000E7E  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3789  000E82  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3790  000E86  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3791  000E8A  0E00               	movlw	0
  3792  000E8C  6E13               	movwf	___flmul@a^0,c
  3793  000E8E  0E00               	movlw	0
  3794  000E90  6E14               	movwf	(___flmul@a+1)^0,c
  3795  000E92  0EA0               	movlw	160
  3796  000E94  6E15               	movwf	(___flmul@a+2)^0,c
  3797  000E96  0E40               	movlw	64
  3798  000E98  6E16               	movwf	(___flmul@a+3)^0,c
  3799  000E9A  EC8C  F00F         	call	___flmul	;wreg free
  3800  000E9E  C00F  F08B         	movff	?___flmul,efgtoa@l
  3801  000EA2  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  3802  000EA6  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  3803  000EAA  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  3804  000EAE                     
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3806  000EAE  C087  F028         	movff	efgtoa@h,___flge@ff1
  3807  000EB2  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3808  000EB6  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3809  000EBA  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3810  000EBE  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  3811  000EC2  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3812  000EC6  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3813  000ECA  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3814  000ECE  EC49  F018         	call	___flge	;wreg free
  3815  000ED2  B0D8               	btfsc	status,0,c
  3816  000ED4  EF6E  F007         	goto	u4551
  3817  000ED8  EF70  F007         	goto	u4550
  3818  000EDC                     u4551:
  3819  000EDC  EF7B  F007         	goto	l3821
  3820  000EE0                     u4550:
  3821  000EE0                     
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3823  000EE0  0E00               	movlw	0
  3824  000EE2  0100               	movlb	0	; () banked
  3825  000EE4  6F8B               	movwf	efgtoa@l& (0+255),b
  3826  000EE6  0E00               	movlw	0
  3827  000EE8  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3828  000EEA  0E00               	movlw	0
  3829  000EEC  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3830  000EEE  0E00               	movlw	0
  3831  000EF0  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3834  000EF2  EFA4  F007         	goto	l3827
  3835  000EF6                     l3821:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3838  000EF6  C087  F001         	movff	efgtoa@h,___fleq@ff1
  3839  000EFA  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3840  000EFE  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3841  000F02  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3842  000F06  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  3843  000F0A  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3844  000F0E  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3845  000F12  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3846  000F16  EC80  F01C         	call	___fleq	;wreg free
  3847  000F1A  A0D8               	btfss	status,0,c
  3848  000F1C  EF92  F007         	goto	u4561
  3849  000F20  EF94  F007         	goto	u4560
  3850  000F24                     u4561:
  3851  000F24  EFA4  F007         	goto	l3827
  3852  000F28                     u4560:
  3853  000F28  0100               	movlb	0	; () banked
  3854  000F2A  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3855  000F2C  EF9A  F007         	goto	u4571
  3856  000F30  EF9C  F007         	goto	u4570
  3857  000F34                     u4571:
  3858  000F34  EFA4  F007         	goto	l3827
  3859  000F38                     u4570:
  3860  000F38                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3863  000F38  0E00               	movlw	0
  3864  000F3A  6F8B               	movwf	efgtoa@l& (0+255),b
  3865  000F3C  0E00               	movlw	0
  3866  000F3E  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3867  000F40  0E00               	movlw	0
  3868  000F42  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3869  000F44  0E00               	movlw	0
  3870  000F46  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3871  000F48                     l3827:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3874  000F48  C091  F001         	movff	efgtoa@g,___fladd@b
  3875  000F4C  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  3876  000F50  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  3877  000F54  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  3878  000F58  C08B  F005         	movff	efgtoa@l,___fladd@a
  3879  000F5C  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3880  000F60  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3881  000F64  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3882  000F68  EC2C  F00D         	call	___fladd	;wreg free
  3883  000F6C  C001  F087         	movff	?___fladd,efgtoa@h
  3884  000F70  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  3885  000F74  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  3886  000F78  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  3887  000F7C                     
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3889  000F7C  C087  F028         	movff	efgtoa@h,___flge@ff1
  3890  000F80  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3891  000F84  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3892  000F88  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3893  000F8C  0E00               	movlw	0
  3894  000F8E  6E13               	movwf	___flmul@a^0,c
  3895  000F90  0E00               	movlw	0
  3896  000F92  6E14               	movwf	(___flmul@a+1)^0,c
  3897  000F94  0E20               	movlw	32
  3898  000F96  6E15               	movwf	(___flmul@a+2)^0,c
  3899  000F98  0E41               	movlw	65
  3900  000F9A  6E16               	movwf	(___flmul@a+3)^0,c
  3901  000F9C  C079  F00F         	movff	efgtoa@ou,___flmul@b
  3902  000FA0  C07A  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3903  000FA4  C07B  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3904  000FA8  C07C  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3905  000FAC  EC8C  F00F         	call	___flmul	;wreg free
  3906  000FB0  C00F  F02C         	movff	?___flmul,___flge@ff2
  3907  000FB4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3908  000FB8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3909  000FBC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3910  000FC0  EC49  F018         	call	___flge	;wreg free
  3911  000FC4  A0D8               	btfss	status,0,c
  3912  000FC6  EFE7  F007         	goto	u4581
  3913  000FCA  EFE9  F007         	goto	u4580
  3914  000FCE                     u4581:
  3915  000FCE  EF12  F008         	goto	l3839
  3916  000FD2                     u4580:
  3917  000FD2                     
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3919  000FD2  0100               	movlb	0	; () banked
  3920  000FD4  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3921  000FD6  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3922  000FD8                     
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3925  000FD8  C079  F00F         	movff	efgtoa@ou,___flmul@b
  3926  000FDC  C07A  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3927  000FE0  C07B  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3928  000FE4  C07C  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3929  000FE8  0E00               	movlw	0
  3930  000FEA  6E13               	movwf	___flmul@a^0,c
  3931  000FEC  0E00               	movlw	0
  3932  000FEE  6E14               	movwf	(___flmul@a+1)^0,c
  3933  000FF0  0E20               	movlw	32
  3934  000FF2  6E15               	movwf	(___flmul@a+2)^0,c
  3935  000FF4  0E41               	movlw	65
  3936  000FF6  6E16               	movwf	(___flmul@a+3)^0,c
  3937  000FF8  EC8C  F00F         	call	___flmul	;wreg free
  3938  000FFC  C00F  F079         	movff	?___flmul,efgtoa@ou
  3939  001000  C010  F07A         	movff	?___flmul+1,efgtoa@ou+1
  3940  001004  C011  F07B         	movff	?___flmul+2,efgtoa@ou+2
  3941  001008  C012  F07C         	movff	?___flmul+3,efgtoa@ou+3
  3942  00100C                     
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3944  00100C  0E66               	movlw	102
  3945  00100E  0100               	movlb	0	; () banked
  3946  001010  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3947  001012  A4D8               	btfss	status,2,c
  3948  001014  EF0E  F008         	goto	u4591
  3949  001018  EF10  F008         	goto	u4590
  3950  00101C                     u4591:
  3951  00101C  EF12  F008         	goto	l3839
  3952  001020                     u4590:
  3953  001020                     
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3956  001020  4B77               	infsnz	efgtoa@m& (0+255),f,b
  3957  001022  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  3958  001024                     l3839:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3961  001024  C079  F099         	movff	efgtoa@ou,efgtoa@u
  3962  001028  C07A  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3963  00102C  C07B  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3964  001030  C07C  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3965  001034                     
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3967  001034  0E65               	movlw	101
  3968  001036  0100               	movlb	0	; () banked
  3969  001038  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3970  00103A  B4D8               	btfsc	status,2,c
  3971  00103C  EF22  F008         	goto	u4601
  3972  001040  EF24  F008         	goto	u4600
  3973  001044                     u4601:
  3974  001044  EF2A  F008         	goto	l3845
  3975  001048                     u4600:
  3976  001048                     
  3977                           ; BSR set to: 0
  3978  001048  C095  F075         	movff	efgtoa@e,efgtoa@ne
  3979  00104C  C096  F076         	movff	efgtoa@e+1,efgtoa@ne+1
  3980  001050  EF2E  F008         	goto	l911
  3981  001054                     l3845:
  3982                           
  3983                           ; BSR set to: 0
  3984  001054  0E00               	movlw	0
  3985  001056  6F76               	movwf	(efgtoa@ne+1)& (0+255),b
  3986  001058  0E00               	movlw	0
  3987  00105A  6F75               	movwf	efgtoa@ne& (0+255),b
  3988  00105C                     l911:
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3992  00105C  0E00               	movlw	0
  3993  00105E  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  3994  001060  0E00               	movlw	0
  3995  001062  6F73               	movwf	efgtoa@pp& (0+255),b
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3998  001064  0E00               	movlw	0
  3999  001066  6F72               	movwf	(efgtoa@t+1)& (0+255),b
  4000  001068  0E00               	movlw	0
  4001  00106A  6F71               	movwf	efgtoa@t& (0+255),b
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4004  00106C  0E00               	movlw	0
  4005  00106E  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  4006  001070  0E00               	movlw	0
  4007  001072  6F8F               	movwf	efgtoa@i& (0+255),b
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4010  001074  EF29  F009         	goto	l3895
  4011  001078                     l3847:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4015  001078  C087  F028         	movff	efgtoa@h,___fldiv@b
  4016  00107C  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4017  001080  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4018  001084  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4019  001088  C099  F02C         	movff	efgtoa@u,___fldiv@a
  4020  00108C  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4021  001090  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4022  001094  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4023  001098  ECA1  F011         	call	___fldiv	;wreg free
  4024  00109C  C028  F041         	movff	?___fldiv,floorf@x
  4025  0010A0  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4026  0010A4  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4027  0010A8  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4028  0010AC  EC6E  F013         	call	_floorf	;wreg free
  4029  0010B0  C041  F08B         	movff	?_floorf,efgtoa@l
  4030  0010B4  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  4031  0010B8  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  4032  0010BC  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4035  0010C0  C08B  F001         	movff	efgtoa@l,___fltol@f1
  4036  0010C4  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4037  0010C8  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4038  0010CC  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4039  0010D0  ECC6  F017         	call	___fltol	;wreg free
  4040  0010D4  C001  F07D         	movff	?___fltol,efgtoa@d
  4041  0010D8  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  4042  0010DC                     
  4043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4044  0010DC  0100               	movlb	0	; () banked
  4045  0010DE  B9E5               	btfsc	_flags& (0+255),4,b
  4046  0010E0  EF74  F008         	goto	u4611
  4047  0010E4  EF76  F008         	goto	u4610
  4048  0010E8                     u4611:
  4049  0010E8  EF93  F008         	goto	l3859
  4050  0010EC                     u4610:
  4051  0010EC                     
  4052                           ; BSR set to: 0
  4053  0010EC  517D               	movf	efgtoa@d& (0+255),w,b
  4054  0010EE  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4055  0010F0  A4D8               	btfss	status,2,c
  4056  0010F2  EF7D  F008         	goto	u4621
  4057  0010F6  EF7F  F008         	goto	u4620
  4058  0010FA                     u4621:
  4059  0010FA  EF93  F008         	goto	l3859
  4060  0010FE                     u4620:
  4061  0010FE                     
  4062                           ; BSR set to: 0
  4063  0010FE  0E67               	movlw	103
  4064  001100  1986               	xorwf	efgtoa@mode& (0+255),w,b
  4065  001102  A4D8               	btfss	status,2,c
  4066  001104  EF86  F008         	goto	u4631
  4067  001108  EF88  F008         	goto	u4630
  4068  00110C                     u4631:
  4069  00110C  EF93  F008         	goto	l3859
  4070  001110                     u4630:
  4071  001110                     
  4072                           ; BSR set to: 0
  4073  001110  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4074  001112  EF8F  F008         	goto	u4640
  4075  001116  EF8D  F008         	goto	u4641
  4076  00111A                     u4641:
  4077  00111A  EF93  F008         	goto	l3859
  4078  00111E                     u4640:
  4079  00111E                     
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4082  00111E  4B71               	infsnz	efgtoa@t& (0+255),f,b
  4083  001120  2B72               	incf	(efgtoa@t+1)& (0+255),f,b
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4086  001122  EFDD  F008         	goto	l3887
  4087  001126                     l3859:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4091  001126  5173               	movf	efgtoa@pp& (0+255),w,b
  4092  001128  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4093  00112A  A4D8               	btfss	status,2,c
  4094  00112C  EF9A  F008         	goto	u4651
  4095  001130  EF9C  F008         	goto	u4650
  4096  001134                     u4651:
  4097  001134  EFC6  F008         	goto	l3879
  4098  001138                     u4650:
  4099  001138                     
  4100                           ; BSR set to: 0
  4101  001138  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4102  00113A  EFA3  F008         	goto	u4660
  4103  00113E  EFA1  F008         	goto	u4661
  4104  001142                     u4661:
  4105  001142  EFC6  F008         	goto	l3879
  4106  001146                     u4660:
  4107  001146                     
  4108                           ; BSR set to: 0
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4110  001146  0E00               	movlw	low _dbuf
  4111  001148  2597               	addwf	efgtoa@n& (0+255),w,b
  4112  00114A  6ED9               	movwf	fsr2l,c
  4113  00114C  0E01               	movlw	high _dbuf
  4114  00114E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4115  001150  6EDA               	movwf	fsr2h,c
  4116  001152  0E2E               	movlw	46
  4117  001154  6EDF               	movwf	indf2,c
  4118  001156                     
  4119                           ; BSR set to: 0
  4120  001156  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4121  001158  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4122  00115A                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4125  00115A  0783               	decf	efgtoa@w& (0+255),f,b
  4126  00115C  A0D8               	btfss	status,0,c
  4127  00115E  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4128  001160                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4131  001160  0E00               	movlw	0
  4132  001162  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  4133  001164  0E01               	movlw	1
  4134  001166  6F73               	movwf	efgtoa@pp& (0+255),b
  4135  001168  EFC6  F008         	goto	l3879
  4136  00116C                     l3871:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4140  00116C  0E00               	movlw	low _dbuf
  4141  00116E  2597               	addwf	efgtoa@n& (0+255),w,b
  4142  001170  6ED9               	movwf	fsr2l,c
  4143  001172  0E01               	movlw	high _dbuf
  4144  001174  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4145  001176  6EDA               	movwf	fsr2h,c
  4146  001178  0E30               	movlw	48
  4147  00117A  6EDF               	movwf	indf2,c
  4148  00117C                     
  4149                           ; BSR set to: 0
  4150  00117C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4151  00117E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4152  001180                     
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4155  001180  0783               	decf	efgtoa@w& (0+255),f,b
  4156  001182  A0D8               	btfss	status,0,c
  4157  001184  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4158  001186                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4161  001186  0771               	decf	efgtoa@t& (0+255),f,b
  4162  001188  A0D8               	btfss	status,0,c
  4163  00118A  0772               	decf	(efgtoa@t+1)& (0+255),f,b
  4164  00118C                     l3879:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4168  00118C  5171               	movf	efgtoa@t& (0+255),w,b
  4169  00118E  1172               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4170  001190  A4D8               	btfss	status,2,c
  4171  001192  EFCD  F008         	goto	u4671
  4172  001196  EFCF  F008         	goto	u4670
  4173  00119A                     u4671:
  4174  00119A  EFB6  F008         	goto	l3871
  4175  00119E                     u4670:
  4176  00119E                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4179  00119E  0E00               	movlw	low _dbuf
  4180  0011A0  2597               	addwf	efgtoa@n& (0+255),w,b
  4181  0011A2  6ED9               	movwf	fsr2l,c
  4182  0011A4  0E01               	movlw	high _dbuf
  4183  0011A6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4184  0011A8  6EDA               	movwf	fsr2h,c
  4185  0011AA  517D               	movf	efgtoa@d& (0+255),w,b
  4186  0011AC  0F30               	addlw	48
  4187  0011AE  6EDF               	movwf	indf2,c
  4188  0011B0                     
  4189                           ; BSR set to: 0
  4190  0011B0  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4191  0011B2  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4192  0011B4                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4195  0011B4  0783               	decf	efgtoa@w& (0+255),f,b
  4196  0011B6  A0D8               	btfss	status,0,c
  4197  0011B8  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4198  0011BA                     l3887:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4202  0011BA  C087  F028         	movff	efgtoa@h,___flsub@b
  4203  0011BE  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  4204  0011C2  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4205  0011C6  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4206  0011CA  C099  F013         	movff	efgtoa@u,___flmul@a
  4207  0011CE  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  4208  0011D2  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  4209  0011D6  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  4210  0011DA  C08B  F00F         	movff	efgtoa@l,___flmul@b
  4211  0011DE  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  4212  0011E2  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  4213  0011E6  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  4214  0011EA  EC8C  F00F         	call	___flmul	;wreg free
  4215  0011EE  C00F  F02C         	movff	?___flmul,___flsub@a
  4216  0011F2  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4217  0011F6  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4218  0011FA  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4219  0011FE  EC2A  F01E         	call	___flsub	;wreg free
  4220  001202  C028  F087         	movff	?___flsub,efgtoa@h
  4221  001206  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  4222  00120A  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  4223  00120E  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  4224  001212                     
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4226  001212  C099  F028         	movff	efgtoa@u,___fldiv@b
  4227  001216  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4228  00121A  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4229  00121E  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4230  001222  0E00               	movlw	0
  4231  001224  6E2C               	movwf	___fldiv@a^0,c
  4232  001226  0E00               	movlw	0
  4233  001228  6E2D               	movwf	(___fldiv@a+1)^0,c
  4234  00122A  0E20               	movlw	32
  4235  00122C  6E2E               	movwf	(___fldiv@a+2)^0,c
  4236  00122E  0E41               	movlw	65
  4237  001230  6E2F               	movwf	(___fldiv@a+3)^0,c
  4238  001232  ECA1  F011         	call	___fldiv	;wreg free
  4239  001236  C028  F099         	movff	?___fldiv,efgtoa@u
  4240  00123A  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  4241  00123E  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  4242  001242  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  4243  001246                     
  4244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4245  001246  0100               	movlb	0	; () banked
  4246  001248  0775               	decf	efgtoa@ne& (0+255),f,b
  4247  00124A  A0D8               	btfss	status,0,c
  4248  00124C  0776               	decf	(efgtoa@ne+1)& (0+255),f,b
  4249  00124E                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4252  00124E  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  4253  001250  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  4254  001252                     l3895:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4258  001252  5177               	movf	efgtoa@m& (0+255),w,b
  4259  001254  5D8F               	subwf	efgtoa@i& (0+255),w,b
  4260  001256  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  4261  001258  0A80               	xorlw	128
  4262  00125A  6F60               	movwf	??_efgtoa& (0+255),b
  4263  00125C  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  4264  00125E  0A80               	xorlw	128
  4265  001260  5960               	subwfb	??_efgtoa& (0+255),w,b
  4266  001262  B0D8               	btfsc	status,0,c
  4267  001264  EF36  F009         	goto	u4681
  4268  001268  EF38  F009         	goto	u4680
  4269  00126C                     u4681:
  4270  00126C  EF46  F009         	goto	l3899
  4271  001270                     u4680:
  4272  001270                     
  4273                           ; BSR set to: 0
  4274  001270  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4275  001272  EF44  F009         	goto	u4691
  4276  001276  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  4277  001278  E109               	bnz	u4690
  4278  00127A  0E4B               	movlw	75
  4279  00127C  5D97               	subwf	efgtoa@n& (0+255),w,b
  4280  00127E  A0D8               	btfss	status,0,c
  4281  001280  EF44  F009         	goto	u4691
  4282  001284  EF46  F009         	goto	u4690
  4283  001288                     u4691:
  4284  001288  EF3C  F008         	goto	l3847
  4285  00128C                     u4690:
  4286  00128C                     l3899:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4290  00128C  5173               	movf	efgtoa@pp& (0+255),w,b
  4291  00128E  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4292  001290  A4D8               	btfss	status,2,c
  4293  001292  EF4D  F009         	goto	u4701
  4294  001296  EF4F  F009         	goto	u4700
  4295  00129A                     u4701:
  4296  00129A  EF60  F009         	goto	l3907
  4297  00129E                     u4700:
  4298  00129E                     
  4299                           ; BSR set to: 0
  4300  00129E  A9E5               	btfss	_flags& (0+255),4,b
  4301  0012A0  EF54  F009         	goto	u4711
  4302  0012A4  EF56  F009         	goto	u4710
  4303  0012A8                     u4711:
  4304  0012A8  EF60  F009         	goto	l3907
  4305  0012AC                     u4710:
  4306  0012AC                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4309  0012AC  0E00               	movlw	low _dbuf
  4310  0012AE  2597               	addwf	efgtoa@n& (0+255),w,b
  4311  0012B0  6ED9               	movwf	fsr2l,c
  4312  0012B2  0E01               	movlw	high _dbuf
  4313  0012B4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4314  0012B6  6EDA               	movwf	fsr2h,c
  4315  0012B8  0E2E               	movlw	46
  4316  0012BA  6EDF               	movwf	indf2,c
  4317  0012BC                     
  4318                           ; BSR set to: 0
  4319  0012BC  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4320  0012BE  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4321  0012C0                     l3907:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4325  0012C0  0E00               	movlw	low _dbuf
  4326  0012C2  2597               	addwf	efgtoa@n& (0+255),w,b
  4327  0012C4  6ED9               	movwf	fsr2l,c
  4328  0012C6  0E01               	movlw	high _dbuf
  4329  0012C8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4330  0012CA  6EDA               	movwf	fsr2h,c
  4331  0012CC  0E00               	movlw	0
  4332  0012CE  6EDF               	movwf	indf2,c
  4333  0012D0                     
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4336  0012D0  0E65               	movlw	101
  4337  0012D2  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  4338  0012D4  A4D8               	btfss	status,2,c
  4339  0012D6  EF6F  F009         	goto	u4721
  4340  0012DA  EF71  F009         	goto	u4720
  4341  0012DE                     u4721:
  4342  0012DE  EFCB  F004         	goto	l3709
  4343  0012E2                     u4720:
  4344  0012E2                     
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4347  0012E2  0E00               	movlw	0
  4348  0012E4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  4349  0012E6  0E4F               	movlw	79
  4350  0012E8  6F8F               	movwf	efgtoa@i& (0+255),b
  4351  0012EA                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4354  0012EA  0E00               	movlw	low _dbuf
  4355  0012EC  258F               	addwf	efgtoa@i& (0+255),w,b
  4356  0012EE  6ED9               	movwf	fsr2l,c
  4357  0012F0  0E01               	movlw	high _dbuf
  4358  0012F2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4359  0012F4  6EDA               	movwf	fsr2h,c
  4360  0012F6  0E00               	movlw	0
  4361  0012F8  6EDF               	movwf	indf2,c
  4362  0012FA                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4365  0012FA  0E00               	movlw	0
  4366  0012FC  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4367  0012FE  0E00               	movlw	0
  4368  001300  6F7F               	movwf	efgtoa@sign& (0+255),b
  4369  001302                     
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4372  001302  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4373  001304  EF88  F009         	goto	u4730
  4374  001308  EF86  F009         	goto	u4731
  4375  00130C                     u4731:
  4376  00130C  EF90  F009         	goto	l3923
  4377  001310                     u4730:
  4378  001310                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4381  001310  0E00               	movlw	0
  4382  001312  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4383  001314  0E01               	movlw	1
  4384  001316  6F7F               	movwf	efgtoa@sign& (0+255),b
  4385  001318                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4388  001318  6D95               	negf	efgtoa@e& (0+255),b
  4389  00131A  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  4390  00131C  B0D8               	btfsc	status,0,c
  4391  00131E  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4392  001320                     l3923:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4396  001320  0E00               	movlw	0
  4397  001322  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4398  001324  0E02               	movlw	2
  4399  001326  6F81               	movwf	efgtoa@p& (0+255),b
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4402  001328  EFC1  F009         	goto	l3935
  4403  00132C                     l3925:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4407  00132C  078F               	decf	efgtoa@i& (0+255),f,b
  4408  00132E  A0D8               	btfss	status,0,c
  4409  001330  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4410  001332                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4413  001332  0E00               	movlw	low _dbuf
  4414  001334  258F               	addwf	efgtoa@i& (0+255),w,b
  4415  001336  6ED9               	movwf	fsr2l,c
  4416  001338  0E01               	movlw	high _dbuf
  4417  00133A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4418  00133C  6EDA               	movwf	fsr2h,c
  4419  00133E  C095  F001         	movff	efgtoa@e,___awmod@dividend
  4420  001342  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4421  001346  0E00               	movlw	0
  4422  001348  6E04               	movwf	(___awmod@divisor+1)^0,c
  4423  00134A  0E0A               	movlw	10
  4424  00134C  6E03               	movwf	___awmod@divisor^0,c
  4425  00134E  EC28  F01C         	call	___awmod	;wreg free
  4426  001352  5001               	movf	?___awmod^0,w,c
  4427  001354  0F30               	addlw	48
  4428  001356  6EDF               	movwf	indf2,c
  4429  001358                     
  4430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4431  001358  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  4432  00135C  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4433  001360  0E00               	movlw	0
  4434  001362  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4435  001364  0E0A               	movlw	10
  4436  001366  6E03               	movwf	___awdiv@divisor^0,c
  4437  001368  ECC6  F01B         	call	___awdiv	;wreg free
  4438  00136C  C001  F095         	movff	?___awdiv,efgtoa@e
  4439  001370  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  4440  001374                     
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4442  001374  0100               	movlb	0	; () banked
  4443  001376  0781               	decf	efgtoa@p& (0+255),f,b
  4444  001378  A0D8               	btfss	status,0,c
  4445  00137A  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  4446  00137C                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4449  00137C  0783               	decf	efgtoa@w& (0+255),f,b
  4450  00137E  A0D8               	btfss	status,0,c
  4451  001380  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4452  001382                     l3935:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4456  001382  5195               	movf	efgtoa@e& (0+255),w,b
  4457  001384  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4458  001386  A4D8               	btfss	status,2,c
  4459  001388  EFC8  F009         	goto	u4741
  4460  00138C  EFCA  F009         	goto	u4740
  4461  001390                     u4741:
  4462  001390  EF96  F009         	goto	l3925
  4463  001394                     u4740:
  4464  001394                     
  4465                           ; BSR set to: 0
  4466  001394  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4467  001396  EFD7  F009         	goto	u4750
  4468  00139A  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  4469  00139C  E106               	bnz	u4751
  4470  00139E  0581               	decf	efgtoa@p& (0+255),w,b
  4471  0013A0  B0D8               	btfsc	status,0,c
  4472  0013A2  EFD5  F009         	goto	u4751
  4473  0013A6  EFD7  F009         	goto	u4750
  4474  0013AA                     u4751:
  4475  0013AA  EF96  F009         	goto	l3925
  4476  0013AE                     u4750:
  4477  0013AE                     
  4478                           ; BSR set to: 0
  4479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4480  0013AE  078F               	decf	efgtoa@i& (0+255),f,b
  4481  0013B0  A0D8               	btfss	status,0,c
  4482  0013B2  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4483  0013B4                     
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4486  0013B4  517F               	movf	efgtoa@sign& (0+255),w,b
  4487  0013B6  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4488  0013B8  A4D8               	btfss	status,2,c
  4489  0013BA  EFE1  F009         	goto	u4761
  4490  0013BE  EFE3  F009         	goto	u4760
  4491  0013C2                     u4761:
  4492  0013C2  EFE9  F009         	goto	l3945
  4493  0013C6                     u4760:
  4494  0013C6                     
  4495                           ; BSR set to: 0
  4496  0013C6  0E00               	movlw	0
  4497  0013C8  6F6C               	movwf	(_efgtoa$949+1)& (0+255),b
  4498  0013CA  0E2B               	movlw	43
  4499  0013CC  6F6B               	movwf	_efgtoa$949& (0+255),b
  4500  0013CE  EFED  F009         	goto	l3947
  4501  0013D2                     l3945:
  4502                           
  4503                           ; BSR set to: 0
  4504  0013D2  0E00               	movlw	0
  4505  0013D4  6F6C               	movwf	(_efgtoa$949+1)& (0+255),b
  4506  0013D6  0E2D               	movlw	45
  4507  0013D8  6F6B               	movwf	_efgtoa$949& (0+255),b
  4508  0013DA                     l3947:
  4509                           
  4510                           ; BSR set to: 0
  4511  0013DA  0E00               	movlw	low _dbuf
  4512  0013DC  258F               	addwf	efgtoa@i& (0+255),w,b
  4513  0013DE  6ED9               	movwf	fsr2l,c
  4514  0013E0  0E01               	movlw	high _dbuf
  4515  0013E2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4516  0013E4  6EDA               	movwf	fsr2h,c
  4517  0013E6  C06B  FFDF         	movff	_efgtoa$949,indf2
  4518  0013EA                     
  4519                           ; BSR set to: 0
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4521  0013EA  0783               	decf	efgtoa@w& (0+255),f,b
  4522  0013EC  A0D8               	btfss	status,0,c
  4523  0013EE  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4524  0013F0                     
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4527  0013F0  078F               	decf	efgtoa@i& (0+255),f,b
  4528  0013F2  A0D8               	btfss	status,0,c
  4529  0013F4  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4530  0013F6                     
  4531                           ; BSR set to: 0
  4532  0013F6  0EBF               	movlw	191
  4533  0013F8  6F60               	movwf	??_efgtoa& (0+255),b
  4534  0013FA  0EFF               	movlw	255
  4535  0013FC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4536  0013FE  505B               	movf	efgtoa@c^0,w,c
  4537  001400  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4538  001402  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4539  001404  5160               	movf	??_efgtoa& (0+255),w,b
  4540  001406  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4541  001408  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4542  00140A  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4543  00140C  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4544  00140E  E10A               	bnz	u4770
  4545  001410  0E1A               	movlw	26
  4546  001412  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4547  001414  A0D8               	btfss	status,0,c
  4548  001416  EF0F  F00A         	goto	u4771
  4549  00141A  EF12  F00A         	goto	u4770
  4550  00141E                     u4771:
  4551  00141E  0E01               	movlw	1
  4552  001420  EF13  F00A         	goto	u4780
  4553  001424                     u4770:
  4554  001424  0E00               	movlw	0
  4555  001426                     u4780:
  4556  001426  6F6F               	movwf	_efgtoa$951& (0+255),b
  4557  001428  6B70               	clrf	(_efgtoa$951+1)& (0+255),b
  4558  00142A                     
  4559                           ; BSR set to: 0
  4560  00142A  516F               	movf	_efgtoa$951& (0+255),w,b
  4561  00142C  1170               	iorwf	(_efgtoa$951+1)& (0+255),w,b
  4562  00142E  A4D8               	btfss	status,2,c
  4563  001430  EF1C  F00A         	goto	u4791
  4564  001434  EF1E  F00A         	goto	u4790
  4565  001438                     u4791:
  4566  001438  EF24  F00A         	goto	l3961
  4567  00143C                     u4790:
  4568  00143C                     
  4569                           ; BSR set to: 0
  4570  00143C  0E00               	movlw	0
  4571  00143E  6F6E               	movwf	(_efgtoa$950+1)& (0+255),b
  4572  001440  0E65               	movlw	101
  4573  001442  6F6D               	movwf	_efgtoa$950& (0+255),b
  4574  001444  EF28  F00A         	goto	l3963
  4575  001448                     l3961:
  4576                           
  4577                           ; BSR set to: 0
  4578  001448  0E00               	movlw	0
  4579  00144A  6F6E               	movwf	(_efgtoa$950+1)& (0+255),b
  4580  00144C  0E45               	movlw	69
  4581  00144E  6F6D               	movwf	_efgtoa$950& (0+255),b
  4582  001450                     l3963:
  4583                           
  4584                           ; BSR set to: 0
  4585  001450  0E00               	movlw	low _dbuf
  4586  001452  258F               	addwf	efgtoa@i& (0+255),w,b
  4587  001454  6ED9               	movwf	fsr2l,c
  4588  001456  0E01               	movlw	high _dbuf
  4589  001458  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4590  00145A  6EDA               	movwf	fsr2h,c
  4591  00145C  C06D  FFDF         	movff	_efgtoa$950,indf2
  4592  001460                     
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4595  001460  0783               	decf	efgtoa@w& (0+255),f,b
  4596  001462  A0D8               	btfss	status,0,c
  4597  001464  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4598  001466                     
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4601  001466  0E00               	movlw	low _dbuf
  4602  001468  2597               	addwf	efgtoa@n& (0+255),w,b
  4603  00146A  6E01               	movwf	strcpy@dest^0,c
  4604  00146C  0E01               	movlw	high _dbuf
  4605  00146E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4606  001470  6E02               	movwf	(strcpy@dest+1)^0,c
  4607  001472  0E00               	movlw	low _dbuf
  4608  001474  258F               	addwf	efgtoa@i& (0+255),w,b
  4609  001476  6E03               	movwf	strcpy@src^0,c
  4610  001478  0E01               	movlw	high _dbuf
  4611  00147A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4612  00147C  6E04               	movwf	(strcpy@src+1)^0,c
  4613  00147E  EC7C  F01D         	call	_strcpy	;wreg free
  4614  001482  EFCB  F004         	goto	l3709
  4615  001486                     l865:
  4616  001486  0012               	return		;funcret
  4617  001488                     __end_of_efgtoa:
  4618                           	callstack 0
  4619                           
  4620 ;; *************** function _tolower *****************
  4621 ;; Defined at:
  4622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  c               2    6[COMRAM] int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2    6[COMRAM] int 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4636 ;;      Params:         2       0       0       0       0       0       0       0       0
  4637 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4638 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4639 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4640 ;;Total ram usage:        8 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 1
  4643 ;; This function calls:
  4644 ;;		_isupper
  4645 ;; This function is called by:
  4646 ;;		_efgtoa
  4647 ;;		_vfpfcnvrt
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text9
  4652  003A98                     __ptext9:
  4653                           	callstack 0
  4654  003A98                     _tolower:
  4655                           	callstack 26
  4656  003A98  0EBF               	movlw	191
  4657  003A9A  6E09               	movwf	??_tolower^0,c
  4658  003A9C  0EFF               	movlw	255
  4659  003A9E  6E0A               	movwf	(??_tolower+1)^0,c
  4660  003AA0  C007  F00B         	movff	tolower@c,??_tolower+2
  4661  003AA4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4662  003AA8  5009               	movf	??_tolower^0,w,c
  4663  003AAA  260B               	addwf	(??_tolower+2)^0,f,c
  4664  003AAC  500A               	movf	(??_tolower+1)^0,w,c
  4665  003AAE  220C               	addwfc	(??_tolower+3)^0,f,c
  4666  003AB0  500C               	movf	(??_tolower+3)^0,w,c
  4667  003AB2  E10A               	bnz	u4050
  4668  003AB4  0E1A               	movlw	26
  4669  003AB6  5C0B               	subwf	(??_tolower+2)^0,w,c
  4670  003AB8  A0D8               	btfss	status,0,c
  4671  003ABA  EF61  F01D         	goto	u4051
  4672  003ABE  EF64  F01D         	goto	u4050
  4673  003AC2                     u4051:
  4674  003AC2  0E01               	movlw	1
  4675  003AC4  EF65  F01D         	goto	u4060
  4676  003AC8                     u4050:
  4677  003AC8  0E00               	movlw	0
  4678  003ACA                     u4060:
  4679  003ACA  6E0D               	movwf	_tolower$1106^0,c
  4680  003ACC  6A0E               	clrf	(_tolower$1106+1)^0,c
  4681  003ACE  500D               	movf	_tolower$1106^0,w,c
  4682  003AD0  100E               	iorwf	(_tolower$1106+1)^0,w,c
  4683  003AD2  B4D8               	btfsc	status,2,c
  4684  003AD4  EF6E  F01D         	goto	u4071
  4685  003AD8  EF70  F01D         	goto	u4070
  4686  003ADC                     u4071:
  4687  003ADC  EF77  F01D         	goto	l1123
  4688  003AE0                     u4070:
  4689  003AE0  0E20               	movlw	32
  4690  003AE2  1007               	iorwf	tolower@c^0,w,c
  4691  003AE4  6E07               	movwf	?_tolower^0,c
  4692  003AE6  5008               	movf	(tolower@c+1)^0,w,c
  4693  003AE8  6E08               	movwf	(?_tolower+1)^0,c
  4694  003AEA  EF7B  F01D         	goto	l1128
  4695  003AEE                     l1123:
  4696  003AEE  C007  F007         	movff	tolower@c,?_tolower
  4697  003AF2  C008  F008         	movff	tolower@c+1,?_tolower+1
  4698  003AF6                     l1128:
  4699  003AF6  0012               	return		;funcret
  4700  003AF8                     __end_of_tolower:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _isupper *****************
  4704 ;; Defined at:
  4705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  c               2    0[COMRAM] int 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  2    0[COMRAM] int 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4719 ;;      Params:         2       0       0       0       0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4721 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4722 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4723 ;;Total ram usage:        6 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_efgtoa
  4729 ;;		_vfpfcnvrt
  4730 ;;		_tolower
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text10
  4735  003D64                     __ptext10:
  4736                           	callstack 0
  4737  003D64                     _isupper:
  4738                           	callstack 26
  4739  003D64  0EBF               	movlw	191
  4740  003D66  6E03               	movwf	??_isupper^0,c
  4741  003D68  0EFF               	movlw	255
  4742  003D6A  6E04               	movwf	(??_isupper+1)^0,c
  4743  003D6C  C001  F005         	movff	isupper@c,??_isupper+2
  4744  003D70  C002  F006         	movff	isupper@c+1,??_isupper+3
  4745  003D74  5003               	movf	??_isupper^0,w,c
  4746  003D76  2605               	addwf	(??_isupper+2)^0,f,c
  4747  003D78  5004               	movf	(??_isupper+1)^0,w,c
  4748  003D7A  2206               	addwfc	(??_isupper+3)^0,f,c
  4749  003D7C  5006               	movf	(??_isupper+3)^0,w,c
  4750  003D7E  E10A               	bnz	u3130
  4751  003D80  0E1A               	movlw	26
  4752  003D82  5C05               	subwf	(??_isupper+2)^0,w,c
  4753  003D84  A0D8               	btfss	status,0,c
  4754  003D86  EFC7  F01E         	goto	u3131
  4755  003D8A  EFCA  F01E         	goto	u3130
  4756  003D8E                     u3131:
  4757  003D8E  0E01               	movlw	1
  4758  003D90  EFCB  F01E         	goto	u3140
  4759  003D94                     u3130:
  4760  003D94  0E00               	movlw	0
  4761  003D96                     u3140:
  4762  003D96  6E01               	movwf	?_isupper^0,c
  4763  003D98  6A02               	clrf	(?_isupper+1)^0,c
  4764  003D9A  0012               	return		;funcret
  4765  003D9C                     __end_of_isupper:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _strcpy *****************
  4769 ;; Defined at:
  4770 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4773 ;;		 -> dbuf(80), 
  4774 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4775 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4776 ;;		 -> dbuf(80), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  d               2    8[COMRAM] PTR unsigned char 
  4779 ;;		 -> dbuf(80), 
  4780 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4781 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4782 ;;		 -> dbuf(80), 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  2    0[COMRAM] PTR unsigned char 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4792 ;;      Params:         4       0       0       0       0       0       0       0       0
  4793 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4794 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4795 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4796 ;;Total ram usage:       10 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_efgtoa
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text11
  4806  003AF8                     __ptext11:
  4807                           	callstack 0
  4808  003AF8                     _strcpy:
  4809                           	callstack 26
  4810  003AF8  C003  F007         	movff	strcpy@src,strcpy@s
  4811  003AFC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4812  003B00  C001  F009         	movff	strcpy@dest,strcpy@d
  4813  003B04  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4814  003B08                     l3593:
  4815  003B08  5007               	movf	strcpy@s^0,w,c
  4816  003B0A  6E05               	movwf	??_strcpy^0,c
  4817  003B0C  5008               	movf	(strcpy@s+1)^0,w,c
  4818  003B0E  6E06               	movwf	(??_strcpy+1)^0,c
  4819  003B10  4A07               	infsnz	strcpy@s^0,f,c
  4820  003B12  2A08               	incf	(strcpy@s+1)^0,f,c
  4821  003B14  C005  FFF6         	movff	??_strcpy,tblptrl
  4822  003B18  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4823  003B1C  6AF8               	clrf	tblptru,c
  4824  003B1E  C009  FFD9         	movff	strcpy@d,fsr2l
  4825  003B22  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4826  003B26  4A09               	infsnz	strcpy@d^0,f,c
  4827  003B28  2A0A               	incf	(strcpy@d+1)^0,f,c
  4828  003B2A  0E07               	movlw	(high __ramtop+-1)
  4829  003B2C  64F7               	cpfsgt	tblptrh,c
  4830  003B2E  D003               	bra	u4037
  4831  003B30  0008               	tblrd		*
  4832  003B32  50F5               	movf	tablat,w,c
  4833  003B34  D005               	bra	u4030
  4834  003B36                     u4037:
  4835  003B36  CFF6 FFE1          	movff	tblptrl,fsr1l
  4836  003B3A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4837  003B3E  50E7               	movf	indf1,w,c
  4838  003B40                     u4030:
  4839  003B40  6EDF               	movwf	indf2,c
  4840  003B42  50DF               	movf	indf2,w,c
  4841  003B44  A4D8               	btfss	status,2,c
  4842  003B46  EFA7  F01D         	goto	u4041
  4843  003B4A  EFA9  F01D         	goto	u4040
  4844  003B4E                     u4041:
  4845  003B4E  EF84  F01D         	goto	l3593
  4846  003B52                     u4040:
  4847  003B52  0012               	return		;funcret
  4848  003B54                     __end_of_strcpy:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _pad *****************
  4852 ;; Defined at:
  4853 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4856 ;;		 -> sprintf@f(6), 
  4857 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4858 ;;		 -> dbuf(80), 
  4859 ;;  p               2   20[COMRAM] int 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  w               2   25[COMRAM] int 
  4862 ;;  i               2   23[COMRAM] int 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2   16[COMRAM] int 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4872 ;;      Params:         6       0       0       0       0       0       0       0       0
  4873 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4874 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4875 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4876 ;;Total ram usage:       11 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 3
  4879 ;; This function calls:
  4880 ;;		_fputc
  4881 ;;		_fputs
  4882 ;;		_strlen
  4883 ;; This function is called by:
  4884 ;;		_efgtoa
  4885 ;;		_utoa
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text12
  4890  0036C6                     __ptext12:
  4891                           	callstack 0
  4892  0036C6                     _pad:
  4893                           	callstack 23
  4894  0036C6                     
  4895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4896  0036C6  0100               	movlb	0	; () banked
  4897  0036C8  A1E5               	btfss	_flags& (0+255),0,b
  4898  0036CA  EF69  F01B         	goto	u3921
  4899  0036CE  EF6B  F01B         	goto	u3920
  4900  0036D2                     u3921:
  4901  0036D2  EF75  F01B         	goto	l3551
  4902  0036D6                     u3920:
  4903  0036D6                     
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4906  0036D6  C013  F00A         	movff	pad@buf,fputs@s
  4907  0036DA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4908  0036DE  C011  F00C         	movff	pad@fp,fputs@fp
  4909  0036E2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4910  0036E6  EC70  F01E         	call	_fputs	;wreg free
  4911  0036EA                     l3551:
  4912                           
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4914  0036EA  BE16               	btfsc	(pad@p+1)^0,7,c
  4915  0036EC  EF7A  F01B         	goto	u3931
  4916  0036F0  EF7C  F01B         	goto	u3930
  4917  0036F4                     u3931:
  4918  0036F4  EF82  F01B         	goto	l3555
  4919  0036F8                     u3930:
  4920  0036F8  C015  F01A         	movff	pad@p,pad@w
  4921  0036FC  C016  F01B         	movff	pad@p+1,pad@w+1
  4922  003700  EF86  F01B         	goto	l842
  4923  003704                     l3555:
  4924  003704  0E00               	movlw	0
  4925  003706  6E1B               	movwf	(pad@w+1)^0,c
  4926  003708  0E00               	movlw	0
  4927  00370A  6E1A               	movwf	pad@w^0,c
  4928  00370C                     l842:
  4929                           
  4930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4931  00370C  0E00               	movlw	0
  4932  00370E  6E19               	movwf	(pad@i+1)^0,c
  4933  003710  0E00               	movlw	0
  4934  003712  6E18               	movwf	pad@i^0,c
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4937  003714  EF98  F01B         	goto	l3561
  4938  003718                     l3557:
  4939                           
  4940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4941  003718  0E00               	movlw	0
  4942  00371A  6E02               	movwf	(fputc@c+1)^0,c
  4943  00371C  0E20               	movlw	32
  4944  00371E  6E01               	movwf	fputc@c^0,c
  4945  003720  C011  F003         	movff	pad@fp,fputc@fp
  4946  003724  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4947  003728  ECFE  F01A         	call	_fputc	;wreg free
  4948  00372C                     
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4950  00372C  4A18               	infsnz	pad@i^0,f,c
  4951  00372E  2A19               	incf	(pad@i+1)^0,f,c
  4952  003730                     l3561:
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4955  003730  501A               	movf	pad@w^0,w,c
  4956  003732  5C18               	subwf	pad@i^0,w,c
  4957  003734  5019               	movf	(pad@i+1)^0,w,c
  4958  003736  0A80               	xorlw	128
  4959  003738  6E17               	movwf	??_pad^0,c
  4960  00373A  501B               	movf	(pad@w+1)^0,w,c
  4961  00373C  0A80               	xorlw	128
  4962  00373E  5817               	subwfb	??_pad^0,w,c
  4963  003740  A0D8               	btfss	status,0,c
  4964  003742  EFA5  F01B         	goto	u3941
  4965  003746  EFA7  F01B         	goto	u3940
  4966  00374A                     u3941:
  4967  00374A  EF8C  F01B         	goto	l3557
  4968  00374E                     u3940:
  4969  00374E                     
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4971  00374E  0100               	movlb	0	; () banked
  4972  003750  B1E5               	btfsc	_flags& (0+255),0,b
  4973  003752  EFAD  F01B         	goto	u3951
  4974  003756  EFAF  F01B         	goto	u3950
  4975  00375A                     u3951:
  4976  00375A  EFB9  F01B         	goto	l3565
  4977  00375E                     u3950:
  4978  00375E                     
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4981  00375E  C013  F00A         	movff	pad@buf,fputs@s
  4982  003762  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4983  003766  C011  F00C         	movff	pad@fp,fputs@fp
  4984  00376A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4985  00376E  EC70  F01E         	call	_fputs	;wreg free
  4986  003772                     l3565:
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4989  003772  C013  F001         	movff	pad@buf,strlen@s
  4990  003776  C014  F002         	movff	pad@buf+1,strlen@s+1
  4991  00377A  EC06  F01F         	call	_strlen	;wreg free
  4992  00377E  501A               	movf	pad@w^0,w,c
  4993  003780  2401               	addwf	?_strlen^0,w,c
  4994  003782  6E11               	movwf	?_pad^0,c
  4995  003784  501B               	movf	(pad@w+1)^0,w,c
  4996  003786  2002               	addwfc	(?_strlen+1)^0,w,c
  4997  003788  6E12               	movwf	(?_pad+1)^0,c
  4998  00378A  0012               	return		;funcret
  4999  00378C                     __end_of_pad:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _strlen *****************
  5003 ;; Defined at:
  5004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5007 ;;		 -> dbuf(80), 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5010 ;;		 -> dbuf(80), 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  2    0[COMRAM] unsigned int 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         2       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_pad
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text13
  5034  003E0C                     __ptext13:
  5035                           	callstack 0
  5036  003E0C                     _strlen:
  5037                           	callstack 25
  5038  003E0C  C001  F003         	movff	strlen@s,strlen@a
  5039  003E10  C002  F004         	movff	strlen@s+1,strlen@a+1
  5040  003E14  EF0E  F01F         	goto	l3049
  5041  003E18                     l3047:
  5042  003E18  4A01               	infsnz	strlen@s^0,f,c
  5043  003E1A  2A02               	incf	(strlen@s+1)^0,f,c
  5044  003E1C                     l3049:
  5045  003E1C  C001  FFD9         	movff	strlen@s,fsr2l
  5046  003E20  C002  FFDA         	movff	strlen@s+1,fsr2h
  5047  003E24  50DF               	movf	indf2,w,c
  5048  003E26  A4D8               	btfss	status,2,c
  5049  003E28  EF18  F01F         	goto	u3121
  5050  003E2C  EF1A  F01F         	goto	u3120
  5051  003E30                     u3121:
  5052  003E30  EF0C  F01F         	goto	l3047
  5053  003E34                     u3120:
  5054  003E34  5003               	movf	strlen@a^0,w,c
  5055  003E36  5C01               	subwf	strlen@s^0,w,c
  5056  003E38  6E01               	movwf	?_strlen^0,c
  5057  003E3A  5004               	movf	(strlen@a+1)^0,w,c
  5058  003E3C  5802               	subwfb	(strlen@s+1)^0,w,c
  5059  003E3E  6E02               	movwf	(?_strlen+1)^0,c
  5060  003E40  0012               	return		;funcret
  5061  003E42                     __end_of_strlen:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function _fputs *****************
  5065 ;; Defined at:
  5066 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5069 ;;		 -> dbuf(80), 
  5070 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5071 ;;		 -> sprintf@f(6), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  i               2   14[COMRAM] int 
  5074 ;;  c               1   13[COMRAM] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  2    9[COMRAM] int 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         4       0       0       0       0       0       0       0       0
  5085 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5087 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5088 ;;Total ram usage:        7 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 2
  5091 ;; This function calls:
  5092 ;;		_fputc
  5093 ;; This function is called by:
  5094 ;;		_pad
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text14
  5099  003CE0                     __ptext14:
  5100                           	callstack 0
  5101  003CE0                     _fputs:
  5102                           	callstack 23
  5103  003CE0  0E00               	movlw	0
  5104  003CE2  6E10               	movwf	(fputs@i+1)^0,c
  5105  003CE4  0E00               	movlw	0
  5106  003CE6  6E0F               	movwf	fputs@i^0,c
  5107  003CE8  EF81  F01E         	goto	l3043
  5108  003CEC                     l3039:
  5109  003CEC  C00E  F001         	movff	fputs@c,fputc@c
  5110  003CF0  6A02               	clrf	(fputc@c+1)^0,c
  5111  003CF2  C00C  F003         	movff	fputs@fp,fputc@fp
  5112  003CF6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5113  003CFA  ECFE  F01A         	call	_fputc	;wreg free
  5114  003CFE  4A0F               	infsnz	fputs@i^0,f,c
  5115  003D00  2A10               	incf	(fputs@i+1)^0,f,c
  5116  003D02                     l3043:
  5117  003D02  500F               	movf	fputs@i^0,w,c
  5118  003D04  240A               	addwf	fputs@s^0,w,c
  5119  003D06  6ED9               	movwf	fsr2l,c
  5120  003D08  5010               	movf	(fputs@i+1)^0,w,c
  5121  003D0A  200B               	addwfc	(fputs@s+1)^0,w,c
  5122  003D0C  6EDA               	movwf	fsr2h,c
  5123  003D0E  50DF               	movf	indf2,w,c
  5124  003D10  6E0E               	movwf	fputs@c^0,c
  5125  003D12  500E               	movf	fputs@c^0,w,c
  5126  003D14  A4D8               	btfss	status,2,c
  5127  003D16  EF8F  F01E         	goto	u3111
  5128  003D1A  EF91  F01E         	goto	u3110
  5129  003D1E                     u3111:
  5130  003D1E  EF76  F01E         	goto	l3039
  5131  003D22                     u3110:
  5132  003D22  0012               	return		;funcret
  5133  003D24                     __end_of_fputs:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _fputc *****************
  5137 ;; Defined at:
  5138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  c               2    0[COMRAM] int 
  5141 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5142 ;;		 -> sprintf@f(6), 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    0[COMRAM] int 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5154 ;;      Params:         4       0       0       0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5156 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5157 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5158 ;;Total ram usage:        9 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 1
  5161 ;; This function calls:
  5162 ;;		_putch
  5163 ;; This function is called by:
  5164 ;;		_pad
  5165 ;;		_vfpfcnvrt
  5166 ;;		_fputs
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text15
  5171  0035FC                     __ptext15:
  5172                           	callstack 0
  5173  0035FC                     _fputc:
  5174                           	callstack 23
  5175  0035FC  5003               	movf	fputc@fp^0,w,c
  5176  0035FE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5177  003600  B4D8               	btfsc	status,2,c
  5178  003602  EF05  F01B         	goto	u2681
  5179  003606  EF07  F01B         	goto	u2680
  5180  00360A                     u2681:
  5181  00360A  EF10  F01B         	goto	l2825
  5182  00360E                     u2680:
  5183  00360E  5003               	movf	fputc@fp^0,w,c
  5184  003610  1004               	iorwf	(fputc@fp+1)^0,w,c
  5185  003612  A4D8               	btfss	status,2,c
  5186  003614  EF0E  F01B         	goto	u2691
  5187  003618  EF10  F01B         	goto	u2690
  5188  00361C                     u2691:
  5189  00361C  EF15  F01B         	goto	l2827
  5190  003620                     u2690:
  5191  003620                     l2825:
  5192  003620  5001               	movf	fputc@c^0,w,c
  5193  003622  EC7E  F01F         	call	_putch
  5194  003626  EF62  F01B         	goto	l1086
  5195  00362A                     l2827:
  5196  00362A  EE20 F004          	lfsr	2,4
  5197  00362E  5003               	movf	fputc@fp^0,w,c
  5198  003630  26D9               	addwf	fsr2l,f,c
  5199  003632  5004               	movf	(fputc@fp+1)^0,w,c
  5200  003634  22DA               	addwfc	fsr2h,f,c
  5201  003636  50DE               	movf	postinc2,w,c
  5202  003638  10DE               	iorwf	postinc2,w,c
  5203  00363A  B4D8               	btfsc	status,2,c
  5204  00363C  EF22  F01B         	goto	u2701
  5205  003640  EF24  F01B         	goto	u2700
  5206  003644                     u2701:
  5207  003644  EF3F  F01B         	goto	l2831
  5208  003648                     u2700:
  5209  003648  EE20 F004          	lfsr	2,4
  5210  00364C  5003               	movf	fputc@fp^0,w,c
  5211  00364E  26D9               	addwf	fsr2l,f,c
  5212  003650  5004               	movf	(fputc@fp+1)^0,w,c
  5213  003652  22DA               	addwfc	fsr2h,f,c
  5214  003654  EE10 F002          	lfsr	1,2
  5215  003658  5003               	movf	fputc@fp^0,w,c
  5216  00365A  26E1               	addwf	fsr1l,f,c
  5217  00365C  5004               	movf	(fputc@fp+1)^0,w,c
  5218  00365E  22E2               	addwfc	fsr1h,f,c
  5219  003660  50DE               	movf	postinc2,w,c
  5220  003662  5CE6               	subwf	postinc1,w,c
  5221  003664  50E6               	movf	postinc1,w,c
  5222  003666  0A80               	xorlw	128
  5223  003668  6E09               	movwf	(??_fputc+4)^0,c
  5224  00366A  50DE               	movf	postinc2,w,c
  5225  00366C  0A80               	xorlw	128
  5226  00366E  5809               	subwfb	(??_fputc+4)^0,w,c
  5227  003670  B0D8               	btfsc	status,0,c
  5228  003672  EF3D  F01B         	goto	u2711
  5229  003676  EF3F  F01B         	goto	u2710
  5230  00367A                     u2711:
  5231  00367A  EF62  F01B         	goto	l1086
  5232  00367E                     u2710:
  5233  00367E                     l2831:
  5234  00367E  EE20 F002          	lfsr	2,2
  5235  003682  5003               	movf	fputc@fp^0,w,c
  5236  003684  26D9               	addwf	fsr2l,f,c
  5237  003686  5004               	movf	(fputc@fp+1)^0,w,c
  5238  003688  22DA               	addwfc	fsr2h,f,c
  5239  00368A  CFDE F005          	movff	postinc2,??_fputc
  5240  00368E  CFDD F006          	movff	postdec2,??_fputc+1
  5241  003692  C003  FFD9         	movff	fputc@fp,fsr2l
  5242  003696  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5243  00369A  CFDE F007          	movff	postinc2,??_fputc+2
  5244  00369E  CFDD F008          	movff	postdec2,??_fputc+3
  5245  0036A2  5005               	movf	??_fputc^0,w,c
  5246  0036A4  2407               	addwf	(??_fputc+2)^0,w,c
  5247  0036A6  6ED9               	movwf	fsr2l,c
  5248  0036A8  5006               	movf	(??_fputc+1)^0,w,c
  5249  0036AA  2008               	addwfc	(??_fputc+3)^0,w,c
  5250  0036AC  6EDA               	movwf	fsr2h,c
  5251  0036AE  C001  FFDF         	movff	fputc@c,indf2
  5252  0036B2  EE20 F002          	lfsr	2,2
  5253  0036B6  5003               	movf	fputc@fp^0,w,c
  5254  0036B8  26D9               	addwf	fsr2l,f,c
  5255  0036BA  5004               	movf	(fputc@fp+1)^0,w,c
  5256  0036BC  22DA               	addwfc	fsr2h,f,c
  5257  0036BE  2ADE               	incf	postinc2,f,c
  5258  0036C0  0E00               	movlw	0
  5259  0036C2  22DD               	addwfc	postdec2,f,c
  5260  0036C4                     l1086:
  5261  0036C4  0012               	return		;funcret
  5262  0036C6                     __end_of_fputc:
  5263                           	callstack 0
  5264                           
  5265 ;; *************** function _putch *****************
  5266 ;; Defined at:
  5267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  c               1    wreg     unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  c               1    0[COMRAM] unsigned char 
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      void 
  5274 ;; Registers used:
  5275 ;;		wreg
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5281 ;;      Params:         0       0       0       0       0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5285 ;;Total ram usage:        0 bytes
  5286 ;; Hardware stack levels used: 1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_fputc
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text16
  5295  003EFC                     __ptext16:
  5296                           	callstack 0
  5297  003EFC                     _putch:
  5298                           	callstack 23
  5299  003EFC  0012               	return		;funcret
  5300  003EFE                     __end_of_putch:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _floorf *****************
  5304 ;; Defined at:
  5305 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  x               4   64[COMRAM] float 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  u               4   80[COMRAM] struct .
  5310 ;;  m               4   74[COMRAM] unsigned long 
  5311 ;;  e               2   78[COMRAM] int 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  4   64[COMRAM] float 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5321 ;;      Params:         4       0       0       0       0       0       0       0       0
  5322 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5323 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5324 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5325 ;;Total ram usage:       20 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_efgtoa
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text17
  5335  0026DC                     __ptext17:
  5336                           	callstack 0
  5337  0026DC                     _floorf:
  5338                           	callstack 26
  5339  0026DC  C0D3  F051         	movff	floorf@F527,floorf@u
  5340  0026E0  C0D4  F052         	movff	floorf@F527+1,floorf@u+1
  5341  0026E4  C0D5  F053         	movff	floorf@F527+2,floorf@u+2
  5342  0026E8  C0D6  F054         	movff	floorf@F527+3,floorf@u+3
  5343  0026EC  C041  F051         	movff	floorf@x,floorf@u
  5344  0026F0  C042  F052         	movff	floorf@x+1,floorf@u+1
  5345  0026F4  C043  F053         	movff	floorf@x+2,floorf@u+2
  5346  0026F8  C044  F054         	movff	floorf@x+3,floorf@u+3
  5347  0026FC  0E81               	movlw	129
  5348  0026FE  6E45               	movwf	??_floorf^0,c
  5349  002700  0EFF               	movlw	255
  5350  002702  6E46               	movwf	(??_floorf+1)^0,c
  5351  002704  C051  F047         	movff	floorf@u,??_floorf+2
  5352  002708  C052  F048         	movff	floorf@u+1,??_floorf+3
  5353  00270C  C053  F049         	movff	floorf@u+2,??_floorf+4
  5354  002710  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5355  002714  0E18               	movlw	24
  5356  002716  EF92  F013         	goto	u4080
  5357  00271A                     u4085:
  5358  00271A  90D8               	bcf	status,0,c
  5359  00271C  324A               	rrcf	(??_floorf+5)^0,f,c
  5360  00271E  3249               	rrcf	(??_floorf+4)^0,f,c
  5361  002720  3248               	rrcf	(??_floorf+3)^0,f,c
  5362  002722  3247               	rrcf	(??_floorf+2)^0,f,c
  5363  002724                     u4080:
  5364  002724  2EE8               	decfsz	wreg,f,c
  5365  002726  EF8D  F013         	goto	u4085
  5366  00272A  5047               	movf	(??_floorf+2)^0,w,c
  5367  00272C  2445               	addwf	??_floorf^0,w,c
  5368  00272E  6E4F               	movwf	floorf@e^0,c
  5369  002730  0E00               	movlw	0
  5370  002732  2046               	addwfc	(??_floorf+1)^0,w,c
  5371  002734  6E50               	movwf	(floorf@e+1)^0,c
  5372  002736  BE50               	btfsc	(floorf@e+1)^0,7,c
  5373  002738  EFA7  F013         	goto	u4091
  5374  00273C  5050               	movf	(floorf@e+1)^0,w,c
  5375  00273E  E109               	bnz	u4090
  5376  002740  0E17               	movlw	23
  5377  002742  5C4F               	subwf	floorf@e^0,w,c
  5378  002744  A0D8               	btfss	status,0,c
  5379  002746  EFA7  F013         	goto	u4091
  5380  00274A  EFA9  F013         	goto	u4090
  5381  00274E                     u4091:
  5382  00274E  EFB3  F013         	goto	l3611
  5383  002752                     u4090:
  5384  002752                     l3609:
  5385  002752  C041  F041         	movff	floorf@x,?_floorf
  5386  002756  C042  F042         	movff	floorf@x+1,?_floorf+1
  5387  00275A  C043  F043         	movff	floorf@x+2,?_floorf+2
  5388  00275E  C044  F044         	movff	floorf@x+3,?_floorf+3
  5389  002762  EF76  F014         	goto	l1047
  5390  002766                     l3611:
  5391  002766  BE50               	btfsc	(floorf@e+1)^0,7,c
  5392  002768  EFB8  F013         	goto	u4101
  5393  00276C  EFBA  F013         	goto	u4100
  5394  002770                     u4101:
  5395  002770  EF2A  F014         	goto	l3621
  5396  002774                     u4100:
  5397  002774  C04F  F045         	movff	floorf@e,??_floorf
  5398  002778  0EFF               	movlw	255
  5399  00277A  6E46               	movwf	(??_floorf+1)^0,c
  5400  00277C  0EFF               	movlw	255
  5401  00277E  6E47               	movwf	(??_floorf+2)^0,c
  5402  002780  0E7F               	movlw	127
  5403  002782  6E48               	movwf	(??_floorf+3)^0,c
  5404  002784  0E00               	movlw	0
  5405  002786  6E49               	movwf	(??_floorf+4)^0,c
  5406  002788                     u4115:
  5407  002788  6645               	tstfsz	??_floorf^0,c
  5408  00278A  EFC9  F013         	goto	u4116
  5409  00278E  EFD1  F013         	goto	u4117
  5410  002792                     u4116:
  5411  002792  3449               	rlcf	(??_floorf+4)^0,w,c
  5412  002794  3249               	rrcf	(??_floorf+4)^0,f,c
  5413  002796  3248               	rrcf	(??_floorf+3)^0,f,c
  5414  002798  3247               	rrcf	(??_floorf+2)^0,f,c
  5415  00279A  3246               	rrcf	(??_floorf+1)^0,f,c
  5416  00279C  2E45               	decfsz	??_floorf^0,f,c
  5417  00279E  EFC4  F013         	goto	u4115
  5418  0027A2                     u4117:
  5419  0027A2  C046  F04B         	movff	??_floorf+1,floorf@m
  5420  0027A6  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5421  0027AA  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5422  0027AE  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5423  0027B2  504B               	movf	floorf@m^0,w,c
  5424  0027B4  1451               	andwf	floorf@u^0,w,c
  5425  0027B6  6E45               	movwf	??_floorf^0,c
  5426  0027B8  504C               	movf	(floorf@m+1)^0,w,c
  5427  0027BA  1452               	andwf	(floorf@u+1)^0,w,c
  5428  0027BC  6E46               	movwf	(??_floorf+1)^0,c
  5429  0027BE  504D               	movf	(floorf@m+2)^0,w,c
  5430  0027C0  1453               	andwf	(floorf@u+2)^0,w,c
  5431  0027C2  6E47               	movwf	(??_floorf+2)^0,c
  5432  0027C4  504E               	movf	(floorf@m+3)^0,w,c
  5433  0027C6  1454               	andwf	(floorf@u+3)^0,w,c
  5434  0027C8  6E48               	movwf	(??_floorf+3)^0,c
  5435  0027CA  5045               	movf	??_floorf^0,w,c
  5436  0027CC  1046               	iorwf	(??_floorf+1)^0,w,c
  5437  0027CE  1047               	iorwf	(??_floorf+2)^0,w,c
  5438  0027D0  1048               	iorwf	(??_floorf+3)^0,w,c
  5439  0027D2  A4D8               	btfss	status,2,c
  5440  0027D4  EFEE  F013         	goto	u4121
  5441  0027D8  EFF0  F013         	goto	u4120
  5442  0027DC                     u4121:
  5443  0027DC  EFF2  F013         	goto	l3617
  5444  0027E0                     u4120:
  5445  0027E0  EFA9  F013         	goto	l3609
  5446  0027E4                     l3617:
  5447  0027E4  C051  F045         	movff	floorf@u,??_floorf
  5448  0027E8  C052  F046         	movff	floorf@u+1,??_floorf+1
  5449  0027EC  C053  F047         	movff	floorf@u+2,??_floorf+2
  5450  0027F0  C054  F048         	movff	floorf@u+3,??_floorf+3
  5451  0027F4  0E20               	movlw	32
  5452  0027F6  EF02  F014         	goto	u4130
  5453  0027FA                     u4135:
  5454  0027FA  90D8               	bcf	status,0,c
  5455  0027FC  3248               	rrcf	(??_floorf+3)^0,f,c
  5456  0027FE  3247               	rrcf	(??_floorf+2)^0,f,c
  5457  002800  3246               	rrcf	(??_floorf+1)^0,f,c
  5458  002802  3245               	rrcf	??_floorf^0,f,c
  5459  002804                     u4130:
  5460  002804  2EE8               	decfsz	wreg,f,c
  5461  002806  EFFD  F013         	goto	u4135
  5462  00280A  5045               	movf	??_floorf^0,w,c
  5463  00280C  1046               	iorwf	(??_floorf+1)^0,w,c
  5464  00280E  1047               	iorwf	(??_floorf+2)^0,w,c
  5465  002810  1048               	iorwf	(??_floorf+3)^0,w,c
  5466  002812  B4D8               	btfsc	status,2,c
  5467  002814  EF0E  F014         	goto	u4141
  5468  002818  EF10  F014         	goto	u4140
  5469  00281C                     u4141:
  5470  00281C  EF18  F014         	goto	l1050
  5471  002820                     u4140:
  5472  002820  504B               	movf	floorf@m^0,w,c
  5473  002822  2651               	addwf	floorf@u^0,f,c
  5474  002824  504C               	movf	(floorf@m+1)^0,w,c
  5475  002826  2252               	addwfc	(floorf@u+1)^0,f,c
  5476  002828  504D               	movf	(floorf@m+2)^0,w,c
  5477  00282A  2253               	addwfc	(floorf@u+2)^0,f,c
  5478  00282C  504E               	movf	(floorf@m+3)^0,w,c
  5479  00282E  2254               	addwfc	(floorf@u+3)^0,f,c
  5480  002830                     l1050:
  5481  002830  1C4B               	comf	floorf@m^0,w,c
  5482  002832  6E45               	movwf	??_floorf^0,c
  5483  002834  1C4C               	comf	(floorf@m+1)^0,w,c
  5484  002836  6E46               	movwf	(??_floorf+1)^0,c
  5485  002838  1C4D               	comf	(floorf@m+2)^0,w,c
  5486  00283A  6E47               	movwf	(??_floorf+2)^0,c
  5487  00283C  1C4E               	comf	(floorf@m+3)^0,w,c
  5488  00283E  6E48               	movwf	(??_floorf+3)^0,c
  5489  002840  5045               	movf	??_floorf^0,w,c
  5490  002842  1651               	andwf	floorf@u^0,f,c
  5491  002844  5046               	movf	(??_floorf+1)^0,w,c
  5492  002846  1652               	andwf	(floorf@u+1)^0,f,c
  5493  002848  5047               	movf	(??_floorf+2)^0,w,c
  5494  00284A  1653               	andwf	(floorf@u+2)^0,f,c
  5495  00284C  5048               	movf	(??_floorf+3)^0,w,c
  5496  00284E  1654               	andwf	(floorf@u+3)^0,f,c
  5497  002850  EF6E  F014         	goto	l3629
  5498  002854                     l3621:
  5499  002854  C051  F045         	movff	floorf@u,??_floorf
  5500  002858  C052  F046         	movff	floorf@u+1,??_floorf+1
  5501  00285C  C053  F047         	movff	floorf@u+2,??_floorf+2
  5502  002860  C054  F048         	movff	floorf@u+3,??_floorf+3
  5503  002864  0E20               	movlw	32
  5504  002866  EF3A  F014         	goto	u4150
  5505  00286A                     u4155:
  5506  00286A  90D8               	bcf	status,0,c
  5507  00286C  3248               	rrcf	(??_floorf+3)^0,f,c
  5508  00286E  3247               	rrcf	(??_floorf+2)^0,f,c
  5509  002870  3246               	rrcf	(??_floorf+1)^0,f,c
  5510  002872  3245               	rrcf	??_floorf^0,f,c
  5511  002874                     u4150:
  5512  002874  2EE8               	decfsz	wreg,f,c
  5513  002876  EF35  F014         	goto	u4155
  5514  00287A  5045               	movf	??_floorf^0,w,c
  5515  00287C  1046               	iorwf	(??_floorf+1)^0,w,c
  5516  00287E  1047               	iorwf	(??_floorf+2)^0,w,c
  5517  002880  1048               	iorwf	(??_floorf+3)^0,w,c
  5518  002882  A4D8               	btfss	status,2,c
  5519  002884  EF46  F014         	goto	u4161
  5520  002888  EF48  F014         	goto	u4160
  5521  00288C                     u4161:
  5522  00288C  EF52  F014         	goto	l3625
  5523  002890                     u4160:
  5524  002890  0E00               	movlw	0
  5525  002892  6E51               	movwf	floorf@u^0,c
  5526  002894  0E00               	movlw	0
  5527  002896  6E52               	movwf	(floorf@u+1)^0,c
  5528  002898  0E00               	movlw	0
  5529  00289A  6E53               	movwf	(floorf@u+2)^0,c
  5530  00289C  0E00               	movlw	0
  5531  00289E  6E54               	movwf	(floorf@u+3)^0,c
  5532  0028A0  EF6E  F014         	goto	l3629
  5533  0028A4                     l3625:
  5534  0028A4  90D8               	bcf	status,0,c
  5535  0028A6  3451               	rlcf	floorf@u^0,w,c
  5536  0028A8  6E45               	movwf	??_floorf^0,c
  5537  0028AA  3452               	rlcf	(floorf@u+1)^0,w,c
  5538  0028AC  6E46               	movwf	(??_floorf+1)^0,c
  5539  0028AE  3453               	rlcf	(floorf@u+2)^0,w,c
  5540  0028B0  6E47               	movwf	(??_floorf+2)^0,c
  5541  0028B2  3454               	rlcf	(floorf@u+3)^0,w,c
  5542  0028B4  6E48               	movwf	(??_floorf+3)^0,c
  5543  0028B6  5045               	movf	??_floorf^0,w,c
  5544  0028B8  1046               	iorwf	(??_floorf+1)^0,w,c
  5545  0028BA  1047               	iorwf	(??_floorf+2)^0,w,c
  5546  0028BC  1048               	iorwf	(??_floorf+3)^0,w,c
  5547  0028BE  B4D8               	btfsc	status,2,c
  5548  0028C0  EF64  F014         	goto	u4171
  5549  0028C4  EF66  F014         	goto	u4170
  5550  0028C8                     u4171:
  5551  0028C8  EF6E  F014         	goto	l3629
  5552  0028CC                     u4170:
  5553  0028CC  0E00               	movlw	0
  5554  0028CE  6E51               	movwf	floorf@u^0,c
  5555  0028D0  0E00               	movlw	0
  5556  0028D2  6E52               	movwf	(floorf@u+1)^0,c
  5557  0028D4  0E80               	movlw	128
  5558  0028D6  6E53               	movwf	(floorf@u+2)^0,c
  5559  0028D8  0EBF               	movlw	191
  5560  0028DA  6E54               	movwf	(floorf@u+3)^0,c
  5561  0028DC                     l3629:
  5562  0028DC  C051  F041         	movff	floorf@u,?_floorf
  5563  0028E0  C052  F042         	movff	floorf@u+1,?_floorf+1
  5564  0028E4  C053  F043         	movff	floorf@u+2,?_floorf+2
  5565  0028E8  C054  F044         	movff	floorf@u+3,?_floorf+3
  5566  0028EC                     l1047:
  5567  0028EC  0012               	return		;funcret
  5568  0028EE                     __end_of_floorf:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function ___fpclassifyf *****************
  5572 ;; Defined at:
  5573 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  x               4    0[COMRAM] float 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  u               4   10[COMRAM] struct .
  5578 ;;  e               2    8[COMRAM] int 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  2    0[COMRAM] int 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5588 ;;      Params:         4       0       0       0       0       0       0       0       0
  5589 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5590 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5591 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:       14 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_efgtoa
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text18
  5602  003196                     __ptext18:
  5603                           	callstack 0
  5604  003196                     ___fpclassifyf:
  5605                           	callstack 26
  5606  003196  C0D7  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5607  00319A  C0D8  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5608  00319E  C0D9  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5609  0031A2  C0DA  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5610  0031A6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5611  0031AA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5612  0031AE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5613  0031B2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5614  0031B6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5615  0031BA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5616  0031BE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5617  0031C2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5618  0031C6  0E18               	movlw	24
  5619  0031C8  EFEB  F018         	goto	u3960
  5620  0031CC                     u3965:
  5621  0031CC  90D8               	bcf	status,0,c
  5622  0031CE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5623  0031D0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5624  0031D2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5625  0031D4  3205               	rrcf	??___fpclassifyf^0,f,c
  5626  0031D6                     u3960:
  5627  0031D6  2EE8               	decfsz	wreg,f,c
  5628  0031D8  EFE6  F018         	goto	u3965
  5629  0031DC  5005               	movf	??___fpclassifyf^0,w,c
  5630  0031DE  6E09               	movwf	___fpclassifyf@e^0,c
  5631  0031E0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5632  0031E2  5009               	movf	___fpclassifyf@e^0,w,c
  5633  0031E4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5634  0031E6  A4D8               	btfss	status,2,c
  5635  0031E8  EFF8  F018         	goto	u3971
  5636  0031EC  EFFA  F018         	goto	u3970
  5637  0031F0                     u3971:
  5638  0031F0  EF1A  F019         	goto	l3581
  5639  0031F4                     u3970:
  5640  0031F4  90D8               	bcf	status,0,c
  5641  0031F6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5642  0031F8  6E05               	movwf	??___fpclassifyf^0,c
  5643  0031FA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5644  0031FC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5645  0031FE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5646  003200  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5647  003202  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5648  003204  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5649  003206  5005               	movf	??___fpclassifyf^0,w,c
  5650  003208  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5651  00320A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5652  00320C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5653  00320E  A4D8               	btfss	status,2,c
  5654  003210  EF0C  F019         	goto	u3981
  5655  003214  EF0E  F019         	goto	u3980
  5656  003218                     u3981:
  5657  003218  EF14  F019         	goto	l3577
  5658  00321C                     u3980:
  5659  00321C  0E00               	movlw	0
  5660  00321E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5661  003220  0E02               	movlw	2
  5662  003222  6E01               	movwf	?___fpclassifyf^0,c
  5663  003224  EF49  F019         	goto	l1009
  5664  003228                     l3577:
  5665  003228  0E00               	movlw	0
  5666  00322A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5667  00322C  0E03               	movlw	3
  5668  00322E  6E01               	movwf	?___fpclassifyf^0,c
  5669  003230  EF49  F019         	goto	l1009
  5670  003234                     l3581:
  5671  003234  2809               	incf	___fpclassifyf@e^0,w,c
  5672  003236  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5673  003238  A4D8               	btfss	status,2,c
  5674  00323A  EF21  F019         	goto	u3991
  5675  00323E  EF23  F019         	goto	u3990
  5676  003242                     u3991:
  5677  003242  EF45  F019         	goto	l3587
  5678  003246                     u3990:
  5679  003246  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5680  00324A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5681  00324E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5682  003252  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5683  003256  0E09               	movlw	9
  5684  003258                     u4005:
  5685  003258  90D8               	bcf	status,0,c
  5686  00325A  3605               	rlcf	??___fpclassifyf^0,f,c
  5687  00325C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5688  00325E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5689  003260  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5690  003262  2EE8               	decfsz	wreg,f,c
  5691  003264  EF2C  F019         	goto	u4005
  5692  003268  5005               	movf	??___fpclassifyf^0,w,c
  5693  00326A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5694  00326C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5695  00326E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5696  003270  B4D8               	btfsc	status,2,c
  5697  003272  EF3D  F019         	goto	u4011
  5698  003276  EF40  F019         	goto	u4010
  5699  00327A                     u4011:
  5700  00327A  0E01               	movlw	1
  5701  00327C  EF41  F019         	goto	u4020
  5702  003280                     u4010:
  5703  003280  0E00               	movlw	0
  5704  003282                     u4020:
  5705  003282  6E01               	movwf	?___fpclassifyf^0,c
  5706  003284  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5707  003286  EF49  F019         	goto	l1009
  5708  00328A                     l3587:
  5709  00328A  0E00               	movlw	0
  5710  00328C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5711  00328E  0E04               	movlw	4
  5712  003290  6E01               	movwf	?___fpclassifyf^0,c
  5713  003292                     l1009:
  5714  003292  0012               	return		;funcret
  5715  003294                     __end_of___fpclassifyf:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function ___fltol *****************
  5719 ;; Defined at:
  5720 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  f1              4    0[COMRAM] int 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  exp1            1    9[COMRAM] unsigned char 
  5725 ;;  sign1           1    8[COMRAM] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  4    0[COMRAM] long 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5735 ;;      Params:         4       0       0       0       0       0       0       0       0
  5736 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5737 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5738 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5739 ;;Total ram usage:       10 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_efgtoa
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text19
  5749  002F8C                     __ptext19:
  5750                           	callstack 0
  5751  002F8C                     ___fltol:
  5752                           	callstack 26
  5753  002F8C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5754  002F8E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5755  002F90  6E0A               	movwf	___fltol@exp1^0,c
  5756  002F92  500A               	movf	___fltol@exp1^0,w,c
  5757  002F94  A4D8               	btfss	status,2,c
  5758  002F96  EFCF  F017         	goto	u3781
  5759  002F9A  EFD1  F017         	goto	u3780
  5760  002F9E                     u3781:
  5761  002F9E  EFDB  F017         	goto	l3471
  5762  002FA2                     u3780:
  5763  002FA2                     l3467:
  5764  002FA2  0E00               	movlw	0
  5765  002FA4  6E01               	movwf	?___fltol^0,c
  5766  002FA6  0E00               	movlw	0
  5767  002FA8  6E02               	movwf	(?___fltol+1)^0,c
  5768  002FAA  0E00               	movlw	0
  5769  002FAC  6E03               	movwf	(?___fltol+2)^0,c
  5770  002FAE  0E00               	movlw	0
  5771  002FB0  6E04               	movwf	(?___fltol+3)^0,c
  5772  002FB2  EF48  F018         	goto	l420
  5773  002FB6                     l3471:
  5774  002FB6  C001  F005         	movff	___fltol@f1,??___fltol
  5775  002FBA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5776  002FBE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5777  002FC2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5778  002FC6  0E20               	movlw	32
  5779  002FC8  EFEB  F017         	goto	u3790
  5780  002FCC                     u3795:
  5781  002FCC  90D8               	bcf	status,0,c
  5782  002FCE  3208               	rrcf	(??___fltol+3)^0,f,c
  5783  002FD0  3207               	rrcf	(??___fltol+2)^0,f,c
  5784  002FD2  3206               	rrcf	(??___fltol+1)^0,f,c
  5785  002FD4  3205               	rrcf	??___fltol^0,f,c
  5786  002FD6                     u3790:
  5787  002FD6  2EE8               	decfsz	wreg,f,c
  5788  002FD8  EFE6  F017         	goto	u3795
  5789  002FDC  5005               	movf	??___fltol^0,w,c
  5790  002FDE  6E09               	movwf	___fltol@sign1^0,c
  5791  002FE0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5792  002FE2  0EFF               	movlw	255
  5793  002FE4  1601               	andwf	___fltol@f1^0,f,c
  5794  002FE6  0EFF               	movlw	255
  5795  002FE8  1602               	andwf	(___fltol@f1+1)^0,f,c
  5796  002FEA  0EFF               	movlw	255
  5797  002FEC  1603               	andwf	(___fltol@f1+2)^0,f,c
  5798  002FEE  0E00               	movlw	0
  5799  002FF0  1604               	andwf	(___fltol@f1+3)^0,f,c
  5800  002FF2  0E96               	movlw	150
  5801  002FF4  5E0A               	subwf	___fltol@exp1^0,f,c
  5802  002FF6  BE0A               	btfsc	___fltol@exp1^0,7,c
  5803  002FF8  EF02  F018         	goto	u3800
  5804  002FFC  EF00  F018         	goto	u3801
  5805  003000                     u3801:
  5806  003000  EF18  F018         	goto	l3491
  5807  003004                     u3800:
  5808  003004  500A               	movf	___fltol@exp1^0,w,c
  5809  003006  0A80               	xorlw	128
  5810  003008  0F97               	addlw	151
  5811  00300A  B0D8               	btfsc	status,0,c
  5812  00300C  EF0A  F018         	goto	u3811
  5813  003010  EF0C  F018         	goto	u3810
  5814  003014                     u3811:
  5815  003014  EF0E  F018         	goto	l3487
  5816  003018                     u3810:
  5817  003018  EFD1  F017         	goto	l3467
  5818  00301C                     l3487:
  5819  00301C  90D8               	bcf	status,0,c
  5820  00301E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5821  003020  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5822  003022  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5823  003024  3201               	rrcf	___fltol@f1^0,f,c
  5824  003026  3E0A               	incfsz	___fltol@exp1^0,f,c
  5825  003028  EF0E  F018         	goto	l3487
  5826  00302C  EF30  F018         	goto	l3501
  5827  003030                     l3491:
  5828  003030  0E1F               	movlw	31
  5829  003032  640A               	cpfsgt	___fltol@exp1^0,c
  5830  003034  EF1E  F018         	goto	u3821
  5831  003038  EF20  F018         	goto	u3820
  5832  00303C                     u3821:
  5833  00303C  EF28  F018         	goto	l3499
  5834  003040                     u3820:
  5835  003040  EFD1  F017         	goto	l3467
  5836  003044                     l3497:
  5837  003044  90D8               	bcf	status,0,c
  5838  003046  3601               	rlcf	___fltol@f1^0,f,c
  5839  003048  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5840  00304A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5841  00304C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5842  00304E  060A               	decf	___fltol@exp1^0,f,c
  5843  003050                     l3499:
  5844  003050  500A               	movf	___fltol@exp1^0,w,c
  5845  003052  A4D8               	btfss	status,2,c
  5846  003054  EF2E  F018         	goto	u3831
  5847  003058  EF30  F018         	goto	u3830
  5848  00305C                     u3831:
  5849  00305C  EF22  F018         	goto	l3497
  5850  003060                     u3830:
  5851  003060                     l3501:
  5852  003060  5009               	movf	___fltol@sign1^0,w,c
  5853  003062  B4D8               	btfsc	status,2,c
  5854  003064  EF36  F018         	goto	u3841
  5855  003068  EF38  F018         	goto	u3840
  5856  00306C                     u3841:
  5857  00306C  EF40  F018         	goto	l3505
  5858  003070                     u3840:
  5859  003070  1E04               	comf	(___fltol@f1+3)^0,f,c
  5860  003072  1E03               	comf	(___fltol@f1+2)^0,f,c
  5861  003074  1E02               	comf	(___fltol@f1+1)^0,f,c
  5862  003076  6C01               	negf	___fltol@f1^0,c
  5863  003078  0E00               	movlw	0
  5864  00307A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5865  00307C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5866  00307E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5867  003080                     l3505:
  5868  003080  C001  F001         	movff	___fltol@f1,?___fltol
  5869  003084  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5870  003088  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5871  00308C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5872  003090                     l420:
  5873  003090  0012               	return		;funcret
  5874  003092                     __end_of___fltol:
  5875                           	callstack 0
  5876                           
  5877 ;; *************** function ___flsub *****************
  5878 ;; Defined at:
  5879 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  b               4   39[COMRAM] long 
  5882 ;;  a               4   43[COMRAM] long 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  4   39[COMRAM] long 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5894 ;;      Params:         8       0       0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5898 ;;Total ram usage:        8 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 1
  5901 ;; This function calls:
  5902 ;;		___fladd
  5903 ;; This function is called by:
  5904 ;;		_efgtoa
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text20
  5909  003C54                     __ptext20:
  5910                           	callstack 0
  5911  003C54                     ___flsub:
  5912                           	callstack 25
  5913  003C54  0E00               	movlw	0
  5914  003C56  1A2C               	xorwf	___flsub@a^0,f,c
  5915  003C58  0E00               	movlw	0
  5916  003C5A  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5917  003C5C  0E00               	movlw	0
  5918  003C5E  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5919  003C60  0E80               	movlw	128
  5920  003C62  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5921  003C64  C028  F001         	movff	___flsub@b,___fladd@b
  5922  003C68  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5923  003C6C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5924  003C70  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5925  003C74  C02C  F005         	movff	___flsub@a,___fladd@a
  5926  003C78  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5927  003C7C  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5928  003C80  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5929  003C84  EC2C  F00D         	call	___fladd	;wreg free
  5930  003C88  C001  F028         	movff	?___fladd,?___flsub
  5931  003C8C  C002  F029         	movff	?___fladd+1,?___flsub+1
  5932  003C90  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5933  003C94  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5934  003C98  0012               	return		;funcret
  5935  003C9A                     __end_of___flsub:
  5936                           	callstack 0
  5937                           
  5938 ;; *************** function ___fladd *****************
  5939 ;; Defined at:
  5940 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  b               4    0[COMRAM] long 
  5943 ;;  a               4    4[COMRAM] long 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  grs             1   15[COMRAM] unsigned char 
  5946 ;;  bexp            1   14[COMRAM] unsigned char 
  5947 ;;  aexp            1   13[COMRAM] unsigned char 
  5948 ;;  signs           1   12[COMRAM] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4    0[COMRAM] unsigned char 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5958 ;;      Params:         8       0       0       0       0       0       0       0       0
  5959 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5961 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5962 ;;Total ram usage:       16 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		___flsub
  5968 ;;		_efgtoa
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text21
  5973  001A58                     __ptext21:
  5974                           	callstack 0
  5975  001A58                     ___fladd:
  5976                           	callstack 25
  5977  001A58  5004               	movf	(___fladd@b+3)^0,w,c
  5978  001A5A  0B80               	andlw	128
  5979  001A5C  6E0D               	movwf	___fladd@signs^0,c
  5980  001A5E  5004               	movf	(___fladd@b+3)^0,w,c
  5981  001A60  2404               	addwf	(___fladd@b+3)^0,w,c
  5982  001A62  6E0F               	movwf	___fladd@bexp^0,c
  5983  001A64  AE03               	btfss	(___fladd@b+2)^0,7,c
  5984  001A66  EF37  F00D         	goto	u2721
  5985  001A6A  EF39  F00D         	goto	u2720
  5986  001A6E                     u2721:
  5987  001A6E  EF3A  F00D         	goto	l2841
  5988  001A72                     u2720:
  5989  001A72  800F               	bsf	___fladd@bexp^0,0,c
  5990  001A74                     l2841:
  5991  001A74  500F               	movf	___fladd@bexp^0,w,c
  5992  001A76  B4D8               	btfsc	status,2,c
  5993  001A78  EF40  F00D         	goto	u2731
  5994  001A7C  EF42  F00D         	goto	u2730
  5995  001A80                     u2731:
  5996  001A80  EF57  F00D         	goto	l2851
  5997  001A84                     u2730:
  5998  001A84  280F               	incf	___fladd@bexp^0,w,c
  5999  001A86  A4D8               	btfss	status,2,c
  6000  001A88  EF48  F00D         	goto	u2741
  6001  001A8C  EF4A  F00D         	goto	u2740
  6002  001A90                     u2741:
  6003  001A90  EF52  F00D         	goto	l2847
  6004  001A94                     u2740:
  6005  001A94  0E00               	movlw	0
  6006  001A96  6E01               	movwf	___fladd@b^0,c
  6007  001A98  0E00               	movlw	0
  6008  001A9A  6E02               	movwf	(___fladd@b+1)^0,c
  6009  001A9C  0E00               	movlw	0
  6010  001A9E  6E03               	movwf	(___fladd@b+2)^0,c
  6011  001AA0  0E00               	movlw	0
  6012  001AA2  6E04               	movwf	(___fladd@b+3)^0,c
  6013  001AA4                     l2847:
  6014  001AA4  8E03               	bsf	(___fladd@b+2)^0,7,c
  6015  001AA6  0E00               	movlw	0
  6016  001AA8  6E04               	movwf	(___fladd@b+3)^0,c
  6017  001AAA  EF5F  F00D         	goto	l2853
  6018  001AAE                     l2851:
  6019  001AAE  0E00               	movlw	0
  6020  001AB0  6E01               	movwf	___fladd@b^0,c
  6021  001AB2  0E00               	movlw	0
  6022  001AB4  6E02               	movwf	(___fladd@b+1)^0,c
  6023  001AB6  0E00               	movlw	0
  6024  001AB8  6E03               	movwf	(___fladd@b+2)^0,c
  6025  001ABA  0E00               	movlw	0
  6026  001ABC  6E04               	movwf	(___fladd@b+3)^0,c
  6027  001ABE                     l2853:
  6028  001ABE  5008               	movf	(___fladd@a+3)^0,w,c
  6029  001AC0  0B80               	andlw	128
  6030  001AC2  6E0E               	movwf	___fladd@aexp^0,c
  6031  001AC4  500D               	movf	___fladd@signs^0,w,c
  6032  001AC6  180E               	xorwf	___fladd@aexp^0,w,c
  6033  001AC8  B4D8               	btfsc	status,2,c
  6034  001ACA  EF69  F00D         	goto	u2751
  6035  001ACE  EF6B  F00D         	goto	u2750
  6036  001AD2                     u2751:
  6037  001AD2  EF6C  F00D         	goto	l2859
  6038  001AD6                     u2750:
  6039  001AD6  8C0D               	bsf	___fladd@signs^0,6,c
  6040  001AD8                     l2859:
  6041  001AD8  5008               	movf	(___fladd@a+3)^0,w,c
  6042  001ADA  2408               	addwf	(___fladd@a+3)^0,w,c
  6043  001ADC  6E0E               	movwf	___fladd@aexp^0,c
  6044  001ADE  AE07               	btfss	(___fladd@a+2)^0,7,c
  6045  001AE0  EF74  F00D         	goto	u2761
  6046  001AE4  EF76  F00D         	goto	u2760
  6047  001AE8                     u2761:
  6048  001AE8  EF77  F00D         	goto	l2865
  6049  001AEC                     u2760:
  6050  001AEC  800E               	bsf	___fladd@aexp^0,0,c
  6051  001AEE                     l2865:
  6052  001AEE  500E               	movf	___fladd@aexp^0,w,c
  6053  001AF0  B4D8               	btfsc	status,2,c
  6054  001AF2  EF7D  F00D         	goto	u2771
  6055  001AF6  EF7F  F00D         	goto	u2770
  6056  001AFA                     u2771:
  6057  001AFA  EF94  F00D         	goto	l2875
  6058  001AFE                     u2770:
  6059  001AFE  280E               	incf	___fladd@aexp^0,w,c
  6060  001B00  A4D8               	btfss	status,2,c
  6061  001B02  EF85  F00D         	goto	u2781
  6062  001B06  EF87  F00D         	goto	u2780
  6063  001B0A                     u2781:
  6064  001B0A  EF8F  F00D         	goto	l2871
  6065  001B0E                     u2780:
  6066  001B0E  0E00               	movlw	0
  6067  001B10  6E05               	movwf	___fladd@a^0,c
  6068  001B12  0E00               	movlw	0
  6069  001B14  6E06               	movwf	(___fladd@a+1)^0,c
  6070  001B16  0E00               	movlw	0
  6071  001B18  6E07               	movwf	(___fladd@a+2)^0,c
  6072  001B1A  0E00               	movlw	0
  6073  001B1C  6E08               	movwf	(___fladd@a+3)^0,c
  6074  001B1E                     l2871:
  6075  001B1E  8E07               	bsf	(___fladd@a+2)^0,7,c
  6076  001B20  0E00               	movlw	0
  6077  001B22  6E08               	movwf	(___fladd@a+3)^0,c
  6078  001B24  EF9C  F00D         	goto	l2877
  6079  001B28                     l2875:
  6080  001B28  0E00               	movlw	0
  6081  001B2A  6E05               	movwf	___fladd@a^0,c
  6082  001B2C  0E00               	movlw	0
  6083  001B2E  6E06               	movwf	(___fladd@a+1)^0,c
  6084  001B30  0E00               	movlw	0
  6085  001B32  6E07               	movwf	(___fladd@a+2)^0,c
  6086  001B34  0E00               	movlw	0
  6087  001B36  6E08               	movwf	(___fladd@a+3)^0,c
  6088  001B38                     l2877:
  6089  001B38  500F               	movf	___fladd@bexp^0,w,c
  6090  001B3A  5C0E               	subwf	___fladd@aexp^0,w,c
  6091  001B3C  B0D8               	btfsc	status,0,c
  6092  001B3E  EFA3  F00D         	goto	u2791
  6093  001B42  EFA5  F00D         	goto	u2790
  6094  001B46                     u2791:
  6095  001B46  EFCC  F00D         	goto	l2913
  6096  001B4A                     u2790:
  6097  001B4A  AC0D               	btfss	___fladd@signs^0,6,c
  6098  001B4C  EFAA  F00D         	goto	u2801
  6099  001B50  EFAC  F00D         	goto	u2800
  6100  001B54                     u2801:
  6101  001B54  EFAE  F00D         	goto	l2883
  6102  001B58                     u2800:
  6103  001B58  0E80               	movlw	128
  6104  001B5A  1A0D               	xorwf	___fladd@signs^0,f,c
  6105  001B5C                     l2883:
  6106  001B5C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6107  001B60  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6108  001B64  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6109  001B68  C001  F010         	movff	___fladd@b,___fladd@grs
  6110  001B6C  C005  F001         	movff	___fladd@a,___fladd@b
  6111  001B70  C010  F005         	movff	___fladd@grs,___fladd@a
  6112  001B74  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6113  001B78  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6114  001B7C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6115  001B80  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6116  001B84  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6117  001B88  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6118  001B8C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6119  001B90  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6120  001B94  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6121  001B98                     l2913:
  6122  001B98  0E00               	movlw	0
  6123  001B9A  6E10               	movwf	___fladd@grs^0,c
  6124  001B9C  500F               	movf	___fladd@bexp^0,w,c
  6125  001B9E  C00E  F009         	movff	___fladd@aexp,??___fladd
  6126  001BA2  6A0A               	clrf	(??___fladd+1)^0,c
  6127  001BA4  5E09               	subwf	??___fladd^0,f,c
  6128  001BA6  0E00               	movlw	0
  6129  001BA8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6130  001BAA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6131  001BAC  EFE1  F00D         	goto	u2811
  6132  001BB0  500A               	movf	(??___fladd+1)^0,w,c
  6133  001BB2  E109               	bnz	u2810
  6134  001BB4  0E1A               	movlw	26
  6135  001BB6  5C09               	subwf	??___fladd^0,w,c
  6136  001BB8  A0D8               	btfss	status,0,c
  6137  001BBA  EFE1  F00D         	goto	u2811
  6138  001BBE  EFE3  F00D         	goto	u2810
  6139  001BC2                     u2811:
  6140  001BC2  EF1A  F00E         	goto	l652
  6141  001BC6                     u2810:
  6142  001BC6  5001               	movf	___fladd@b^0,w,c
  6143  001BC8  1002               	iorwf	(___fladd@b+1)^0,w,c
  6144  001BCA  1003               	iorwf	(___fladd@b+2)^0,w,c
  6145  001BCC  1004               	iorwf	(___fladd@b+3)^0,w,c
  6146  001BCE  A4D8               	btfss	status,2,c
  6147  001BD0  EFEC  F00D         	goto	u2821
  6148  001BD4  EFEF  F00D         	goto	u2820
  6149  001BD8                     u2821:
  6150  001BD8  0E01               	movlw	1
  6151  001BDA  EFF0  F00D         	goto	u2830
  6152  001BDE                     u2820:
  6153  001BDE  0E00               	movlw	0
  6154  001BE0                     u2830:
  6155  001BE0  6E10               	movwf	___fladd@grs^0,c
  6156  001BE2  0E00               	movlw	0
  6157  001BE4  6E01               	movwf	___fladd@b^0,c
  6158  001BE6  0E00               	movlw	0
  6159  001BE8  6E02               	movwf	(___fladd@b+1)^0,c
  6160  001BEA  0E00               	movlw	0
  6161  001BEC  6E03               	movwf	(___fladd@b+2)^0,c
  6162  001BEE  0E00               	movlw	0
  6163  001BF0  6E04               	movwf	(___fladd@b+3)^0,c
  6164  001BF2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6165  001BF6  EF23  F00E         	goto	l651
  6166  001BFA                     l653:
  6167  001BFA  A010               	btfss	___fladd@grs^0,0,c
  6168  001BFC  EF02  F00E         	goto	u2841
  6169  001C00  EF04  F00E         	goto	u2840
  6170  001C04                     u2841:
  6171  001C04  EF0A  F00E         	goto	l2925
  6172  001C08                     u2840:
  6173  001C08  90D8               	bcf	status,0,c
  6174  001C0A  3010               	rrcf	___fladd@grs^0,w,c
  6175  001C0C  0901               	iorlw	1
  6176  001C0E  6E10               	movwf	___fladd@grs^0,c
  6177  001C10  EF0C  F00E         	goto	l2927
  6178  001C14                     l2925:
  6179  001C14  90D8               	bcf	status,0,c
  6180  001C16  3210               	rrcf	___fladd@grs^0,f,c
  6181  001C18                     l2927:
  6182  001C18  A001               	btfss	___fladd@b^0,0,c
  6183  001C1A  EF11  F00E         	goto	u2851
  6184  001C1E  EF13  F00E         	goto	u2850
  6185  001C22                     u2851:
  6186  001C22  EF14  F00E         	goto	l2931
  6187  001C26                     u2850:
  6188  001C26  8E10               	bsf	___fladd@grs^0,7,c
  6189  001C28                     l2931:
  6190  001C28  3404               	rlcf	(___fladd@b+3)^0,w,c
  6191  001C2A  3204               	rrcf	(___fladd@b+3)^0,f,c
  6192  001C2C  3203               	rrcf	(___fladd@b+2)^0,f,c
  6193  001C2E  3202               	rrcf	(___fladd@b+1)^0,f,c
  6194  001C30  3201               	rrcf	___fladd@b^0,f,c
  6195  001C32  2A0F               	incf	___fladd@bexp^0,f,c
  6196  001C34                     l652:
  6197  001C34  500E               	movf	___fladd@aexp^0,w,c
  6198  001C36  5C0F               	subwf	___fladd@bexp^0,w,c
  6199  001C38  A0D8               	btfss	status,0,c
  6200  001C3A  EF21  F00E         	goto	u2861
  6201  001C3E  EF23  F00E         	goto	u2860
  6202  001C42                     u2861:
  6203  001C42  EFFD  F00D         	goto	l653
  6204  001C46                     u2860:
  6205  001C46                     l651:
  6206  001C46  BC0D               	btfsc	___fladd@signs^0,6,c
  6207  001C48  EF28  F00E         	goto	u2871
  6208  001C4C  EF2A  F00E         	goto	u2870
  6209  001C50                     u2871:
  6210  001C50  EF6A  F00E         	goto	l2959
  6211  001C54                     u2870:
  6212  001C54  500F               	movf	___fladd@bexp^0,w,c
  6213  001C56  A4D8               	btfss	status,2,c
  6214  001C58  EF30  F00E         	goto	u2881
  6215  001C5C  EF32  F00E         	goto	u2880
  6216  001C60                     u2881:
  6217  001C60  EF3C  F00E         	goto	l2941
  6218  001C64                     u2880:
  6219  001C64  0E00               	movlw	0
  6220  001C66  6E01               	movwf	?___fladd^0,c
  6221  001C68  0E00               	movlw	0
  6222  001C6A  6E02               	movwf	(?___fladd+1)^0,c
  6223  001C6C  0E00               	movlw	0
  6224  001C6E  6E03               	movwf	(?___fladd+2)^0,c
  6225  001C70  0E00               	movlw	0
  6226  001C72  6E04               	movwf	(?___fladd+3)^0,c
  6227  001C74  EF8B  F00F         	goto	l660
  6228  001C78                     l2941:
  6229  001C78  5005               	movf	___fladd@a^0,w,c
  6230  001C7A  2601               	addwf	___fladd@b^0,f,c
  6231  001C7C  5006               	movf	(___fladd@a+1)^0,w,c
  6232  001C7E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6233  001C80  5007               	movf	(___fladd@a+2)^0,w,c
  6234  001C82  2203               	addwfc	(___fladd@b+2)^0,f,c
  6235  001C84  5008               	movf	(___fladd@a+3)^0,w,c
  6236  001C86  2204               	addwfc	(___fladd@b+3)^0,f,c
  6237  001C88  A004               	btfss	(___fladd@b+3)^0,0,c
  6238  001C8A  EF49  F00E         	goto	u2891
  6239  001C8E  EF4B  F00E         	goto	u2890
  6240  001C92                     u2891:
  6241  001C92  EFF7  F00E         	goto	l2995
  6242  001C96                     u2890:
  6243  001C96  A010               	btfss	___fladd@grs^0,0,c
  6244  001C98  EF50  F00E         	goto	u2901
  6245  001C9C  EF52  F00E         	goto	u2900
  6246  001CA0                     u2901:
  6247  001CA0  EF58  F00E         	goto	l2949
  6248  001CA4                     u2900:
  6249  001CA4  90D8               	bcf	status,0,c
  6250  001CA6  3010               	rrcf	___fladd@grs^0,w,c
  6251  001CA8  0901               	iorlw	1
  6252  001CAA  6E10               	movwf	___fladd@grs^0,c
  6253  001CAC  EF5A  F00E         	goto	l2951
  6254  001CB0                     l2949:
  6255  001CB0  90D8               	bcf	status,0,c
  6256  001CB2  3210               	rrcf	___fladd@grs^0,f,c
  6257  001CB4                     l2951:
  6258  001CB4  A001               	btfss	___fladd@b^0,0,c
  6259  001CB6  EF5F  F00E         	goto	u2911
  6260  001CBA  EF61  F00E         	goto	u2910
  6261  001CBE                     u2911:
  6262  001CBE  EF62  F00E         	goto	l2955
  6263  001CC2                     u2910:
  6264  001CC2  8E10               	bsf	___fladd@grs^0,7,c
  6265  001CC4                     l2955:
  6266  001CC4  3404               	rlcf	(___fladd@b+3)^0,w,c
  6267  001CC6  3204               	rrcf	(___fladd@b+3)^0,f,c
  6268  001CC8  3203               	rrcf	(___fladd@b+2)^0,f,c
  6269  001CCA  3202               	rrcf	(___fladd@b+1)^0,f,c
  6270  001CCC  3201               	rrcf	___fladd@b^0,f,c
  6271  001CCE  2A0F               	incf	___fladd@bexp^0,f,c
  6272  001CD0  EFF7  F00E         	goto	l2995
  6273  001CD4                     l2959:
  6274  001CD4  5005               	movf	___fladd@a^0,w,c
  6275  001CD6  5C01               	subwf	___fladd@b^0,w,c
  6276  001CD8  5006               	movf	(___fladd@a+1)^0,w,c
  6277  001CDA  5802               	subwfb	(___fladd@b+1)^0,w,c
  6278  001CDC  5007               	movf	(___fladd@a+2)^0,w,c
  6279  001CDE  5803               	subwfb	(___fladd@b+2)^0,w,c
  6280  001CE0  5004               	movf	(___fladd@b+3)^0,w,c
  6281  001CE2  0A80               	xorlw	128
  6282  001CE4  6E09               	movwf	??___fladd^0,c
  6283  001CE6  5008               	movf	(___fladd@a+3)^0,w,c
  6284  001CE8  0A80               	xorlw	128
  6285  001CEA  5809               	subwfb	??___fladd^0,w,c
  6286  001CEC  B0D8               	btfsc	status,0,c
  6287  001CEE  EF7B  F00E         	goto	u2921
  6288  001CF2  EF7D  F00E         	goto	u2920
  6289  001CF6                     u2921:
  6290  001CF6  EFA8  F00E         	goto	l2969
  6291  001CFA                     u2920:
  6292  001CFA  5001               	movf	___fladd@b^0,w,c
  6293  001CFC  5C05               	subwf	___fladd@a^0,w,c
  6294  001CFE  6E09               	movwf	??___fladd^0,c
  6295  001D00  5002               	movf	(___fladd@b+1)^0,w,c
  6296  001D02  5806               	subwfb	(___fladd@a+1)^0,w,c
  6297  001D04  6E0A               	movwf	(??___fladd+1)^0,c
  6298  001D06  5003               	movf	(___fladd@b+2)^0,w,c
  6299  001D08  5807               	subwfb	(___fladd@a+2)^0,w,c
  6300  001D0A  6E0B               	movwf	(??___fladd+2)^0,c
  6301  001D0C  5004               	movf	(___fladd@b+3)^0,w,c
  6302  001D0E  5808               	subwfb	(___fladd@a+3)^0,w,c
  6303  001D10  6E0C               	movwf	(??___fladd+3)^0,c
  6304  001D12  0EFF               	movlw	255
  6305  001D14  2409               	addwf	??___fladd^0,w,c
  6306  001D16  6E01               	movwf	___fladd@b^0,c
  6307  001D18  0EFF               	movlw	255
  6308  001D1A  200A               	addwfc	(??___fladd+1)^0,w,c
  6309  001D1C  6E02               	movwf	(___fladd@b+1)^0,c
  6310  001D1E  0EFF               	movlw	255
  6311  001D20  200B               	addwfc	(??___fladd+2)^0,w,c
  6312  001D22  6E03               	movwf	(___fladd@b+2)^0,c
  6313  001D24  0EFF               	movlw	255
  6314  001D26  200C               	addwfc	(??___fladd+3)^0,w,c
  6315  001D28  6E04               	movwf	(___fladd@b+3)^0,c
  6316  001D2A  0E80               	movlw	128
  6317  001D2C  1A0D               	xorwf	___fladd@signs^0,f,c
  6318  001D2E  6C10               	negf	___fladd@grs^0,c
  6319  001D30  5010               	movf	___fladd@grs^0,w,c
  6320  001D32  A4D8               	btfss	status,2,c
  6321  001D34  EF9E  F00E         	goto	u2931
  6322  001D38  EFA0  F00E         	goto	u2930
  6323  001D3C                     u2931:
  6324  001D3C  EFB0  F00E         	goto	l668
  6325  001D40                     u2930:
  6326  001D40  0E01               	movlw	1
  6327  001D42  2601               	addwf	___fladd@b^0,f,c
  6328  001D44  0E00               	movlw	0
  6329  001D46  2202               	addwfc	(___fladd@b+1)^0,f,c
  6330  001D48  2203               	addwfc	(___fladd@b+2)^0,f,c
  6331  001D4A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6332  001D4C  EFB0  F00E         	goto	l668
  6333  001D50                     l2969:
  6334  001D50  5005               	movf	___fladd@a^0,w,c
  6335  001D52  5E01               	subwf	___fladd@b^0,f,c
  6336  001D54  5006               	movf	(___fladd@a+1)^0,w,c
  6337  001D56  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6338  001D58  5007               	movf	(___fladd@a+2)^0,w,c
  6339  001D5A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6340  001D5C  5008               	movf	(___fladd@a+3)^0,w,c
  6341  001D5E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6342  001D60                     l668:
  6343  001D60  5001               	movf	___fladd@b^0,w,c
  6344  001D62  1002               	iorwf	(___fladd@b+1)^0,w,c
  6345  001D64  1003               	iorwf	(___fladd@b+2)^0,w,c
  6346  001D66  1004               	iorwf	(___fladd@b+3)^0,w,c
  6347  001D68  A4D8               	btfss	status,2,c
  6348  001D6A  EFB9  F00E         	goto	u2941
  6349  001D6E  EFBB  F00E         	goto	u2940
  6350  001D72                     u2941:
  6351  001D72  EFF0  F00E         	goto	l2993
  6352  001D76                     u2940:
  6353  001D76  5010               	movf	___fladd@grs^0,w,c
  6354  001D78  A4D8               	btfss	status,2,c
  6355  001D7A  EFC1  F00E         	goto	u2951
  6356  001D7E  EFC3  F00E         	goto	u2950
  6357  001D82                     u2951:
  6358  001D82  EFF0  F00E         	goto	l2993
  6359  001D86                     u2950:
  6360  001D86  0E00               	movlw	0
  6361  001D88  6E01               	movwf	?___fladd^0,c
  6362  001D8A  0E00               	movlw	0
  6363  001D8C  6E02               	movwf	(?___fladd+1)^0,c
  6364  001D8E  0E00               	movlw	0
  6365  001D90  6E03               	movwf	(?___fladd+2)^0,c
  6366  001D92  0E00               	movlw	0
  6367  001D94  6E04               	movwf	(?___fladd+3)^0,c
  6368  001D96  EF8B  F00F         	goto	l660
  6369  001D9A                     l2977:
  6370  001D9A  90D8               	bcf	status,0,c
  6371  001D9C  3601               	rlcf	___fladd@b^0,f,c
  6372  001D9E  3602               	rlcf	(___fladd@b+1)^0,f,c
  6373  001DA0  3603               	rlcf	(___fladd@b+2)^0,f,c
  6374  001DA2  3604               	rlcf	(___fladd@b+3)^0,f,c
  6375  001DA4  AE10               	btfss	___fladd@grs^0,7,c
  6376  001DA6  EFD7  F00E         	goto	u2961
  6377  001DAA  EFD9  F00E         	goto	u2960
  6378  001DAE                     u2961:
  6379  001DAE  EFDA  F00E         	goto	l2983
  6380  001DB2                     u2960:
  6381  001DB2  8001               	bsf	___fladd@b^0,0,c
  6382  001DB4                     l2983:
  6383  001DB4  A010               	btfss	___fladd@grs^0,0,c
  6384  001DB6  EFDF  F00E         	goto	u2971
  6385  001DBA  EFE1  F00E         	goto	u2970
  6386  001DBE                     u2971:
  6387  001DBE  EFE5  F00E         	goto	l2987
  6388  001DC2                     u2970:
  6389  001DC2  80D8               	bsf	status,0,c
  6390  001DC4  3610               	rlcf	___fladd@grs^0,f,c
  6391  001DC6  EFE7  F00E         	goto	l2989
  6392  001DCA                     l2987:
  6393  001DCA  90D8               	bcf	status,0,c
  6394  001DCC  3610               	rlcf	___fladd@grs^0,f,c
  6395  001DCE                     l2989:
  6396  001DCE  500F               	movf	___fladd@bexp^0,w,c
  6397  001DD0  B4D8               	btfsc	status,2,c
  6398  001DD2  EFED  F00E         	goto	u2981
  6399  001DD6  EFEF  F00E         	goto	u2980
  6400  001DDA                     u2981:
  6401  001DDA  EFF0  F00E         	goto	l2993
  6402  001DDE                     u2980:
  6403  001DDE  060F               	decf	___fladd@bexp^0,f,c
  6404  001DE0                     l2993:
  6405  001DE0  AE03               	btfss	(___fladd@b+2)^0,7,c
  6406  001DE2  EFF5  F00E         	goto	u2991
  6407  001DE6  EFF7  F00E         	goto	u2990
  6408  001DEA                     u2991:
  6409  001DEA  EFCD  F00E         	goto	l2977
  6410  001DEE                     u2990:
  6411  001DEE                     l2995:
  6412  001DEE  0E00               	movlw	0
  6413  001DF0  6E0E               	movwf	___fladd@aexp^0,c
  6414  001DF2  AE10               	btfss	___fladd@grs^0,7,c
  6415  001DF4  EFFE  F00E         	goto	u3001
  6416  001DF8  EF00  F00F         	goto	u3000
  6417  001DFC                     u3001:
  6418  001DFC  EF18  F00F         	goto	l677
  6419  001E00                     u3000:
  6420  001E00  C010  F009         	movff	___fladd@grs,??___fladd
  6421  001E04  0E7F               	movlw	127
  6422  001E06  1609               	andwf	??___fladd^0,f,c
  6423  001E08  B4D8               	btfsc	status,2,c
  6424  001E0A  EF09  F00F         	goto	u3011
  6425  001E0E  EF0B  F00F         	goto	u3010
  6426  001E12                     u3011:
  6427  001E12  EF0F  F00F         	goto	l678
  6428  001E16                     u3010:
  6429  001E16                     l3001:
  6430  001E16  0E01               	movlw	1
  6431  001E18  6E0E               	movwf	___fladd@aexp^0,c
  6432  001E1A  EF18  F00F         	goto	l677
  6433  001E1E                     l678:
  6434  001E1E  A001               	btfss	___fladd@b^0,0,c
  6435  001E20  EF14  F00F         	goto	u3021
  6436  001E24  EF16  F00F         	goto	u3020
  6437  001E28                     u3021:
  6438  001E28  EF18  F00F         	goto	l677
  6439  001E2C                     u3020:
  6440  001E2C  EF0B  F00F         	goto	l3001
  6441  001E30                     l677:
  6442  001E30  500E               	movf	___fladd@aexp^0,w,c
  6443  001E32  B4D8               	btfsc	status,2,c
  6444  001E34  EF1E  F00F         	goto	u3031
  6445  001E38  EF20  F00F         	goto	u3030
  6446  001E3C                     u3031:
  6447  001E3C  EF4B  F00F         	goto	l3013
  6448  001E40                     u3030:
  6449  001E40  0E01               	movlw	1
  6450  001E42  2601               	addwf	___fladd@b^0,f,c
  6451  001E44  0E00               	movlw	0
  6452  001E46  2202               	addwfc	(___fladd@b+1)^0,f,c
  6453  001E48  2203               	addwfc	(___fladd@b+2)^0,f,c
  6454  001E4A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6455  001E4C  A004               	btfss	(___fladd@b+3)^0,0,c
  6456  001E4E  EF2B  F00F         	goto	u3041
  6457  001E52  EF2D  F00F         	goto	u3040
  6458  001E56                     u3041:
  6459  001E56  EF4B  F00F         	goto	l3013
  6460  001E5A                     u3040:
  6461  001E5A  C001  F009         	movff	___fladd@b,??___fladd
  6462  001E5E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6463  001E62  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6464  001E66  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6465  001E6A  340C               	rlcf	(??___fladd+3)^0,w,c
  6466  001E6C  320C               	rrcf	(??___fladd+3)^0,f,c
  6467  001E6E  320B               	rrcf	(??___fladd+2)^0,f,c
  6468  001E70  320A               	rrcf	(??___fladd+1)^0,f,c
  6469  001E72  3209               	rrcf	??___fladd^0,f,c
  6470  001E74  C009  F001         	movff	??___fladd,___fladd@b
  6471  001E78  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6472  001E7C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6473  001E80  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6474  001E84  280F               	incf	___fladd@bexp^0,w,c
  6475  001E86  B4D8               	btfsc	status,2,c
  6476  001E88  EF48  F00F         	goto	u3051
  6477  001E8C  EF4A  F00F         	goto	u3050
  6478  001E90                     u3051:
  6479  001E90  EF4B  F00F         	goto	l3013
  6480  001E94                     u3050:
  6481  001E94  2A0F               	incf	___fladd@bexp^0,f,c
  6482  001E96                     l3013:
  6483  001E96  280F               	incf	___fladd@bexp^0,w,c
  6484  001E98  B4D8               	btfsc	status,2,c
  6485  001E9A  EF51  F00F         	goto	u3061
  6486  001E9E  EF53  F00F         	goto	u3060
  6487  001EA2                     u3061:
  6488  001EA2  EF5B  F00F         	goto	l3017
  6489  001EA6                     u3060:
  6490  001EA6  500F               	movf	___fladd@bexp^0,w,c
  6491  001EA8  A4D8               	btfss	status,2,c
  6492  001EAA  EF59  F00F         	goto	u3071
  6493  001EAE  EF5B  F00F         	goto	u3070
  6494  001EB2                     u3071:
  6495  001EB2  EF6D  F00F         	goto	l3021
  6496  001EB6                     u3070:
  6497  001EB6                     l3017:
  6498  001EB6  0E00               	movlw	0
  6499  001EB8  6E01               	movwf	___fladd@b^0,c
  6500  001EBA  0E00               	movlw	0
  6501  001EBC  6E02               	movwf	(___fladd@b+1)^0,c
  6502  001EBE  0E00               	movlw	0
  6503  001EC0  6E03               	movwf	(___fladd@b+2)^0,c
  6504  001EC2  0E00               	movlw	0
  6505  001EC4  6E04               	movwf	(___fladd@b+3)^0,c
  6506  001EC6  500F               	movf	___fladd@bexp^0,w,c
  6507  001EC8  A4D8               	btfss	status,2,c
  6508  001ECA  EF69  F00F         	goto	u3081
  6509  001ECE  EF6B  F00F         	goto	u3080
  6510  001ED2                     u3081:
  6511  001ED2  EF6D  F00F         	goto	l3021
  6512  001ED6                     u3080:
  6513  001ED6  0E00               	movlw	0
  6514  001ED8  6E0D               	movwf	___fladd@signs^0,c
  6515  001EDA                     l3021:
  6516  001EDA  A00F               	btfss	___fladd@bexp^0,0,c
  6517  001EDC  EF72  F00F         	goto	u3091
  6518  001EE0  EF74  F00F         	goto	u3090
  6519  001EE4                     u3091:
  6520  001EE4  EF77  F00F         	goto	l3025
  6521  001EE8                     u3090:
  6522  001EE8  8E03               	bsf	(___fladd@b+2)^0,7,c
  6523  001EEA  EF78  F00F         	goto	l3027
  6524  001EEE                     l3025:
  6525  001EEE  9E03               	bcf	(___fladd@b+2)^0,7,c
  6526  001EF0                     l3027:
  6527  001EF0  90D8               	bcf	status,0,c
  6528  001EF2  300F               	rrcf	___fladd@bexp^0,w,c
  6529  001EF4  6E04               	movwf	(___fladd@b+3)^0,c
  6530  001EF6  AE0D               	btfss	___fladd@signs^0,7,c
  6531  001EF8  EF80  F00F         	goto	u3101
  6532  001EFC  EF82  F00F         	goto	u3100
  6533  001F00                     u3101:
  6534  001F00  EF83  F00F         	goto	l3033
  6535  001F04                     u3100:
  6536  001F04  8E04               	bsf	(___fladd@b+3)^0,7,c
  6537  001F06                     l3033:
  6538  001F06  C001  F001         	movff	___fladd@b,?___fladd
  6539  001F0A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6540  001F0E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6541  001F12  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6542  001F16                     l660:
  6543  001F16  0012               	return		;funcret
  6544  001F18                     __end_of___fladd:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function ___flneg *****************
  6548 ;; Defined at:
  6549 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  f1              4    0[COMRAM] unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  4    0[COMRAM] unsigned char 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6563 ;;      Params:         4       0       0       0       0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6566 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6567 ;;Total ram usage:        4 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_efgtoa
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text22
  6577  003D9C                     __ptext22:
  6578                           	callstack 0
  6579  003D9C                     ___flneg:
  6580                           	callstack 26
  6581  003D9C  5001               	movf	___flneg@f1^0,w,c
  6582  003D9E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6583  003DA0  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6584  003DA2  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6585  003DA4  B4D8               	btfsc	status,2,c
  6586  003DA6  EFD7  F01E         	goto	u3771
  6587  003DAA  EFD9  F01E         	goto	u3770
  6588  003DAE                     u3771:
  6589  003DAE  EFE1  F01E         	goto	l3461
  6590  003DB2                     u3770:
  6591  003DB2  0E00               	movlw	0
  6592  003DB4  1A01               	xorwf	___flneg@f1^0,f,c
  6593  003DB6  0E00               	movlw	0
  6594  003DB8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6595  003DBA  0E00               	movlw	0
  6596  003DBC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6597  003DBE  0E80               	movlw	128
  6598  003DC0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6599  003DC2                     l3461:
  6600  003DC2  C001  F001         	movff	___flneg@f1,?___flneg
  6601  003DC6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6602  003DCA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6603  003DCE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6604  003DD2  0012               	return		;funcret
  6605  003DD4                     __end_of___flneg:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function ___flmul *****************
  6609 ;; Defined at:
  6610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  b               4   14[COMRAM] unsigned char 
  6613 ;;  a               4   18[COMRAM] unsigned char 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  prod            4   33[COMRAM] struct .
  6616 ;;  grs             4   27[COMRAM] unsigned long 
  6617 ;;  temp            2   37[COMRAM] struct .
  6618 ;;  bexp            1   32[COMRAM] unsigned char 
  6619 ;;  aexp            1   31[COMRAM] unsigned char 
  6620 ;;  sign            1   26[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  4   14[COMRAM] unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0, prodl, prodh
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6630 ;;      Params:         8       0       0       0       0       0       0       0       0
  6631 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6632 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6633 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6634 ;;Total ram usage:       25 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;;		_efgtoa
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text23
  6645  001F18                     __ptext23:
  6646                           	callstack 0
  6647  001F18                     ___flmul:
  6648                           	callstack 26
  6649  001F18  5012               	movf	(___flmul@b+3)^0,w,c
  6650  001F1A  0B80               	andlw	128
  6651  001F1C  6E1B               	movwf	___flmul@sign^0,c
  6652  001F1E  5012               	movf	(___flmul@b+3)^0,w,c
  6653  001F20  2412               	addwf	(___flmul@b+3)^0,w,c
  6654  001F22  6E21               	movwf	___flmul@bexp^0,c
  6655  001F24  AE11               	btfss	(___flmul@b+2)^0,7,c
  6656  001F26  EF97  F00F         	goto	u3381
  6657  001F2A  EF99  F00F         	goto	u3380
  6658  001F2E                     u3381:
  6659  001F2E  EF9A  F00F         	goto	l3209
  6660  001F32                     u3380:
  6661  001F32  8021               	bsf	___flmul@bexp^0,0,c
  6662  001F34                     l3209:
  6663  001F34  5021               	movf	___flmul@bexp^0,w,c
  6664  001F36  B4D8               	btfsc	status,2,c
  6665  001F38  EFA0  F00F         	goto	u3391
  6666  001F3C  EFA2  F00F         	goto	u3390
  6667  001F40                     u3391:
  6668  001F40  EFB5  F00F         	goto	l3217
  6669  001F44                     u3390:
  6670  001F44  2821               	incf	___flmul@bexp^0,w,c
  6671  001F46  A4D8               	btfss	status,2,c
  6672  001F48  EFA8  F00F         	goto	u3401
  6673  001F4C  EFAA  F00F         	goto	u3400
  6674  001F50                     u3401:
  6675  001F50  EFB2  F00F         	goto	l3215
  6676  001F54                     u3400:
  6677  001F54  0E00               	movlw	0
  6678  001F56  6E0F               	movwf	___flmul@b^0,c
  6679  001F58  0E00               	movlw	0
  6680  001F5A  6E10               	movwf	(___flmul@b+1)^0,c
  6681  001F5C  0E00               	movlw	0
  6682  001F5E  6E11               	movwf	(___flmul@b+2)^0,c
  6683  001F60  0E00               	movlw	0
  6684  001F62  6E12               	movwf	(___flmul@b+3)^0,c
  6685  001F64                     l3215:
  6686  001F64  8E11               	bsf	(___flmul@b+2)^0,7,c
  6687  001F66  EFBD  F00F         	goto	l3219
  6688  001F6A                     l3217:
  6689  001F6A  0E00               	movlw	0
  6690  001F6C  6E0F               	movwf	___flmul@b^0,c
  6691  001F6E  0E00               	movlw	0
  6692  001F70  6E10               	movwf	(___flmul@b+1)^0,c
  6693  001F72  0E00               	movlw	0
  6694  001F74  6E11               	movwf	(___flmul@b+2)^0,c
  6695  001F76  0E00               	movlw	0
  6696  001F78  6E12               	movwf	(___flmul@b+3)^0,c
  6697  001F7A                     l3219:
  6698  001F7A  5016               	movf	(___flmul@a+3)^0,w,c
  6699  001F7C  0B80               	andlw	128
  6700  001F7E  1A1B               	xorwf	___flmul@sign^0,f,c
  6701  001F80  5016               	movf	(___flmul@a+3)^0,w,c
  6702  001F82  2416               	addwf	(___flmul@a+3)^0,w,c
  6703  001F84  6E20               	movwf	___flmul@aexp^0,c
  6704  001F86  AE15               	btfss	(___flmul@a+2)^0,7,c
  6705  001F88  EFC8  F00F         	goto	u3411
  6706  001F8C  EFCA  F00F         	goto	u3410
  6707  001F90                     u3411:
  6708  001F90  EFCB  F00F         	goto	l3227
  6709  001F94                     u3410:
  6710  001F94  8020               	bsf	___flmul@aexp^0,0,c
  6711  001F96                     l3227:
  6712  001F96  5020               	movf	___flmul@aexp^0,w,c
  6713  001F98  B4D8               	btfsc	status,2,c
  6714  001F9A  EFD1  F00F         	goto	u3421
  6715  001F9E  EFD3  F00F         	goto	u3420
  6716  001FA2                     u3421:
  6717  001FA2  EFE6  F00F         	goto	l3235
  6718  001FA6                     u3420:
  6719  001FA6  2820               	incf	___flmul@aexp^0,w,c
  6720  001FA8  A4D8               	btfss	status,2,c
  6721  001FAA  EFD9  F00F         	goto	u3431
  6722  001FAE  EFDB  F00F         	goto	u3430
  6723  001FB2                     u3431:
  6724  001FB2  EFE3  F00F         	goto	l3233
  6725  001FB6                     u3430:
  6726  001FB6  0E00               	movlw	0
  6727  001FB8  6E13               	movwf	___flmul@a^0,c
  6728  001FBA  0E00               	movlw	0
  6729  001FBC  6E14               	movwf	(___flmul@a+1)^0,c
  6730  001FBE  0E00               	movlw	0
  6731  001FC0  6E15               	movwf	(___flmul@a+2)^0,c
  6732  001FC2  0E00               	movlw	0
  6733  001FC4  6E16               	movwf	(___flmul@a+3)^0,c
  6734  001FC6                     l3233:
  6735  001FC6  8E15               	bsf	(___flmul@a+2)^0,7,c
  6736  001FC8  EFEE  F00F         	goto	l737
  6737  001FCC                     l3235:
  6738  001FCC  0E00               	movlw	0
  6739  001FCE  6E13               	movwf	___flmul@a^0,c
  6740  001FD0  0E00               	movlw	0
  6741  001FD2  6E14               	movwf	(___flmul@a+1)^0,c
  6742  001FD4  0E00               	movlw	0
  6743  001FD6  6E15               	movwf	(___flmul@a+2)^0,c
  6744  001FD8  0E00               	movlw	0
  6745  001FDA  6E16               	movwf	(___flmul@a+3)^0,c
  6746  001FDC                     l737:
  6747  001FDC  5020               	movf	___flmul@aexp^0,w,c
  6748  001FDE  B4D8               	btfsc	status,2,c
  6749  001FE0  EFF4  F00F         	goto	u3441
  6750  001FE4  EFF6  F00F         	goto	u3440
  6751  001FE8                     u3441:
  6752  001FE8  EFFE  F00F         	goto	l3239
  6753  001FEC                     u3440:
  6754  001FEC  5021               	movf	___flmul@bexp^0,w,c
  6755  001FEE  A4D8               	btfss	status,2,c
  6756  001FF0  EFFC  F00F         	goto	u3451
  6757  001FF4  EFFE  F00F         	goto	u3450
  6758  001FF8                     u3451:
  6759  001FF8  EF08  F010         	goto	l3243
  6760  001FFC                     u3450:
  6761  001FFC                     l3239:
  6762  001FFC  0E00               	movlw	0
  6763  001FFE  6E0F               	movwf	?___flmul^0,c
  6764  002000  0E00               	movlw	0
  6765  002002  6E10               	movwf	(?___flmul+1)^0,c
  6766  002004  0E00               	movlw	0
  6767  002006  6E11               	movwf	(?___flmul+2)^0,c
  6768  002008  0E00               	movlw	0
  6769  00200A  6E12               	movwf	(?___flmul+3)^0,c
  6770  00200C  EFA0  F011         	goto	l741
  6771  002010                     l3243:
  6772  002010  5015               	movf	(___flmul@a+2)^0,w,c
  6773  002012  020F               	mulwf	___flmul@b^0,c
  6774  002014  CFF3 F026          	movff	prodl,___flmul@temp
  6775  002018  CFF4 F027          	movff	prodh,___flmul@temp+1
  6776  00201C  5026               	movf	___flmul@temp^0,w,c
  6777  00201E  6E1C               	movwf	___flmul@grs^0,c
  6778  002020  6A1D               	clrf	(___flmul@grs+1)^0,c
  6779  002022  6A1E               	clrf	(___flmul@grs+2)^0,c
  6780  002024  6A1F               	clrf	(___flmul@grs+3)^0,c
  6781  002026  5027               	movf	(___flmul@temp+1)^0,w,c
  6782  002028  6E22               	movwf	___flmul@prod^0,c
  6783  00202A  6A23               	clrf	(___flmul@prod+1)^0,c
  6784  00202C  6A24               	clrf	(___flmul@prod+2)^0,c
  6785  00202E  6A25               	clrf	(___flmul@prod+3)^0,c
  6786  002030  5014               	movf	(___flmul@a+1)^0,w,c
  6787  002032  0210               	mulwf	(___flmul@b+1)^0,c
  6788  002034  CFF3 F026          	movff	prodl,___flmul@temp
  6789  002038  CFF4 F027          	movff	prodh,___flmul@temp+1
  6790  00203C  5026               	movf	___flmul@temp^0,w,c
  6791  00203E  261C               	addwf	___flmul@grs^0,f,c
  6792  002040  0E00               	movlw	0
  6793  002042  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6794  002044  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6795  002046  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6796  002048  5027               	movf	(___flmul@temp+1)^0,w,c
  6797  00204A  2622               	addwf	___flmul@prod^0,f,c
  6798  00204C  0E00               	movlw	0
  6799  00204E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6800  002050  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6801  002052  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6802  002054  5013               	movf	___flmul@a^0,w,c
  6803  002056  0211               	mulwf	(___flmul@b+2)^0,c
  6804  002058  CFF3 F026          	movff	prodl,___flmul@temp
  6805  00205C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6806  002060  5026               	movf	___flmul@temp^0,w,c
  6807  002062  261C               	addwf	___flmul@grs^0,f,c
  6808  002064  0E00               	movlw	0
  6809  002066  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6810  002068  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6811  00206A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6812  00206C  5027               	movf	(___flmul@temp+1)^0,w,c
  6813  00206E  2622               	addwf	___flmul@prod^0,f,c
  6814  002070  0E00               	movlw	0
  6815  002072  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6816  002074  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6817  002076  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6818  002078  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6819  00207C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6820  002080  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6821  002084  6A1C               	clrf	___flmul@grs^0,c
  6822  002086  5013               	movf	___flmul@a^0,w,c
  6823  002088  0210               	mulwf	(___flmul@b+1)^0,c
  6824  00208A  CFF3 F026          	movff	prodl,___flmul@temp
  6825  00208E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6826  002092  5026               	movf	___flmul@temp^0,w,c
  6827  002094  261C               	addwf	___flmul@grs^0,f,c
  6828  002096  5027               	movf	(___flmul@temp+1)^0,w,c
  6829  002098  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6830  00209A  0E00               	movlw	0
  6831  00209C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6832  00209E  0E00               	movlw	0
  6833  0020A0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6834  0020A2  5014               	movf	(___flmul@a+1)^0,w,c
  6835  0020A4  020F               	mulwf	___flmul@b^0,c
  6836  0020A6  CFF3 F026          	movff	prodl,___flmul@temp
  6837  0020AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  6838  0020AE  5026               	movf	___flmul@temp^0,w,c
  6839  0020B0  261C               	addwf	___flmul@grs^0,f,c
  6840  0020B2  5027               	movf	(___flmul@temp+1)^0,w,c
  6841  0020B4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6842  0020B6  0E00               	movlw	0
  6843  0020B8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6844  0020BA  0E00               	movlw	0
  6845  0020BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6846  0020BE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6847  0020C2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6848  0020C6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6849  0020CA  6A1C               	clrf	___flmul@grs^0,c
  6850  0020CC  5013               	movf	___flmul@a^0,w,c
  6851  0020CE  020F               	mulwf	___flmul@b^0,c
  6852  0020D0  CFF3 F026          	movff	prodl,___flmul@temp
  6853  0020D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6854  0020D8  5026               	movf	___flmul@temp^0,w,c
  6855  0020DA  261C               	addwf	___flmul@grs^0,f,c
  6856  0020DC  5027               	movf	(___flmul@temp+1)^0,w,c
  6857  0020DE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6858  0020E0  0E00               	movlw	0
  6859  0020E2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6860  0020E4  0E00               	movlw	0
  6861  0020E6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6862  0020E8  5015               	movf	(___flmul@a+2)^0,w,c
  6863  0020EA  0210               	mulwf	(___flmul@b+1)^0,c
  6864  0020EC  CFF3 F026          	movff	prodl,___flmul@temp
  6865  0020F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6866  0020F4  5026               	movf	___flmul@temp^0,w,c
  6867  0020F6  2622               	addwf	___flmul@prod^0,f,c
  6868  0020F8  5027               	movf	(___flmul@temp+1)^0,w,c
  6869  0020FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6870  0020FC  0E00               	movlw	0
  6871  0020FE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6872  002100  0E00               	movlw	0
  6873  002102  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6874  002104  5014               	movf	(___flmul@a+1)^0,w,c
  6875  002106  0211               	mulwf	(___flmul@b+2)^0,c
  6876  002108  CFF3 F026          	movff	prodl,___flmul@temp
  6877  00210C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6878  002110  5026               	movf	___flmul@temp^0,w,c
  6879  002112  2622               	addwf	___flmul@prod^0,f,c
  6880  002114  5027               	movf	(___flmul@temp+1)^0,w,c
  6881  002116  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6882  002118  0E00               	movlw	0
  6883  00211A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6884  00211C  0E00               	movlw	0
  6885  00211E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6886  002120  5015               	movf	(___flmul@a+2)^0,w,c
  6887  002122  0211               	mulwf	(___flmul@b+2)^0,c
  6888  002124  CFF3 F026          	movff	prodl,___flmul@temp
  6889  002128  CFF4 F027          	movff	prodh,___flmul@temp+1
  6890  00212C  5026               	movf	___flmul@temp^0,w,c
  6891  00212E  6E17               	movwf	??___flmul^0,c
  6892  002130  5027               	movf	(___flmul@temp+1)^0,w,c
  6893  002132  6E18               	movwf	(??___flmul+1)^0,c
  6894  002134  6A19               	clrf	(??___flmul+2)^0,c
  6895  002136  6A1A               	clrf	(??___flmul+3)^0,c
  6896  002138  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6897  00213C  C018  F019         	movff	??___flmul+1,??___flmul+2
  6898  002140  C017  F018         	movff	??___flmul,??___flmul+1
  6899  002144  6A17               	clrf	??___flmul^0,c
  6900  002146  5017               	movf	??___flmul^0,w,c
  6901  002148  2622               	addwf	___flmul@prod^0,f,c
  6902  00214A  5018               	movf	(??___flmul+1)^0,w,c
  6903  00214C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6904  00214E  5019               	movf	(??___flmul+2)^0,w,c
  6905  002150  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6906  002152  501A               	movf	(??___flmul+3)^0,w,c
  6907  002154  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6908  002156  C01C  F017         	movff	___flmul@grs,??___flmul
  6909  00215A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6910  00215E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6911  002162  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6912  002166  0E19               	movlw	25
  6913  002168  EFBB  F010         	goto	u3460
  6914  00216C                     u3465:
  6915  00216C  90D8               	bcf	status,0,c
  6916  00216E  321A               	rrcf	(??___flmul+3)^0,f,c
  6917  002170  3219               	rrcf	(??___flmul+2)^0,f,c
  6918  002172  3218               	rrcf	(??___flmul+1)^0,f,c
  6919  002174  3217               	rrcf	??___flmul^0,f,c
  6920  002176                     u3460:
  6921  002176  2EE8               	decfsz	wreg,f,c
  6922  002178  EFB6  F010         	goto	u3465
  6923  00217C  5017               	movf	??___flmul^0,w,c
  6924  00217E  2622               	addwf	___flmul@prod^0,f,c
  6925  002180  5018               	movf	(??___flmul+1)^0,w,c
  6926  002182  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6927  002184  5019               	movf	(??___flmul+2)^0,w,c
  6928  002186  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6929  002188  501A               	movf	(??___flmul+3)^0,w,c
  6930  00218A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6931  00218C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6932  002190  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6933  002194  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6934  002198  6A1C               	clrf	___flmul@grs^0,c
  6935  00219A  5020               	movf	___flmul@aexp^0,w,c
  6936  00219C  C021  F017         	movff	___flmul@bexp,??___flmul
  6937  0021A0  6A18               	clrf	(??___flmul+1)^0,c
  6938  0021A2  2617               	addwf	??___flmul^0,f,c
  6939  0021A4  0E00               	movlw	0
  6940  0021A6  2218               	addwfc	(??___flmul+1)^0,f,c
  6941  0021A8  0E82               	movlw	130
  6942  0021AA  2417               	addwf	??___flmul^0,w,c
  6943  0021AC  6E26               	movwf	___flmul@temp^0,c
  6944  0021AE  0EFF               	movlw	255
  6945  0021B0  2018               	addwfc	(??___flmul+1)^0,w,c
  6946  0021B2  6E27               	movwf	(___flmul@temp+1)^0,c
  6947  0021B4  EFF1  F010         	goto	l3291
  6948  0021B8                     l3285:
  6949  0021B8  90D8               	bcf	status,0,c
  6950  0021BA  3622               	rlcf	___flmul@prod^0,f,c
  6951  0021BC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6952  0021BE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6953  0021C0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6954  0021C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6955  0021C4  EFE6  F010         	goto	u3471
  6956  0021C8  EFE8  F010         	goto	u3470
  6957  0021CC                     u3471:
  6958  0021CC  EFE9  F010         	goto	l744
  6959  0021D0                     u3470:
  6960  0021D0  8022               	bsf	___flmul@prod^0,0,c
  6961  0021D2                     l744:
  6962  0021D2  90D8               	bcf	status,0,c
  6963  0021D4  361C               	rlcf	___flmul@grs^0,f,c
  6964  0021D6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6965  0021D8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6966  0021DA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6967  0021DC  0626               	decf	___flmul@temp^0,f,c
  6968  0021DE  A0D8               	btfss	status,0,c
  6969  0021E0  0627               	decf	(___flmul@temp+1)^0,f,c
  6970  0021E2                     l3291:
  6971  0021E2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6972  0021E4  EFF6  F010         	goto	u3481
  6973  0021E8  EFF8  F010         	goto	u3480
  6974  0021EC                     u3481:
  6975  0021EC  EFDC  F010         	goto	l3285
  6976  0021F0                     u3480:
  6977  0021F0  0E00               	movlw	0
  6978  0021F2  6E20               	movwf	___flmul@aexp^0,c
  6979  0021F4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6980  0021F6  EFFF  F010         	goto	u3491
  6981  0021FA  EF01  F011         	goto	u3490
  6982  0021FE                     u3491:
  6983  0021FE  EF25  F011         	goto	l746
  6984  002202                     u3490:
  6985  002202  0EFF               	movlw	255
  6986  002204  141C               	andwf	___flmul@grs^0,w,c
  6987  002206  6E17               	movwf	??___flmul^0,c
  6988  002208  0EFF               	movlw	255
  6989  00220A  141D               	andwf	(___flmul@grs+1)^0,w,c
  6990  00220C  6E18               	movwf	(??___flmul+1)^0,c
  6991  00220E  0EFF               	movlw	255
  6992  002210  141E               	andwf	(___flmul@grs+2)^0,w,c
  6993  002212  6E19               	movwf	(??___flmul+2)^0,c
  6994  002214  0E7F               	movlw	127
  6995  002216  141F               	andwf	(___flmul@grs+3)^0,w,c
  6996  002218  6E1A               	movwf	(??___flmul+3)^0,c
  6997  00221A  5017               	movf	??___flmul^0,w,c
  6998  00221C  1018               	iorwf	(??___flmul+1)^0,w,c
  6999  00221E  1019               	iorwf	(??___flmul+2)^0,w,c
  7000  002220  101A               	iorwf	(??___flmul+3)^0,w,c
  7001  002222  B4D8               	btfsc	status,2,c
  7002  002224  EF16  F011         	goto	u3501
  7003  002228  EF18  F011         	goto	u3500
  7004  00222C                     u3501:
  7005  00222C  EF1C  F011         	goto	l747
  7006  002230                     u3500:
  7007  002230                     l3299:
  7008  002230  0E01               	movlw	1
  7009  002232  6E20               	movwf	___flmul@aexp^0,c
  7010  002234  EF25  F011         	goto	l746
  7011  002238                     l747:
  7012  002238  A022               	btfss	___flmul@prod^0,0,c
  7013  00223A  EF21  F011         	goto	u3511
  7014  00223E  EF23  F011         	goto	u3510
  7015  002242                     u3511:
  7016  002242  EF25  F011         	goto	l746
  7017  002246                     u3510:
  7018  002246  EF18  F011         	goto	l3299
  7019  00224A                     l746:
  7020  00224A  5020               	movf	___flmul@aexp^0,w,c
  7021  00224C  B4D8               	btfsc	status,2,c
  7022  00224E  EF2B  F011         	goto	u3521
  7023  002252  EF2D  F011         	goto	u3520
  7024  002256                     u3521:
  7025  002256  EF51  F011         	goto	l3311
  7026  00225A                     u3520:
  7027  00225A  0E01               	movlw	1
  7028  00225C  2622               	addwf	___flmul@prod^0,f,c
  7029  00225E  0E00               	movlw	0
  7030  002260  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7031  002262  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7032  002264  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7033  002266  A025               	btfss	(___flmul@prod+3)^0,0,c
  7034  002268  EF38  F011         	goto	u3531
  7035  00226C  EF3A  F011         	goto	u3530
  7036  002270                     u3531:
  7037  002270  EF51  F011         	goto	l3311
  7038  002274                     u3530:
  7039  002274  C022  F017         	movff	___flmul@prod,??___flmul
  7040  002278  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7041  00227C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7042  002280  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7043  002284  341A               	rlcf	(??___flmul+3)^0,w,c
  7044  002286  321A               	rrcf	(??___flmul+3)^0,f,c
  7045  002288  3219               	rrcf	(??___flmul+2)^0,f,c
  7046  00228A  3218               	rrcf	(??___flmul+1)^0,f,c
  7047  00228C  3217               	rrcf	??___flmul^0,f,c
  7048  00228E  C017  F022         	movff	??___flmul,___flmul@prod
  7049  002292  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7050  002296  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7051  00229A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7052  00229E  4A26               	infsnz	___flmul@temp^0,f,c
  7053  0022A0  2A27               	incf	(___flmul@temp+1)^0,f,c
  7054  0022A2                     l3311:
  7055  0022A2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7056  0022A4  EF5C  F011         	goto	u3541
  7057  0022A8  5027               	movf	(___flmul@temp+1)^0,w,c
  7058  0022AA  E108               	bnz	u3540
  7059  0022AC  2826               	incf	___flmul@temp^0,w,c
  7060  0022AE  A0D8               	btfss	status,0,c
  7061  0022B0  EF5C  F011         	goto	u3541
  7062  0022B4  EF5E  F011         	goto	u3540
  7063  0022B8                     u3541:
  7064  0022B8  EF68  F011         	goto	l3315
  7065  0022BC                     u3540:
  7066  0022BC  0E00               	movlw	0
  7067  0022BE  6E22               	movwf	___flmul@prod^0,c
  7068  0022C0  0E00               	movlw	0
  7069  0022C2  6E23               	movwf	(___flmul@prod+1)^0,c
  7070  0022C4  0E80               	movlw	128
  7071  0022C6  6E24               	movwf	(___flmul@prod+2)^0,c
  7072  0022C8  0E7F               	movlw	127
  7073  0022CA  6E25               	movwf	(___flmul@prod+3)^0,c
  7074  0022CC  EF96  F011         	goto	l3327
  7075  0022D0                     l3315:
  7076  0022D0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7077  0022D2  EF75  F011         	goto	u3550
  7078  0022D6  5027               	movf	(___flmul@temp+1)^0,w,c
  7079  0022D8  E106               	bnz	u3551
  7080  0022DA  0426               	decf	___flmul@temp^0,w,c
  7081  0022DC  B0D8               	btfsc	status,0,c
  7082  0022DE  EF73  F011         	goto	u3551
  7083  0022E2  EF75  F011         	goto	u3550
  7084  0022E6                     u3551:
  7085  0022E6  EF81  F011         	goto	l754
  7086  0022EA                     u3550:
  7087  0022EA  0E00               	movlw	0
  7088  0022EC  6E22               	movwf	___flmul@prod^0,c
  7089  0022EE  0E00               	movlw	0
  7090  0022F0  6E23               	movwf	(___flmul@prod+1)^0,c
  7091  0022F2  0E00               	movlw	0
  7092  0022F4  6E24               	movwf	(___flmul@prod+2)^0,c
  7093  0022F6  0E00               	movlw	0
  7094  0022F8  6E25               	movwf	(___flmul@prod+3)^0,c
  7095  0022FA  0E00               	movlw	0
  7096  0022FC  6E1B               	movwf	___flmul@sign^0,c
  7097  0022FE  EF96  F011         	goto	l3327
  7098  002302                     l754:
  7099  002302  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7100  002306  0EFF               	movlw	255
  7101  002308  1622               	andwf	___flmul@prod^0,f,c
  7102  00230A  0EFF               	movlw	255
  7103  00230C  1623               	andwf	(___flmul@prod+1)^0,f,c
  7104  00230E  0E7F               	movlw	127
  7105  002310  1624               	andwf	(___flmul@prod+2)^0,f,c
  7106  002312  0E00               	movlw	0
  7107  002314  1625               	andwf	(___flmul@prod+3)^0,f,c
  7108  002316  A021               	btfss	___flmul@bexp^0,0,c
  7109  002318  EF90  F011         	goto	u3561
  7110  00231C  EF92  F011         	goto	u3560
  7111  002320                     u3561:
  7112  002320  EF93  F011         	goto	l3325
  7113  002324                     u3560:
  7114  002324  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7115  002326                     l3325:
  7116  002326  90D8               	bcf	status,0,c
  7117  002328  3021               	rrcf	___flmul@bexp^0,w,c
  7118  00232A  6E25               	movwf	(___flmul@prod+3)^0,c
  7119  00232C                     l3327:
  7120  00232C  501B               	movf	___flmul@sign^0,w,c
  7121  00232E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7122  002330  C022  F00F         	movff	___flmul@prod,?___flmul
  7123  002334  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7124  002338  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7125  00233C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7126  002340                     l741:
  7127  002340  0012               	return		;funcret
  7128  002342                     __end_of___flmul:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function ___flge *****************
  7132 ;; Defined at:
  7133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  ff1             4   39[COMRAM] unsigned char 
  7136 ;;  ff2             4   43[COMRAM] unsigned char 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;		None               void
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7148 ;;      Params:         8       0       0       0       0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7150 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7151 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7152 ;;Total ram usage:       12 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_main
  7158 ;;		_efgtoa
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text24
  7163  003092                     __ptext24:
  7164                           	callstack 0
  7165  003092                     ___flge:
  7166                           	callstack 26
  7167  003092  0E00               	movlw	0
  7168  003094  1428               	andwf	___flge@ff1^0,w,c
  7169  003096  6E30               	movwf	??___flge^0,c
  7170  003098  0E00               	movlw	0
  7171  00309A  1429               	andwf	(___flge@ff1+1)^0,w,c
  7172  00309C  6E31               	movwf	(??___flge+1)^0,c
  7173  00309E  0E80               	movlw	128
  7174  0030A0  142A               	andwf	(___flge@ff1+2)^0,w,c
  7175  0030A2  6E32               	movwf	(??___flge+2)^0,c
  7176  0030A4  0E7F               	movlw	127
  7177  0030A6  142B               	andwf	(___flge@ff1+3)^0,w,c
  7178  0030A8  6E33               	movwf	(??___flge+3)^0,c
  7179  0030AA  5030               	movf	??___flge^0,w,c
  7180  0030AC  1031               	iorwf	(??___flge+1)^0,w,c
  7181  0030AE  1032               	iorwf	(??___flge+2)^0,w,c
  7182  0030B0  1033               	iorwf	(??___flge+3)^0,w,c
  7183  0030B2  A4D8               	btfss	status,2,c
  7184  0030B4  EF5E  F018         	goto	u3721
  7185  0030B8  EF60  F018         	goto	u3720
  7186  0030BC                     u3721:
  7187  0030BC  EF68  F018         	goto	l3439
  7188  0030C0                     u3720:
  7189  0030C0  0E00               	movlw	0
  7190  0030C2  6E28               	movwf	___flge@ff1^0,c
  7191  0030C4  0E00               	movlw	0
  7192  0030C6  6E29               	movwf	(___flge@ff1+1)^0,c
  7193  0030C8  0E00               	movlw	0
  7194  0030CA  6E2A               	movwf	(___flge@ff1+2)^0,c
  7195  0030CC  0E00               	movlw	0
  7196  0030CE  6E2B               	movwf	(___flge@ff1+3)^0,c
  7197  0030D0                     l3439:
  7198  0030D0  0E00               	movlw	0
  7199  0030D2  142C               	andwf	___flge@ff2^0,w,c
  7200  0030D4  6E30               	movwf	??___flge^0,c
  7201  0030D6  0E00               	movlw	0
  7202  0030D8  142D               	andwf	(___flge@ff2+1)^0,w,c
  7203  0030DA  6E31               	movwf	(??___flge+1)^0,c
  7204  0030DC  0E80               	movlw	128
  7205  0030DE  142E               	andwf	(___flge@ff2+2)^0,w,c
  7206  0030E0  6E32               	movwf	(??___flge+2)^0,c
  7207  0030E2  0E7F               	movlw	127
  7208  0030E4  142F               	andwf	(___flge@ff2+3)^0,w,c
  7209  0030E6  6E33               	movwf	(??___flge+3)^0,c
  7210  0030E8  5030               	movf	??___flge^0,w,c
  7211  0030EA  1031               	iorwf	(??___flge+1)^0,w,c
  7212  0030EC  1032               	iorwf	(??___flge+2)^0,w,c
  7213  0030EE  1033               	iorwf	(??___flge+3)^0,w,c
  7214  0030F0  A4D8               	btfss	status,2,c
  7215  0030F2  EF7D  F018         	goto	u3731
  7216  0030F6  EF7F  F018         	goto	u3730
  7217  0030FA                     u3731:
  7218  0030FA  EF87  F018         	goto	l3443
  7219  0030FE                     u3730:
  7220  0030FE  0E00               	movlw	0
  7221  003100  6E2C               	movwf	___flge@ff2^0,c
  7222  003102  0E00               	movlw	0
  7223  003104  6E2D               	movwf	(___flge@ff2+1)^0,c
  7224  003106  0E00               	movlw	0
  7225  003108  6E2E               	movwf	(___flge@ff2+2)^0,c
  7226  00310A  0E00               	movlw	0
  7227  00310C  6E2F               	movwf	(___flge@ff2+3)^0,c
  7228  00310E                     l3443:
  7229  00310E  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  7230  003110  EF8C  F018         	goto	u3741
  7231  003114  EF8E  F018         	goto	u3740
  7232  003118                     u3741:
  7233  003118  EF97  F018         	goto	l3447
  7234  00311C                     u3740:
  7235  00311C  6C28               	negf	___flge@ff1^0,c
  7236  00311E  1E29               	comf	(___flge@ff1+1)^0,f,c
  7237  003120  B0D8               	btfsc	status,0,c
  7238  003122  2A29               	incf	(___flge@ff1+1)^0,f,c
  7239  003124  1E2A               	comf	(___flge@ff1+2)^0,f,c
  7240  003126  B0D8               	btfsc	status,0,c
  7241  003128  2A2A               	incf	(___flge@ff1+2)^0,f,c
  7242  00312A  0E80               	movlw	128
  7243  00312C  562B               	subfwb	(___flge@ff1+3)^0,f,c
  7244  00312E                     l3447:
  7245  00312E  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  7246  003130  EF9C  F018         	goto	u3751
  7247  003134  EF9E  F018         	goto	u3750
  7248  003138                     u3751:
  7249  003138  EFA7  F018         	goto	l388
  7250  00313C                     u3750:
  7251  00313C  6C2C               	negf	___flge@ff2^0,c
  7252  00313E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  7253  003140  B0D8               	btfsc	status,0,c
  7254  003142  2A2D               	incf	(___flge@ff2+1)^0,f,c
  7255  003144  1E2E               	comf	(___flge@ff2+2)^0,f,c
  7256  003146  B0D8               	btfsc	status,0,c
  7257  003148  2A2E               	incf	(___flge@ff2+2)^0,f,c
  7258  00314A  0E80               	movlw	128
  7259  00314C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  7260  00314E                     l388:
  7261  00314E  0E00               	movlw	0
  7262  003150  1A28               	xorwf	___flge@ff1^0,f,c
  7263  003152  0E00               	movlw	0
  7264  003154  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  7265  003156  0E00               	movlw	0
  7266  003158  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  7267  00315A  0E80               	movlw	128
  7268  00315C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  7269  00315E  0E00               	movlw	0
  7270  003160  1A2C               	xorwf	___flge@ff2^0,f,c
  7271  003162  0E00               	movlw	0
  7272  003164  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  7273  003166  0E00               	movlw	0
  7274  003168  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  7275  00316A  0E80               	movlw	128
  7276  00316C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  7277  00316E  502C               	movf	___flge@ff2^0,w,c
  7278  003170  5C28               	subwf	___flge@ff1^0,w,c
  7279  003172  502D               	movf	(___flge@ff2+1)^0,w,c
  7280  003174  5829               	subwfb	(___flge@ff1+1)^0,w,c
  7281  003176  502E               	movf	(___flge@ff2+2)^0,w,c
  7282  003178  582A               	subwfb	(___flge@ff1+2)^0,w,c
  7283  00317A  502F               	movf	(___flge@ff2+3)^0,w,c
  7284  00317C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  7285  00317E  B0D8               	btfsc	status,0,c
  7286  003180  EFC4  F018         	goto	u3761
  7287  003184  EFC6  F018         	goto	u3760
  7288  003188                     u3761:
  7289  003188  EFC9  F018         	goto	l3453
  7290  00318C                     u3760:
  7291  00318C  90D8               	bcf	status,0,c
  7292  00318E  EFCA  F018         	goto	l393
  7293  003192                     l3453:
  7294  003192  80D8               	bsf	status,0,c
  7295  003194                     l393:
  7296  003194  0012               	return		;funcret
  7297  003196                     __end_of___flge:
  7298                           	callstack 0
  7299                           
  7300 ;; *************** function ___fleq *****************
  7301 ;; Defined at:
  7302 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  ff1             4    0[COMRAM] unsigned char 
  7305 ;;  ff2             4    4[COMRAM] unsigned char 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;		None               void
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7317 ;;      Params:         8       0       0       0       0       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7319 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7320 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7321 ;;Total ram usage:       12 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_efgtoa
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text25
  7331  003900                     __ptext25:
  7332                           	callstack 0
  7333  003900                     ___fleq:
  7334                           	callstack 26
  7335  003900  0E00               	movlw	0
  7336  003902  1401               	andwf	___fleq@ff1^0,w,c
  7337  003904  6E09               	movwf	??___fleq^0,c
  7338  003906  0E00               	movlw	0
  7339  003908  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7340  00390A  6E0A               	movwf	(??___fleq+1)^0,c
  7341  00390C  0E80               	movlw	128
  7342  00390E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7343  003910  6E0B               	movwf	(??___fleq+2)^0,c
  7344  003912  0E7F               	movlw	127
  7345  003914  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7346  003916  6E0C               	movwf	(??___fleq+3)^0,c
  7347  003918  5009               	movf	??___fleq^0,w,c
  7348  00391A  100A               	iorwf	(??___fleq+1)^0,w,c
  7349  00391C  100B               	iorwf	(??___fleq+2)^0,w,c
  7350  00391E  100C               	iorwf	(??___fleq+3)^0,w,c
  7351  003920  A4D8               	btfss	status,2,c
  7352  003922  EF95  F01C         	goto	u3691
  7353  003926  EF97  F01C         	goto	u3690
  7354  00392A                     u3691:
  7355  00392A  EF9F  F01C         	goto	l3423
  7356  00392E                     u3690:
  7357  00392E  0E00               	movlw	0
  7358  003930  6E01               	movwf	___fleq@ff1^0,c
  7359  003932  0E00               	movlw	0
  7360  003934  6E02               	movwf	(___fleq@ff1+1)^0,c
  7361  003936  0E00               	movlw	0
  7362  003938  6E03               	movwf	(___fleq@ff1+2)^0,c
  7363  00393A  0E00               	movlw	0
  7364  00393C  6E04               	movwf	(___fleq@ff1+3)^0,c
  7365  00393E                     l3423:
  7366  00393E  0E00               	movlw	0
  7367  003940  1405               	andwf	___fleq@ff2^0,w,c
  7368  003942  6E09               	movwf	??___fleq^0,c
  7369  003944  0E00               	movlw	0
  7370  003946  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7371  003948  6E0A               	movwf	(??___fleq+1)^0,c
  7372  00394A  0E80               	movlw	128
  7373  00394C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7374  00394E  6E0B               	movwf	(??___fleq+2)^0,c
  7375  003950  0E7F               	movlw	127
  7376  003952  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7377  003954  6E0C               	movwf	(??___fleq+3)^0,c
  7378  003956  5009               	movf	??___fleq^0,w,c
  7379  003958  100A               	iorwf	(??___fleq+1)^0,w,c
  7380  00395A  100B               	iorwf	(??___fleq+2)^0,w,c
  7381  00395C  100C               	iorwf	(??___fleq+3)^0,w,c
  7382  00395E  A4D8               	btfss	status,2,c
  7383  003960  EFB4  F01C         	goto	u3701
  7384  003964  EFB6  F01C         	goto	u3700
  7385  003968                     u3701:
  7386  003968  EFBE  F01C         	goto	l3427
  7387  00396C                     u3700:
  7388  00396C  0E00               	movlw	0
  7389  00396E  6E05               	movwf	___fleq@ff2^0,c
  7390  003970  0E00               	movlw	0
  7391  003972  6E06               	movwf	(___fleq@ff2+1)^0,c
  7392  003974  0E00               	movlw	0
  7393  003976  6E07               	movwf	(___fleq@ff2+2)^0,c
  7394  003978  0E00               	movlw	0
  7395  00397A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7396  00397C                     l3427:
  7397  00397C  5005               	movf	___fleq@ff2^0,w,c
  7398  00397E  1801               	xorwf	___fleq@ff1^0,w,c
  7399  003980  E10F               	bnz	u3710
  7400  003982  5006               	movf	(___fleq@ff2+1)^0,w,c
  7401  003984  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7402  003986  E10C               	bnz	u3710
  7403  003988  5007               	movf	(___fleq@ff2+2)^0,w,c
  7404  00398A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7405  00398C  E109               	bnz	u3710
  7406  00398E  5008               	movf	(___fleq@ff2+3)^0,w,c
  7407  003990  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7408  003992  B4D8               	btfsc	status,2,c
  7409  003994  EFCE  F01C         	goto	u3711
  7410  003998  EFD0  F01C         	goto	u3710
  7411  00399C                     u3711:
  7412  00399C  EFD3  F01C         	goto	l3431
  7413  0039A0                     u3710:
  7414  0039A0  90D8               	bcf	status,0,c
  7415  0039A2  EFD4  F01C         	goto	l382
  7416  0039A6                     l3431:
  7417  0039A6  80D8               	bsf	status,0,c
  7418  0039A8                     l382:
  7419  0039A8  0012               	return		;funcret
  7420  0039AA                     __end_of___fleq:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function ___fldiv *****************
  7424 ;; Defined at:
  7425 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  b               4   39[COMRAM] unsigned char 
  7428 ;;  a               4   43[COMRAM] unsigned char 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  grs             4   58[COMRAM] unsigned long 
  7431 ;;  rem             4   51[COMRAM] unsigned long 
  7432 ;;  new_exp         2   56[COMRAM] short 
  7433 ;;  aexp            1   63[COMRAM] unsigned char 
  7434 ;;  bexp            1   62[COMRAM] unsigned char 
  7435 ;;  sign            1   55[COMRAM] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  4   39[COMRAM] unsigned char 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7445 ;;      Params:         8       0       0       0       0       0       0       0       0
  7446 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7447 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7448 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7449 ;;Total ram usage:       25 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_main
  7455 ;;		_efgtoa
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text26
  7460  002342                     __ptext26:
  7461                           	callstack 0
  7462  002342                     ___fldiv:
  7463                           	callstack 26
  7464  002342  502B               	movf	(___fldiv@b+3)^0,w,c
  7465  002344  0B80               	andlw	128
  7466  002346  6E38               	movwf	___fldiv@sign^0,c
  7467  002348  502B               	movf	(___fldiv@b+3)^0,w,c
  7468  00234A  242B               	addwf	(___fldiv@b+3)^0,w,c
  7469  00234C  6E3F               	movwf	___fldiv@bexp^0,c
  7470  00234E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7471  002350  EFAC  F011         	goto	u3151
  7472  002354  EFAE  F011         	goto	u3150
  7473  002358                     u3151:
  7474  002358  EFAF  F011         	goto	l3071
  7475  00235C                     u3150:
  7476  00235C  803F               	bsf	___fldiv@bexp^0,0,c
  7477  00235E                     l3071:
  7478  00235E  503F               	movf	___fldiv@bexp^0,w,c
  7479  002360  B4D8               	btfsc	status,2,c
  7480  002362  EFB5  F011         	goto	u3161
  7481  002366  EFB7  F011         	goto	u3160
  7482  00236A                     u3161:
  7483  00236A  EFCC  F011         	goto	l3081
  7484  00236E                     u3160:
  7485  00236E  283F               	incf	___fldiv@bexp^0,w,c
  7486  002370  A4D8               	btfss	status,2,c
  7487  002372  EFBD  F011         	goto	u3171
  7488  002376  EFBF  F011         	goto	u3170
  7489  00237A                     u3171:
  7490  00237A  EFC7  F011         	goto	l3077
  7491  00237E                     u3170:
  7492  00237E  0E00               	movlw	0
  7493  002380  6E28               	movwf	___fldiv@b^0,c
  7494  002382  0E00               	movlw	0
  7495  002384  6E29               	movwf	(___fldiv@b+1)^0,c
  7496  002386  0E00               	movlw	0
  7497  002388  6E2A               	movwf	(___fldiv@b+2)^0,c
  7498  00238A  0E00               	movlw	0
  7499  00238C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7500  00238E                     l3077:
  7501  00238E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7502  002390  0E00               	movlw	0
  7503  002392  6E2B               	movwf	(___fldiv@b+3)^0,c
  7504  002394  EFD4  F011         	goto	l3083
  7505  002398                     l3081:
  7506  002398  0E00               	movlw	0
  7507  00239A  6E28               	movwf	___fldiv@b^0,c
  7508  00239C  0E00               	movlw	0
  7509  00239E  6E29               	movwf	(___fldiv@b+1)^0,c
  7510  0023A0  0E00               	movlw	0
  7511  0023A2  6E2A               	movwf	(___fldiv@b+2)^0,c
  7512  0023A4  0E00               	movlw	0
  7513  0023A6  6E2B               	movwf	(___fldiv@b+3)^0,c
  7514  0023A8                     l3083:
  7515  0023A8  502F               	movf	(___fldiv@a+3)^0,w,c
  7516  0023AA  0B80               	andlw	128
  7517  0023AC  1A38               	xorwf	___fldiv@sign^0,f,c
  7518  0023AE  502F               	movf	(___fldiv@a+3)^0,w,c
  7519  0023B0  242F               	addwf	(___fldiv@a+3)^0,w,c
  7520  0023B2  6E40               	movwf	___fldiv@aexp^0,c
  7521  0023B4  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7522  0023B6  EFDF  F011         	goto	u3181
  7523  0023BA  EFE1  F011         	goto	u3180
  7524  0023BE                     u3181:
  7525  0023BE  EFE2  F011         	goto	l3091
  7526  0023C2                     u3180:
  7527  0023C2  8040               	bsf	___fldiv@aexp^0,0,c
  7528  0023C4                     l3091:
  7529  0023C4  5040               	movf	___fldiv@aexp^0,w,c
  7530  0023C6  B4D8               	btfsc	status,2,c
  7531  0023C8  EFE8  F011         	goto	u3191
  7532  0023CC  EFEA  F011         	goto	u3190
  7533  0023D0                     u3191:
  7534  0023D0  EFFF  F011         	goto	l3101
  7535  0023D4                     u3190:
  7536  0023D4  2840               	incf	___fldiv@aexp^0,w,c
  7537  0023D6  A4D8               	btfss	status,2,c
  7538  0023D8  EFF0  F011         	goto	u3201
  7539  0023DC  EFF2  F011         	goto	u3200
  7540  0023E0                     u3201:
  7541  0023E0  EFFA  F011         	goto	l3097
  7542  0023E4                     u3200:
  7543  0023E4  0E00               	movlw	0
  7544  0023E6  6E2C               	movwf	___fldiv@a^0,c
  7545  0023E8  0E00               	movlw	0
  7546  0023EA  6E2D               	movwf	(___fldiv@a+1)^0,c
  7547  0023EC  0E00               	movlw	0
  7548  0023EE  6E2E               	movwf	(___fldiv@a+2)^0,c
  7549  0023F0  0E00               	movlw	0
  7550  0023F2  6E2F               	movwf	(___fldiv@a+3)^0,c
  7551  0023F4                     l3097:
  7552  0023F4  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7553  0023F6  0E00               	movlw	0
  7554  0023F8  6E2F               	movwf	(___fldiv@a+3)^0,c
  7555  0023FA  EF07  F012         	goto	l3103
  7556  0023FE                     l3101:
  7557  0023FE  0E00               	movlw	0
  7558  002400  6E2C               	movwf	___fldiv@a^0,c
  7559  002402  0E00               	movlw	0
  7560  002404  6E2D               	movwf	(___fldiv@a+1)^0,c
  7561  002406  0E00               	movlw	0
  7562  002408  6E2E               	movwf	(___fldiv@a+2)^0,c
  7563  00240A  0E00               	movlw	0
  7564  00240C  6E2F               	movwf	(___fldiv@a+3)^0,c
  7565  00240E                     l3103:
  7566  00240E  502C               	movf	___fldiv@a^0,w,c
  7567  002410  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7568  002412  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7569  002414  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7570  002416  A4D8               	btfss	status,2,c
  7571  002418  EF10  F012         	goto	u3211
  7572  00241C  EF12  F012         	goto	u3210
  7573  002420                     u3211:
  7574  002420  EF2A  F012         	goto	l3115
  7575  002424                     u3210:
  7576  002424  0E00               	movlw	0
  7577  002426  6E28               	movwf	___fldiv@b^0,c
  7578  002428  0E00               	movlw	0
  7579  00242A  6E29               	movwf	(___fldiv@b+1)^0,c
  7580  00242C  0E00               	movlw	0
  7581  00242E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7582  002430  0E00               	movlw	0
  7583  002432  6E2B               	movwf	(___fldiv@b+3)^0,c
  7584  002434  0E80               	movlw	128
  7585  002436  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7586  002438  0E7F               	movlw	127
  7587  00243A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7588  00243C                     l3109:
  7589  00243C  5038               	movf	___fldiv@sign^0,w,c
  7590  00243E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7591  002440  C028  F028         	movff	___fldiv@b,?___fldiv
  7592  002444  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7593  002448  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7594  00244C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7595  002450  EF6D  F013         	goto	l705
  7596  002454                     l3115:
  7597  002454  503F               	movf	___fldiv@bexp^0,w,c
  7598  002456  A4D8               	btfss	status,2,c
  7599  002458  EF30  F012         	goto	u3221
  7600  00245C  EF32  F012         	goto	u3220
  7601  002460                     u3221:
  7602  002460  EF3C  F012         	goto	l3123
  7603  002464                     u3220:
  7604  002464  0E00               	movlw	0
  7605  002466  6E28               	movwf	?___fldiv^0,c
  7606  002468  0E00               	movlw	0
  7607  00246A  6E29               	movwf	(?___fldiv+1)^0,c
  7608  00246C  0E00               	movlw	0
  7609  00246E  6E2A               	movwf	(?___fldiv+2)^0,c
  7610  002470  0E00               	movlw	0
  7611  002472  6E2B               	movwf	(?___fldiv+3)^0,c
  7612  002474  EF6D  F013         	goto	l705
  7613  002478                     l3123:
  7614  002478  5040               	movf	___fldiv@aexp^0,w,c
  7615  00247A  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7616  00247E  6A31               	clrf	(??___fldiv+1)^0,c
  7617  002480  5E30               	subwf	??___fldiv^0,f,c
  7618  002482  0E00               	movlw	0
  7619  002484  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7620  002486  0E7F               	movlw	127
  7621  002488  2430               	addwf	??___fldiv^0,w,c
  7622  00248A  6E39               	movwf	___fldiv@new_exp^0,c
  7623  00248C  0E00               	movlw	0
  7624  00248E  2031               	addwfc	(??___fldiv+1)^0,w,c
  7625  002490  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7626  002492  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7627  002496  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7628  00249A  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7629  00249E  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7630  0024A2  0E00               	movlw	0
  7631  0024A4  6E28               	movwf	___fldiv@b^0,c
  7632  0024A6  0E00               	movlw	0
  7633  0024A8  6E29               	movwf	(___fldiv@b+1)^0,c
  7634  0024AA  0E00               	movlw	0
  7635  0024AC  6E2A               	movwf	(___fldiv@b+2)^0,c
  7636  0024AE  0E00               	movlw	0
  7637  0024B0  6E2B               	movwf	(___fldiv@b+3)^0,c
  7638  0024B2  0E00               	movlw	0
  7639  0024B4  6E3B               	movwf	___fldiv@grs^0,c
  7640  0024B6  0E00               	movlw	0
  7641  0024B8  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7642  0024BA  0E00               	movlw	0
  7643  0024BC  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7644  0024BE  0E00               	movlw	0
  7645  0024C0  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7646  0024C2  0E00               	movlw	0
  7647  0024C4  6E40               	movwf	___fldiv@aexp^0,c
  7648  0024C6  EF9D  F012         	goto	l707
  7649  0024CA                     l3133:
  7650  0024CA  5040               	movf	___fldiv@aexp^0,w,c
  7651  0024CC  B4D8               	btfsc	status,2,c
  7652  0024CE  EF6B  F012         	goto	u3231
  7653  0024D2  EF6D  F012         	goto	u3230
  7654  0024D6                     u3231:
  7655  0024D6  EF84  F012         	goto	l3141
  7656  0024DA                     u3230:
  7657  0024DA  90D8               	bcf	status,0,c
  7658  0024DC  3634               	rlcf	___fldiv@rem^0,f,c
  7659  0024DE  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7660  0024E0  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7661  0024E2  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7662  0024E4  90D8               	bcf	status,0,c
  7663  0024E6  3628               	rlcf	___fldiv@b^0,f,c
  7664  0024E8  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7665  0024EA  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7666  0024EC  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7667  0024EE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7668  0024F0  EF7C  F012         	goto	u3241
  7669  0024F4  EF7E  F012         	goto	u3240
  7670  0024F8                     u3241:
  7671  0024F8  EF7F  F012         	goto	l710
  7672  0024FC                     u3240:
  7673  0024FC  8028               	bsf	___fldiv@b^0,0,c
  7674  0024FE                     l710:
  7675  0024FE  90D8               	bcf	status,0,c
  7676  002500  363B               	rlcf	___fldiv@grs^0,f,c
  7677  002502  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7678  002504  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7679  002506  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7680  002508                     l3141:
  7681  002508  502C               	movf	___fldiv@a^0,w,c
  7682  00250A  5C34               	subwf	___fldiv@rem^0,w,c
  7683  00250C  502D               	movf	(___fldiv@a+1)^0,w,c
  7684  00250E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7685  002510  502E               	movf	(___fldiv@a+2)^0,w,c
  7686  002512  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7687  002514  502F               	movf	(___fldiv@a+3)^0,w,c
  7688  002516  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7689  002518  A0D8               	btfss	status,0,c
  7690  00251A  EF91  F012         	goto	u3251
  7691  00251E  EF93  F012         	goto	u3250
  7692  002522                     u3251:
  7693  002522  EF9C  F012         	goto	l3147
  7694  002526                     u3250:
  7695  002526  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7696  002528  502C               	movf	___fldiv@a^0,w,c
  7697  00252A  5E34               	subwf	___fldiv@rem^0,f,c
  7698  00252C  502D               	movf	(___fldiv@a+1)^0,w,c
  7699  00252E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7700  002530  502E               	movf	(___fldiv@a+2)^0,w,c
  7701  002532  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7702  002534  502F               	movf	(___fldiv@a+3)^0,w,c
  7703  002536  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7704  002538                     l3147:
  7705  002538  2A40               	incf	___fldiv@aexp^0,f,c
  7706  00253A                     l707:
  7707  00253A  0E19               	movlw	25
  7708  00253C  6440               	cpfsgt	___fldiv@aexp^0,c
  7709  00253E  EFA3  F012         	goto	u3261
  7710  002542  EFA5  F012         	goto	u3260
  7711  002546                     u3261:
  7712  002546  EF65  F012         	goto	l3133
  7713  00254A                     u3260:
  7714  00254A  5034               	movf	___fldiv@rem^0,w,c
  7715  00254C  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7716  00254E  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7717  002550  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7718  002552  B4D8               	btfsc	status,2,c
  7719  002554  EFAE  F012         	goto	u3271
  7720  002558  EFB0  F012         	goto	u3270
  7721  00255C                     u3271:
  7722  00255C  EFC8  F012         	goto	l3159
  7723  002560                     u3270:
  7724  002560  803B               	bsf	___fldiv@grs^0,0,c
  7725  002562  EFC8  F012         	goto	l3159
  7726  002566                     l3153:
  7727  002566  90D8               	bcf	status,0,c
  7728  002568  3628               	rlcf	___fldiv@b^0,f,c
  7729  00256A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7730  00256C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7731  00256E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7732  002570  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7733  002572  EFBD  F012         	goto	u3281
  7734  002576  EFBF  F012         	goto	u3280
  7735  00257A                     u3281:
  7736  00257A  EFC0  F012         	goto	l716
  7737  00257E                     u3280:
  7738  00257E  8028               	bsf	___fldiv@b^0,0,c
  7739  002580                     l716:
  7740  002580  90D8               	bcf	status,0,c
  7741  002582  363B               	rlcf	___fldiv@grs^0,f,c
  7742  002584  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7743  002586  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7744  002588  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7745  00258A  0639               	decf	___fldiv@new_exp^0,f,c
  7746  00258C  A0D8               	btfss	status,0,c
  7747  00258E  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7748  002590                     l3159:
  7749  002590  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7750  002592  EFCD  F012         	goto	u3291
  7751  002596  EFCF  F012         	goto	u3290
  7752  00259A                     u3291:
  7753  00259A  EFB3  F012         	goto	l3153
  7754  00259E                     u3290:
  7755  00259E  0E00               	movlw	0
  7756  0025A0  6E40               	movwf	___fldiv@aexp^0,c
  7757  0025A2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7758  0025A4  EFD6  F012         	goto	u3301
  7759  0025A8  EFD8  F012         	goto	u3300
  7760  0025AC                     u3301:
  7761  0025AC  EFFC  F012         	goto	l718
  7762  0025B0                     u3300:
  7763  0025B0  0EFF               	movlw	255
  7764  0025B2  143B               	andwf	___fldiv@grs^0,w,c
  7765  0025B4  6E30               	movwf	??___fldiv^0,c
  7766  0025B6  0EFF               	movlw	255
  7767  0025B8  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7768  0025BA  6E31               	movwf	(??___fldiv+1)^0,c
  7769  0025BC  0EFF               	movlw	255
  7770  0025BE  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7771  0025C0  6E32               	movwf	(??___fldiv+2)^0,c
  7772  0025C2  0E7F               	movlw	127
  7773  0025C4  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7774  0025C6  6E33               	movwf	(??___fldiv+3)^0,c
  7775  0025C8  5030               	movf	??___fldiv^0,w,c
  7776  0025CA  1031               	iorwf	(??___fldiv+1)^0,w,c
  7777  0025CC  1032               	iorwf	(??___fldiv+2)^0,w,c
  7778  0025CE  1033               	iorwf	(??___fldiv+3)^0,w,c
  7779  0025D0  B4D8               	btfsc	status,2,c
  7780  0025D2  EFED  F012         	goto	u3311
  7781  0025D6  EFEF  F012         	goto	u3310
  7782  0025DA                     u3311:
  7783  0025DA  EFF3  F012         	goto	l719
  7784  0025DE                     u3310:
  7785  0025DE                     l3167:
  7786  0025DE  0E01               	movlw	1
  7787  0025E0  6E40               	movwf	___fldiv@aexp^0,c
  7788  0025E2  EFFC  F012         	goto	l718
  7789  0025E6                     l719:
  7790  0025E6  A028               	btfss	___fldiv@b^0,0,c
  7791  0025E8  EFF8  F012         	goto	u3321
  7792  0025EC  EFFA  F012         	goto	u3320
  7793  0025F0                     u3321:
  7794  0025F0  EFFC  F012         	goto	l718
  7795  0025F4                     u3320:
  7796  0025F4  EFEF  F012         	goto	l3167
  7797  0025F8                     l718:
  7798  0025F8  5040               	movf	___fldiv@aexp^0,w,c
  7799  0025FA  B4D8               	btfsc	status,2,c
  7800  0025FC  EF02  F013         	goto	u3331
  7801  002600  EF04  F013         	goto	u3330
  7802  002604                     u3331:
  7803  002604  EF28  F013         	goto	l3179
  7804  002608                     u3330:
  7805  002608  0E01               	movlw	1
  7806  00260A  2628               	addwf	___fldiv@b^0,f,c
  7807  00260C  0E00               	movlw	0
  7808  00260E  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7809  002610  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7810  002612  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7811  002614  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7812  002616  EF0F  F013         	goto	u3341
  7813  00261A  EF11  F013         	goto	u3340
  7814  00261E                     u3341:
  7815  00261E  EF28  F013         	goto	l3179
  7816  002622                     u3340:
  7817  002622  C028  F030         	movff	___fldiv@b,??___fldiv
  7818  002626  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7819  00262A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7820  00262E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7821  002632  3433               	rlcf	(??___fldiv+3)^0,w,c
  7822  002634  3233               	rrcf	(??___fldiv+3)^0,f,c
  7823  002636  3232               	rrcf	(??___fldiv+2)^0,f,c
  7824  002638  3231               	rrcf	(??___fldiv+1)^0,f,c
  7825  00263A  3230               	rrcf	??___fldiv^0,f,c
  7826  00263C  C030  F028         	movff	??___fldiv,___fldiv@b
  7827  002640  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7828  002644  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7829  002648  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7830  00264C  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7831  00264E  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7832  002650                     l3179:
  7833  002650  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7834  002652  EF33  F013         	goto	u3351
  7835  002656  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7836  002658  E108               	bnz	u3350
  7837  00265A  2839               	incf	___fldiv@new_exp^0,w,c
  7838  00265C  A0D8               	btfss	status,0,c
  7839  00265E  EF33  F013         	goto	u3351
  7840  002662  EF35  F013         	goto	u3350
  7841  002666                     u3351:
  7842  002666  EF40  F013         	goto	l3183
  7843  00266A                     u3350:
  7844  00266A  0E00               	movlw	0
  7845  00266C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7846  00266E  6839               	setf	___fldiv@new_exp^0,c
  7847  002670  0E00               	movlw	0
  7848  002672  6E28               	movwf	___fldiv@b^0,c
  7849  002674  0E00               	movlw	0
  7850  002676  6E29               	movwf	(___fldiv@b+1)^0,c
  7851  002678  0E00               	movlw	0
  7852  00267A  6E2A               	movwf	(___fldiv@b+2)^0,c
  7853  00267C  0E00               	movlw	0
  7854  00267E  6E2B               	movwf	(___fldiv@b+3)^0,c
  7855  002680                     l3183:
  7856  002680  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7857  002682  EF4D  F013         	goto	u3360
  7858  002686  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7859  002688  E106               	bnz	u3361
  7860  00268A  0439               	decf	___fldiv@new_exp^0,w,c
  7861  00268C  B0D8               	btfsc	status,0,c
  7862  00268E  EF4B  F013         	goto	u3361
  7863  002692  EF4D  F013         	goto	u3360
  7864  002696                     u3361:
  7865  002696  EF5B  F013         	goto	l3187
  7866  00269A                     u3360:
  7867  00269A  0E00               	movlw	0
  7868  00269C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7869  00269E  0E00               	movlw	0
  7870  0026A0  6E39               	movwf	___fldiv@new_exp^0,c
  7871  0026A2  0E00               	movlw	0
  7872  0026A4  6E28               	movwf	___fldiv@b^0,c
  7873  0026A6  0E00               	movlw	0
  7874  0026A8  6E29               	movwf	(___fldiv@b+1)^0,c
  7875  0026AA  0E00               	movlw	0
  7876  0026AC  6E2A               	movwf	(___fldiv@b+2)^0,c
  7877  0026AE  0E00               	movlw	0
  7878  0026B0  6E2B               	movwf	(___fldiv@b+3)^0,c
  7879  0026B2  0E00               	movlw	0
  7880  0026B4  6E38               	movwf	___fldiv@sign^0,c
  7881  0026B6                     l3187:
  7882  0026B6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7883  0026BA  A03F               	btfss	___fldiv@bexp^0,0,c
  7884  0026BC  EF62  F013         	goto	u3371
  7885  0026C0  EF64  F013         	goto	u3370
  7886  0026C4                     u3371:
  7887  0026C4  EF67  F013         	goto	l3193
  7888  0026C8                     u3370:
  7889  0026C8  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7890  0026CA  EF68  F013         	goto	l3195
  7891  0026CE                     l3193:
  7892  0026CE  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7893  0026D0                     l3195:
  7894  0026D0  90D8               	bcf	status,0,c
  7895  0026D2  303F               	rrcf	___fldiv@bexp^0,w,c
  7896  0026D4  6E2B               	movwf	(___fldiv@b+3)^0,c
  7897  0026D6  EF1E  F012         	goto	l3109
  7898  0026DA                     l705:
  7899  0026DA  0012               	return		;funcret
  7900  0026DC                     __end_of___fldiv:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function ___awmod *****************
  7904 ;; Defined at:
  7905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  dividend        2    0[COMRAM] int 
  7908 ;;  divisor         2    2[COMRAM] int 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  sign            1    5[COMRAM] unsigned char 
  7911 ;;  counter         1    4[COMRAM] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2    0[COMRAM] int 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7921 ;;      Params:         4       0       0       0       0       0       0       0       0
  7922 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7924 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7925 ;;Total ram usage:        6 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_efgtoa
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text27
  7935  003850                     __ptext27:
  7936                           	callstack 0
  7937  003850                     ___awmod:
  7938                           	callstack 26
  7939  003850  0E00               	movlw	0
  7940  003852  6E06               	movwf	___awmod@sign^0,c
  7941  003854  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7942  003856  EF31  F01C         	goto	u3630
  7943  00385A  EF2F  F01C         	goto	u3631
  7944  00385E                     u3631:
  7945  00385E  EF37  F01C         	goto	l3391
  7946  003862                     u3630:
  7947  003862  6C01               	negf	___awmod@dividend^0,c
  7948  003864  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7949  003866  B0D8               	btfsc	status,0,c
  7950  003868  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7951  00386A  0E01               	movlw	1
  7952  00386C  6E06               	movwf	___awmod@sign^0,c
  7953  00386E                     l3391:
  7954  00386E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7955  003870  EF3E  F01C         	goto	u3640
  7956  003874  EF3C  F01C         	goto	u3641
  7957  003878                     u3641:
  7958  003878  EF42  F01C         	goto	l3395
  7959  00387C                     u3640:
  7960  00387C  6C03               	negf	___awmod@divisor^0,c
  7961  00387E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7962  003880  B0D8               	btfsc	status,0,c
  7963  003882  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7964  003884                     l3395:
  7965  003884  5003               	movf	___awmod@divisor^0,w,c
  7966  003886  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7967  003888  B4D8               	btfsc	status,2,c
  7968  00388A  EF49  F01C         	goto	u3651
  7969  00388E  EF4B  F01C         	goto	u3650
  7970  003892                     u3651:
  7971  003892  EF6F  F01C         	goto	l3411
  7972  003896                     u3650:
  7973  003896  0E01               	movlw	1
  7974  003898  6E05               	movwf	___awmod@counter^0,c
  7975  00389A  EF53  F01C         	goto	l3401
  7976  00389E                     l3399:
  7977  00389E  90D8               	bcf	status,0,c
  7978  0038A0  3603               	rlcf	___awmod@divisor^0,f,c
  7979  0038A2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7980  0038A4  2A05               	incf	___awmod@counter^0,f,c
  7981  0038A6                     l3401:
  7982  0038A6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7983  0038A8  EF58  F01C         	goto	u3661
  7984  0038AC  EF5A  F01C         	goto	u3660
  7985  0038B0                     u3661:
  7986  0038B0  EF4F  F01C         	goto	l3399
  7987  0038B4                     u3660:
  7988  0038B4                     l3403:
  7989  0038B4  5003               	movf	___awmod@divisor^0,w,c
  7990  0038B6  5C01               	subwf	___awmod@dividend^0,w,c
  7991  0038B8  5004               	movf	(___awmod@divisor+1)^0,w,c
  7992  0038BA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7993  0038BC  A0D8               	btfss	status,0,c
  7994  0038BE  EF63  F01C         	goto	u3671
  7995  0038C2  EF65  F01C         	goto	u3670
  7996  0038C6                     u3671:
  7997  0038C6  EF69  F01C         	goto	l3407
  7998  0038CA                     u3670:
  7999  0038CA  5003               	movf	___awmod@divisor^0,w,c
  8000  0038CC  5E01               	subwf	___awmod@dividend^0,f,c
  8001  0038CE  5004               	movf	(___awmod@divisor+1)^0,w,c
  8002  0038D0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8003  0038D2                     l3407:
  8004  0038D2  90D8               	bcf	status,0,c
  8005  0038D4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8006  0038D6  3203               	rrcf	___awmod@divisor^0,f,c
  8007  0038D8  2E05               	decfsz	___awmod@counter^0,f,c
  8008  0038DA  EF5A  F01C         	goto	l3403
  8009  0038DE                     l3411:
  8010  0038DE  5006               	movf	___awmod@sign^0,w,c
  8011  0038E0  B4D8               	btfsc	status,2,c
  8012  0038E2  EF75  F01C         	goto	u3681
  8013  0038E6  EF77  F01C         	goto	u3680
  8014  0038EA                     u3681:
  8015  0038EA  EF7B  F01C         	goto	l3415
  8016  0038EE                     u3680:
  8017  0038EE  6C01               	negf	___awmod@dividend^0,c
  8018  0038F0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8019  0038F2  B0D8               	btfsc	status,0,c
  8020  0038F4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8021  0038F6                     l3415:
  8022  0038F6  C001  F001         	movff	___awmod@dividend,?___awmod
  8023  0038FA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8024  0038FE  0012               	return		;funcret
  8025  003900                     __end_of___awmod:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function ___awdiv *****************
  8029 ;; Defined at:
  8030 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  dividend        2    0[COMRAM] int 
  8033 ;;  divisor         2    2[COMRAM] int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  quotient        2    6[COMRAM] int 
  8036 ;;  sign            1    5[COMRAM] unsigned char 
  8037 ;;  counter         1    4[COMRAM] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  2    0[COMRAM] int 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         4       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8050 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        8 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_efgtoa
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text28
  8061  00378C                     __ptext28:
  8062                           	callstack 0
  8063  00378C                     ___awdiv:
  8064                           	callstack 26
  8065  00378C  0E00               	movlw	0
  8066  00378E  6E06               	movwf	___awdiv@sign^0,c
  8067  003790  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8068  003792  EFCF  F01B         	goto	u3570
  8069  003796  EFCD  F01B         	goto	u3571
  8070  00379A                     u3571:
  8071  00379A  EFD5  F01B         	goto	l3347
  8072  00379E                     u3570:
  8073  00379E  6C03               	negf	___awdiv@divisor^0,c
  8074  0037A0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8075  0037A2  B0D8               	btfsc	status,0,c
  8076  0037A4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8077  0037A6  0E01               	movlw	1
  8078  0037A8  6E06               	movwf	___awdiv@sign^0,c
  8079  0037AA                     l3347:
  8080  0037AA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8081  0037AC  EFDC  F01B         	goto	u3580
  8082  0037B0  EFDA  F01B         	goto	u3581
  8083  0037B4                     u3581:
  8084  0037B4  EFE2  F01B         	goto	l3353
  8085  0037B8                     u3580:
  8086  0037B8  6C01               	negf	___awdiv@dividend^0,c
  8087  0037BA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8088  0037BC  B0D8               	btfsc	status,0,c
  8089  0037BE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8090  0037C0  0E01               	movlw	1
  8091  0037C2  1A06               	xorwf	___awdiv@sign^0,f,c
  8092  0037C4                     l3353:
  8093  0037C4  0E00               	movlw	0
  8094  0037C6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8095  0037C8  0E00               	movlw	0
  8096  0037CA  6E07               	movwf	___awdiv@quotient^0,c
  8097  0037CC  5003               	movf	___awdiv@divisor^0,w,c
  8098  0037CE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8099  0037D0  B4D8               	btfsc	status,2,c
  8100  0037D2  EFED  F01B         	goto	u3591
  8101  0037D6  EFEF  F01B         	goto	u3590
  8102  0037DA                     u3591:
  8103  0037DA  EF17  F01C         	goto	l3375
  8104  0037DE                     u3590:
  8105  0037DE  0E01               	movlw	1
  8106  0037E0  6E05               	movwf	___awdiv@counter^0,c
  8107  0037E2  EFF7  F01B         	goto	l3361
  8108  0037E6                     l3359:
  8109  0037E6  90D8               	bcf	status,0,c
  8110  0037E8  3603               	rlcf	___awdiv@divisor^0,f,c
  8111  0037EA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8112  0037EC  2A05               	incf	___awdiv@counter^0,f,c
  8113  0037EE                     l3361:
  8114  0037EE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8115  0037F0  EFFC  F01B         	goto	u3601
  8116  0037F4  EFFE  F01B         	goto	u3600
  8117  0037F8                     u3601:
  8118  0037F8  EFF3  F01B         	goto	l3359
  8119  0037FC                     u3600:
  8120  0037FC                     l3363:
  8121  0037FC  90D8               	bcf	status,0,c
  8122  0037FE  3607               	rlcf	___awdiv@quotient^0,f,c
  8123  003800  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8124  003802  5003               	movf	___awdiv@divisor^0,w,c
  8125  003804  5C01               	subwf	___awdiv@dividend^0,w,c
  8126  003806  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8127  003808  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8128  00380A  A0D8               	btfss	status,0,c
  8129  00380C  EF0A  F01C         	goto	u3611
  8130  003810  EF0C  F01C         	goto	u3610
  8131  003814                     u3611:
  8132  003814  EF11  F01C         	goto	l3371
  8133  003818                     u3610:
  8134  003818  5003               	movf	___awdiv@divisor^0,w,c
  8135  00381A  5E01               	subwf	___awdiv@dividend^0,f,c
  8136  00381C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8137  00381E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8138  003820  8007               	bsf	___awdiv@quotient^0,0,c
  8139  003822                     l3371:
  8140  003822  90D8               	bcf	status,0,c
  8141  003824  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8142  003826  3203               	rrcf	___awdiv@divisor^0,f,c
  8143  003828  2E05               	decfsz	___awdiv@counter^0,f,c
  8144  00382A  EFFE  F01B         	goto	l3363
  8145  00382E                     l3375:
  8146  00382E  5006               	movf	___awdiv@sign^0,w,c
  8147  003830  B4D8               	btfsc	status,2,c
  8148  003832  EF1D  F01C         	goto	u3621
  8149  003836  EF1F  F01C         	goto	u3620
  8150  00383A                     u3621:
  8151  00383A  EF23  F01C         	goto	l3379
  8152  00383E                     u3620:
  8153  00383E  6C07               	negf	___awdiv@quotient^0,c
  8154  003840  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8155  003842  B0D8               	btfsc	status,0,c
  8156  003844  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8157  003846                     l3379:
  8158  003846  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8159  00384A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8160  00384E  0012               	return		;funcret
  8161  003850                     __end_of___awdiv:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _atoi *****************
  8165 ;; Defined at:
  8166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8169 ;;		 -> STR_2(15), STR_1(11), 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  n               2   20[COMRAM] int 
  8172 ;;  neg             2   13[COMRAM] int 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2    7[COMRAM] int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8182 ;;      Params:         2       0       0       0       0       0       0       0       0
  8183 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8184 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8185 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8186 ;;Total ram usage:       15 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; Hardware stack levels required when called: 1
  8189 ;; This function calls:
  8190 ;;		___wmul
  8191 ;;		_isdigit
  8192 ;;		_isspace
  8193 ;; This function is called by:
  8194 ;;		_vfpfcnvrt
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text29
  8199  002CA6                     __ptext29:
  8200                           	callstack 0
  8201  002CA6                     _atoi:
  8202                           	callstack 26
  8203  002CA6  0E00               	movlw	0
  8204  002CA8  6E16               	movwf	(atoi@n+1)^0,c
  8205  002CAA  0E00               	movlw	0
  8206  002CAC  6E15               	movwf	atoi@n^0,c
  8207  002CAE  0E00               	movlw	0
  8208  002CB0  6E0F               	movwf	(atoi@neg+1)^0,c
  8209  002CB2  0E00               	movlw	0
  8210  002CB4  6E0E               	movwf	atoi@neg^0,c
  8211  002CB6  EF5F  F016         	goto	l4013
  8212  002CBA                     l4011:
  8213  002CBA  4A08               	infsnz	atoi@s^0,f,c
  8214  002CBC  2A09               	incf	(atoi@s+1)^0,f,c
  8215  002CBE                     l4013:
  8216  002CBE  0E01               	movlw	1
  8217  002CC0  6E14               	movwf	_atoi$1012^0,c
  8218  002CC2  C008  FFF6         	movff	atoi@s,tblptrl
  8219  002CC6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8220  002CCA                     	if	0	;tblptru may be non-zero
  8221  002CCA                     	endif
  8222  002CCA                     	if	0	;tblptru may be non-zero
  8223  002CCA                     	endif
  8224  002CCA  0008               	tblrd		*
  8225  002CCC  50F5               	movf	tablat,w,c
  8226  002CCE  0A20               	xorlw	32
  8227  002CD0  B4D8               	btfsc	status,2,c
  8228  002CD2  EF6D  F016         	goto	u4871
  8229  002CD6  EF6F  F016         	goto	u4870
  8230  002CDA                     u4871:
  8231  002CDA  EF8C  F016         	goto	l4021
  8232  002CDE                     u4870:
  8233  002CDE  0EF7               	movlw	247
  8234  002CE0  6E0A               	movwf	??_atoi^0,c
  8235  002CE2  0EFF               	movlw	255
  8236  002CE4  6E0B               	movwf	(??_atoi+1)^0,c
  8237  002CE6  C008  FFF6         	movff	atoi@s,tblptrl
  8238  002CEA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8239  002CEE                     	if	0	;tblptru may be non-zero
  8240  002CEE                     	endif
  8241  002CEE                     	if	0	;tblptru may be non-zero
  8242  002CEE                     	endif
  8243  002CEE  0008               	tblrd		*
  8244  002CF0  50F5               	movf	tablat,w,c
  8245  002CF2  6E0C               	movwf	(??_atoi+2)^0,c
  8246  002CF4  6A0D               	clrf	(??_atoi+3)^0,c
  8247  002CF6  500A               	movf	??_atoi^0,w,c
  8248  002CF8  260C               	addwf	(??_atoi+2)^0,f,c
  8249  002CFA  500B               	movf	(??_atoi+1)^0,w,c
  8250  002CFC  220D               	addwfc	(??_atoi+3)^0,f,c
  8251  002CFE  500D               	movf	(??_atoi+3)^0,w,c
  8252  002D00  E109               	bnz	u4880
  8253  002D02  0E05               	movlw	5
  8254  002D04  5C0C               	subwf	(??_atoi+2)^0,w,c
  8255  002D06  A0D8               	btfss	status,0,c
  8256  002D08  EF88  F016         	goto	u4881
  8257  002D0C  EF8A  F016         	goto	u4880
  8258  002D10                     u4881:
  8259  002D10  EF8C  F016         	goto	l4021
  8260  002D14                     u4880:
  8261  002D14  0E00               	movlw	0
  8262  002D16  6E14               	movwf	_atoi$1012^0,c
  8263  002D18                     l4021:
  8264  002D18  C014  F010         	movff	_atoi$1012,_atoi$1011
  8265  002D1C  6A11               	clrf	(_atoi$1011+1)^0,c
  8266  002D1E  5010               	movf	_atoi$1011^0,w,c
  8267  002D20  1011               	iorwf	(_atoi$1011+1)^0,w,c
  8268  002D22  A4D8               	btfss	status,2,c
  8269  002D24  EF96  F016         	goto	u4891
  8270  002D28  EF98  F016         	goto	u4890
  8271  002D2C                     u4891:
  8272  002D2C  EF5D  F016         	goto	l4011
  8273  002D30                     u4890:
  8274  002D30  EFA2  F016         	goto	l4031
  8275  002D34                     l4027:
  8276  002D34  0E00               	movlw	0
  8277  002D36  6E0F               	movwf	(atoi@neg+1)^0,c
  8278  002D38  0E01               	movlw	1
  8279  002D3A  6E0E               	movwf	atoi@neg^0,c
  8280  002D3C                     l4029:
  8281  002D3C  4A08               	infsnz	atoi@s^0,f,c
  8282  002D3E  2A09               	incf	(atoi@s+1)^0,f,c
  8283  002D40  EFD7  F016         	goto	l4037
  8284  002D44                     l4031:
  8285  002D44  C008  FFF6         	movff	atoi@s,tblptrl
  8286  002D48  C009  FFF7         	movff	atoi@s+1,tblptrh
  8287  002D4C                     	if	0	;tblptru may be non-zero
  8288  002D4C                     	endif
  8289  002D4C                     	if	0	;tblptru may be non-zero
  8290  002D4C                     	endif
  8291  002D4C  0008               	tblrd		*
  8292  002D4E  50F5               	movf	tablat,w,c
  8293  002D50  6E0A               	movwf	??_atoi^0,c
  8294  002D52  6A0B               	clrf	(??_atoi+1)^0,c
  8295                           
  8296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8297                           ; Switch size 1, requested type "simple"
  8298                           ; Number of cases is 1, Range of values is 0 to 0
  8299                           ; switch strategies available:
  8300                           ; Name         Instructions Cycles
  8301                           ; simple_byte            4     3 (average)
  8302                           ;	Chosen strategy is simple_byte
  8303  002D54  500B               	movf	(??_atoi+1)^0,w,c
  8304  002D56  0A00               	xorlw	0	; case 0
  8305  002D58  B4D8               	btfsc	status,2,c
  8306  002D5A  EFB1  F016         	goto	l4487
  8307  002D5E  EFD7  F016         	goto	l4037
  8308  002D62                     l4487:
  8309                           
  8310                           ; Switch size 1, requested type "simple"
  8311                           ; Number of cases is 2, Range of values is 43 to 45
  8312                           ; switch strategies available:
  8313                           ; Name         Instructions Cycles
  8314                           ; simple_byte            7     4 (average)
  8315                           ;	Chosen strategy is simple_byte
  8316  002D62  500A               	movf	??_atoi^0,w,c
  8317  002D64  0A2B               	xorlw	43	; case 43
  8318  002D66  B4D8               	btfsc	status,2,c
  8319  002D68  EF9E  F016         	goto	l4029
  8320  002D6C  0A06               	xorlw	6	; case 45
  8321  002D6E  B4D8               	btfsc	status,2,c
  8322  002D70  EF9A  F016         	goto	l4027
  8323  002D74  EFD7  F016         	goto	l4037
  8324  002D78                     l4033:
  8325  002D78  C015  F001         	movff	atoi@n,___wmul@multiplier
  8326  002D7C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8327  002D80  0E00               	movlw	0
  8328  002D82  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8329  002D84  0E0A               	movlw	10
  8330  002D86  6E03               	movwf	___wmul@multiplicand^0,c
  8331  002D88  EC3B  F01F         	call	___wmul	;wreg free
  8332  002D8C  C008  FFF6         	movff	atoi@s,tblptrl
  8333  002D90  C009  FFF7         	movff	atoi@s+1,tblptrh
  8334  002D94                     	if	0	;tblptru may be non-zero
  8335  002D94                     	endif
  8336  002D94                     	if	0	;tblptru may be non-zero
  8337  002D94                     	endif
  8338  002D94  0008               	tblrd		*
  8339  002D96  50F5               	movf	tablat,w,c
  8340  002D98  5E01               	subwf	?___wmul^0,f,c
  8341  002D9A  0E00               	movlw	0
  8342  002D9C  5A02               	subwfb	(?___wmul+1)^0,f,c
  8343  002D9E  0E30               	movlw	48
  8344  002DA0  2401               	addwf	?___wmul^0,w,c
  8345  002DA2  6E15               	movwf	atoi@n^0,c
  8346  002DA4  0E00               	movlw	0
  8347  002DA6  2002               	addwfc	(?___wmul+1)^0,w,c
  8348  002DA8  6E16               	movwf	(atoi@n+1)^0,c
  8349  002DAA  EF9E  F016         	goto	l4029
  8350  002DAE                     l4037:
  8351  002DAE  0ED0               	movlw	208
  8352  002DB0  6E0A               	movwf	??_atoi^0,c
  8353  002DB2  0EFF               	movlw	255
  8354  002DB4  6E0B               	movwf	(??_atoi+1)^0,c
  8355  002DB6  C008  FFF6         	movff	atoi@s,tblptrl
  8356  002DBA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8357  002DBE                     	if	0	;tblptru may be non-zero
  8358  002DBE                     	endif
  8359  002DBE                     	if	0	;tblptru may be non-zero
  8360  002DBE                     	endif
  8361  002DBE  0008               	tblrd		*
  8362  002DC0  50F5               	movf	tablat,w,c
  8363  002DC2  6E0C               	movwf	(??_atoi+2)^0,c
  8364  002DC4  6A0D               	clrf	(??_atoi+3)^0,c
  8365  002DC6  500A               	movf	??_atoi^0,w,c
  8366  002DC8  260C               	addwf	(??_atoi+2)^0,f,c
  8367  002DCA  500B               	movf	(??_atoi+1)^0,w,c
  8368  002DCC  220D               	addwfc	(??_atoi+3)^0,f,c
  8369  002DCE  500D               	movf	(??_atoi+3)^0,w,c
  8370  002DD0  E10A               	bnz	u4900
  8371  002DD2  0E0A               	movlw	10
  8372  002DD4  5C0C               	subwf	(??_atoi+2)^0,w,c
  8373  002DD6  A0D8               	btfss	status,0,c
  8374  002DD8  EFF0  F016         	goto	u4901
  8375  002DDC  EFF3  F016         	goto	u4900
  8376  002DE0                     u4901:
  8377  002DE0  0E01               	movlw	1
  8378  002DE2  EFF4  F016         	goto	u4910
  8379  002DE6                     u4900:
  8380  002DE6  0E00               	movlw	0
  8381  002DE8                     u4910:
  8382  002DE8  6E12               	movwf	_atoi$1013^0,c
  8383  002DEA  6A13               	clrf	(_atoi$1013+1)^0,c
  8384  002DEC  5012               	movf	_atoi$1013^0,w,c
  8385  002DEE  1013               	iorwf	(_atoi$1013+1)^0,w,c
  8386  002DF0  A4D8               	btfss	status,2,c
  8387  002DF2  EFFD  F016         	goto	u4921
  8388  002DF6  EFFF  F016         	goto	u4920
  8389  002DFA                     u4921:
  8390  002DFA  EFBC  F016         	goto	l4033
  8391  002DFE                     u4920:
  8392  002DFE  500E               	movf	atoi@neg^0,w,c
  8393  002E00  100F               	iorwf	(atoi@neg+1)^0,w,c
  8394  002E02  A4D8               	btfss	status,2,c
  8395  002E04  EF06  F017         	goto	u4931
  8396  002E08  EF08  F017         	goto	u4930
  8397  002E0C                     u4931:
  8398  002E0C  EF16  F017         	goto	l1038
  8399  002E10                     u4930:
  8400  002E10  C015  F00A         	movff	atoi@n,??_atoi
  8401  002E14  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8402  002E18  1E0A               	comf	??_atoi^0,f,c
  8403  002E1A  1E0B               	comf	(??_atoi+1)^0,f,c
  8404  002E1C  4A0A               	infsnz	??_atoi^0,f,c
  8405  002E1E  2A0B               	incf	(??_atoi+1)^0,f,c
  8406  002E20  C00A  F008         	movff	??_atoi,?_atoi
  8407  002E24  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8408  002E28  EF1A  F017         	goto	l1041
  8409  002E2C                     l1038:
  8410  002E2C  C015  F008         	movff	atoi@n,?_atoi
  8411  002E30  C016  F009         	movff	atoi@n+1,?_atoi+1
  8412  002E34                     l1041:
  8413  002E34  0012               	return		;funcret
  8414  002E36                     __end_of_atoi:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function _isspace *****************
  8418 ;; Defined at:
  8419 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  c               2    0[COMRAM] int 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  2    0[COMRAM] int 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8433 ;;      Params:         2       0       0       0       0       0       0       0       0
  8434 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8435 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8436 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8437 ;;Total ram usage:        7 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_atoi
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text30
  8447  003C02                     __ptext30:
  8448                           	callstack 0
  8449  003C02                     _isspace:
  8450                           	callstack 26
  8451  003C02  0E01               	movlw	1
  8452  003C04  6E07               	movwf	_isspace$1042^0,c
  8453  003C06  0E20               	movlw	32
  8454  003C08  1801               	xorwf	isspace@c^0,w,c
  8455  003C0A  1002               	iorwf	(isspace@c+1)^0,w,c
  8456  003C0C  B4D8               	btfsc	status,2,c
  8457  003C0E  EF0B  F01E         	goto	u4201
  8458  003C12  EF0D  F01E         	goto	u4200
  8459  003C16                     u4201:
  8460  003C16  EF26  F01E         	goto	l3645
  8461  003C1A                     u4200:
  8462  003C1A  0EF7               	movlw	247
  8463  003C1C  6E03               	movwf	??_isspace^0,c
  8464  003C1E  0EFF               	movlw	255
  8465  003C20  6E04               	movwf	(??_isspace+1)^0,c
  8466  003C22  C001  F005         	movff	isspace@c,??_isspace+2
  8467  003C26  C002  F006         	movff	isspace@c+1,??_isspace+3
  8468  003C2A  5003               	movf	??_isspace^0,w,c
  8469  003C2C  2605               	addwf	(??_isspace+2)^0,f,c
  8470  003C2E  5004               	movf	(??_isspace+1)^0,w,c
  8471  003C30  2206               	addwfc	(??_isspace+3)^0,f,c
  8472  003C32  5006               	movf	(??_isspace+3)^0,w,c
  8473  003C34  E109               	bnz	u4210
  8474  003C36  0E05               	movlw	5
  8475  003C38  5C05               	subwf	(??_isspace+2)^0,w,c
  8476  003C3A  A0D8               	btfss	status,0,c
  8477  003C3C  EF22  F01E         	goto	u4211
  8478  003C40  EF24  F01E         	goto	u4210
  8479  003C44                     u4211:
  8480  003C44  EF26  F01E         	goto	l3645
  8481  003C48                     u4210:
  8482  003C48  0E00               	movlw	0
  8483  003C4A  6E07               	movwf	_isspace$1042^0,c
  8484  003C4C                     l3645:
  8485  003C4C  C007  F001         	movff	_isspace$1042,?_isspace
  8486  003C50  6A02               	clrf	(?_isspace+1)^0,c
  8487  003C52  0012               	return		;funcret
  8488  003C54                     __end_of_isspace:
  8489                           	callstack 0
  8490                           
  8491 ;; *************** function _isdigit *****************
  8492 ;; Defined at:
  8493 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  c               2    0[COMRAM] int 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2    0[COMRAM] int 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8507 ;;      Params:         2       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        6 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_vfpfcnvrt
  8517 ;;		_atoi
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text31
  8522  003DD4                     __ptext31:
  8523                           	callstack 0
  8524  003DD4                     _isdigit:
  8525                           	callstack 27
  8526  003DD4  0ED0               	movlw	208
  8527  003DD6  6E03               	movwf	??_isdigit^0,c
  8528  003DD8  0EFF               	movlw	255
  8529  003DDA  6E04               	movwf	(??_isdigit+1)^0,c
  8530  003DDC  C001  F005         	movff	isdigit@c,??_isdigit+2
  8531  003DE0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8532  003DE4  5003               	movf	??_isdigit^0,w,c
  8533  003DE6  2605               	addwf	(??_isdigit+2)^0,f,c
  8534  003DE8  5004               	movf	(??_isdigit+1)^0,w,c
  8535  003DEA  2206               	addwfc	(??_isdigit+3)^0,f,c
  8536  003DEC  5006               	movf	(??_isdigit+3)^0,w,c
  8537  003DEE  E10A               	bnz	u4180
  8538  003DF0  0E0A               	movlw	10
  8539  003DF2  5C05               	subwf	(??_isdigit+2)^0,w,c
  8540  003DF4  A0D8               	btfss	status,0,c
  8541  003DF6  EFFF  F01E         	goto	u4181
  8542  003DFA  EF02  F01F         	goto	u4180
  8543  003DFE                     u4181:
  8544  003DFE  0E01               	movlw	1
  8545  003E00  EF03  F01F         	goto	u4190
  8546  003E04                     u4180:
  8547  003E04  0E00               	movlw	0
  8548  003E06                     u4190:
  8549  003E06  6E01               	movwf	?_isdigit^0,c
  8550  003E08  6A02               	clrf	(?_isdigit+1)^0,c
  8551  003E0A  0012               	return		;funcret
  8552  003E0C                     __end_of_isdigit:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function ___wmul *****************
  8556 ;; Defined at:
  8557 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  multiplier      2    0[COMRAM] unsigned int 
  8560 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  product         2    4[COMRAM] unsigned int 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  2    0[COMRAM] unsigned int 
  8565 ;; Registers used:
  8566 ;;		wreg, status,2, status,0, prodl, prodh
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8572 ;;      Params:         4       0       0       0       0       0       0       0       0
  8573 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8575 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8576 ;;Total ram usage:        6 bytes
  8577 ;; Hardware stack levels used: 1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_atoi
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text32
  8586  003E76                     __ptext32:
  8587                           	callstack 0
  8588  003E76                     ___wmul:
  8589                           	callstack 26
  8590  003E76  5001               	movf	___wmul@multiplier^0,w,c
  8591  003E78  0203               	mulwf	___wmul@multiplicand^0,c
  8592  003E7A  CFF3 F005          	movff	prodl,___wmul@product
  8593  003E7E  CFF4 F006          	movff	prodh,___wmul@product+1
  8594  003E82  5001               	movf	___wmul@multiplier^0,w,c
  8595  003E84  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8596  003E86  50F3               	movf	243,w,c
  8597  003E88  2606               	addwf	(___wmul@product+1)^0,f,c
  8598  003E8A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8599  003E8C  0203               	mulwf	___wmul@multiplicand^0,c
  8600  003E8E  50F3               	movf	243,w,c
  8601  003E90  2606               	addwf	(___wmul@product+1)^0,f,c
  8602  003E92  C005  F001         	movff	___wmul@product,?___wmul
  8603  003E96  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8604  003E9A  0012               	return		;funcret
  8605  003E9C                     __end_of___wmul:
  8606                           	callstack 0
  8607                           
  8608 ;; *************** function ___xxtofl *****************
  8609 ;; Defined at:
  8610 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  sign            1    wreg     unsigned char 
  8613 ;;  val             4    0[COMRAM] long 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  sign            1    8[COMRAM] unsigned char 
  8616 ;;  arg             4   10[COMRAM] unsigned long 
  8617 ;;  exp             1    9[COMRAM] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  4    0[COMRAM] unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8627 ;;      Params:         4       0       0       0       0       0       0       0       0
  8628 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8629 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8630 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8631 ;;Total ram usage:       14 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_main
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text33
  8641  002AF2                     __ptext33:
  8642                           	callstack 0
  8643  002AF2                     ___xxtofl:
  8644                           	callstack 30
  8645                           
  8646                           ;incstack = 0
  8647                           ;___xxtofl@sign stored from wreg
  8648  002AF2  6E09               	movwf	___xxtofl@sign^0,c
  8649  002AF4  5009               	movf	___xxtofl@sign^0,w,c
  8650  002AF6  B4D8               	btfsc	status,2,c
  8651  002AF8  EF80  F015         	goto	u5241
  8652  002AFC  EF82  F015         	goto	u5240
  8653  002B00                     u5241:
  8654  002B00  EFA4  F015         	goto	l778
  8655  002B04                     u5240:
  8656  002B04  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8657  002B06  EF89  F015         	goto	u5250
  8658  002B0A  EF87  F015         	goto	u5251
  8659  002B0E                     u5251:
  8660  002B0E  EFA4  F015         	goto	l778
  8661  002B12                     u5250:
  8662  002B12  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8663  002B16  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8664  002B1A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8665  002B1E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8666  002B22  1E05               	comf	??___xxtofl^0,f,c
  8667  002B24  1E06               	comf	(??___xxtofl+1)^0,f,c
  8668  002B26  1E07               	comf	(??___xxtofl+2)^0,f,c
  8669  002B28  1E08               	comf	(??___xxtofl+3)^0,f,c
  8670  002B2A  2A05               	incf	??___xxtofl^0,f,c
  8671  002B2C  0E00               	movlw	0
  8672  002B2E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8673  002B30  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8674  002B32  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8675  002B34  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8676  002B38  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8677  002B3C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8678  002B40  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8679  002B44  EFAC  F015         	goto	l4359
  8680  002B48                     l778:
  8681  002B48  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8682  002B4C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8683  002B50  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8684  002B54  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8685  002B58                     l4359:
  8686  002B58  5001               	movf	___xxtofl@val^0,w,c
  8687  002B5A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8688  002B5C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8689  002B5E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8690  002B60  A4D8               	btfss	status,2,c
  8691  002B62  EFB5  F015         	goto	u5261
  8692  002B66  EFB7  F015         	goto	u5260
  8693  002B6A                     u5261:
  8694  002B6A  EFC1  F015         	goto	l4365
  8695  002B6E                     u5260:
  8696  002B6E  0E00               	movlw	0
  8697  002B70  6E01               	movwf	?___xxtofl^0,c
  8698  002B72  0E00               	movlw	0
  8699  002B74  6E02               	movwf	(?___xxtofl+1)^0,c
  8700  002B76  0E00               	movlw	0
  8701  002B78  6E03               	movwf	(?___xxtofl+2)^0,c
  8702  002B7A  0E00               	movlw	0
  8703  002B7C  6E04               	movwf	(?___xxtofl+3)^0,c
  8704  002B7E  EF52  F016         	goto	l781
  8705  002B82                     l4365:
  8706  002B82  0E96               	movlw	150
  8707  002B84  6E0A               	movwf	___xxtofl@exp^0,c
  8708  002B86  EFCB  F015         	goto	l4369
  8709  002B8A                     l4367:
  8710  002B8A  2A0A               	incf	___xxtofl@exp^0,f,c
  8711  002B8C  90D8               	bcf	status,0,c
  8712  002B8E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8713  002B90  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8714  002B92  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8715  002B94  320B               	rrcf	___xxtofl@arg^0,f,c
  8716  002B96                     l4369:
  8717  002B96  0E00               	movlw	0
  8718  002B98  140B               	andwf	___xxtofl@arg^0,w,c
  8719  002B9A  6E05               	movwf	??___xxtofl^0,c
  8720  002B9C  0E00               	movlw	0
  8721  002B9E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8722  002BA0  6E06               	movwf	(??___xxtofl+1)^0,c
  8723  002BA2  0E00               	movlw	0
  8724  002BA4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8725  002BA6  6E07               	movwf	(??___xxtofl+2)^0,c
  8726  002BA8  0EFE               	movlw	254
  8727  002BAA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8728  002BAC  6E08               	movwf	(??___xxtofl+3)^0,c
  8729  002BAE  5005               	movf	??___xxtofl^0,w,c
  8730  002BB0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8731  002BB2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8732  002BB4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8733  002BB6  A4D8               	btfss	status,2,c
  8734  002BB8  EFE0  F015         	goto	u5271
  8735  002BBC  EFE2  F015         	goto	u5270
  8736  002BC0                     u5271:
  8737  002BC0  EFC5  F015         	goto	l4367
  8738  002BC4                     u5270:
  8739  002BC4  EFF0  F015         	goto	l785
  8740  002BC8                     l4371:
  8741  002BC8  2A0A               	incf	___xxtofl@exp^0,f,c
  8742  002BCA  0E01               	movlw	1
  8743  002BCC  260B               	addwf	___xxtofl@arg^0,f,c
  8744  002BCE  0E00               	movlw	0
  8745  002BD0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8746  002BD2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8747  002BD4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8748  002BD6  90D8               	bcf	status,0,c
  8749  002BD8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8750  002BDA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8751  002BDC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8752  002BDE  320B               	rrcf	___xxtofl@arg^0,f,c
  8753  002BE0                     l785:
  8754  002BE0  0E00               	movlw	0
  8755  002BE2  140B               	andwf	___xxtofl@arg^0,w,c
  8756  002BE4  6E05               	movwf	??___xxtofl^0,c
  8757  002BE6  0E00               	movlw	0
  8758  002BE8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8759  002BEA  6E06               	movwf	(??___xxtofl+1)^0,c
  8760  002BEC  0E00               	movlw	0
  8761  002BEE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8762  002BF0  6E07               	movwf	(??___xxtofl+2)^0,c
  8763  002BF2  0EFF               	movlw	255
  8764  002BF4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8765  002BF6  6E08               	movwf	(??___xxtofl+3)^0,c
  8766  002BF8  5005               	movf	??___xxtofl^0,w,c
  8767  002BFA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8768  002BFC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8769  002BFE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8770  002C00  A4D8               	btfss	status,2,c
  8771  002C02  EF05  F016         	goto	u5281
  8772  002C06  EF07  F016         	goto	u5280
  8773  002C0A                     u5281:
  8774  002C0A  EFE4  F015         	goto	l4371
  8775  002C0E                     u5280:
  8776  002C0E  EF0F  F016         	goto	l4379
  8777  002C12                     l4377:
  8778  002C12  060A               	decf	___xxtofl@exp^0,f,c
  8779  002C14  90D8               	bcf	status,0,c
  8780  002C16  360B               	rlcf	___xxtofl@arg^0,f,c
  8781  002C18  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8782  002C1A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8783  002C1C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8784  002C1E                     l4379:
  8785  002C1E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8786  002C20  EF14  F016         	goto	u5291
  8787  002C24  EF16  F016         	goto	u5290
  8788  002C28                     u5291:
  8789  002C28  EF1E  F016         	goto	l792
  8790  002C2C                     u5290:
  8791  002C2C  0E02               	movlw	2
  8792  002C2E  600A               	cpfslt	___xxtofl@exp^0,c
  8793  002C30  EF1C  F016         	goto	u5301
  8794  002C34  EF1E  F016         	goto	u5300
  8795  002C38                     u5301:
  8796  002C38  EF09  F016         	goto	l4377
  8797  002C3C                     u5300:
  8798  002C3C                     l792:
  8799  002C3C  B00A               	btfsc	___xxtofl@exp^0,0,c
  8800  002C3E  EF23  F016         	goto	u5311
  8801  002C42  EF25  F016         	goto	u5310
  8802  002C46                     u5311:
  8803  002C46  EF26  F016         	goto	l4385
  8804  002C4A                     u5310:
  8805  002C4A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8806  002C4C                     l4385:
  8807  002C4C  90D8               	bcf	status,0,c
  8808  002C4E  320A               	rrcf	___xxtofl@exp^0,f,c
  8809  002C50  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8810  002C54  6A06               	clrf	(??___xxtofl+1)^0,c
  8811  002C56  6A07               	clrf	(??___xxtofl+2)^0,c
  8812  002C58  6A08               	clrf	(??___xxtofl+3)^0,c
  8813  002C5A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8814  002C5E  6A07               	clrf	(??___xxtofl+2)^0,c
  8815  002C60  6A06               	clrf	(??___xxtofl+1)^0,c
  8816  002C62  6A05               	clrf	??___xxtofl^0,c
  8817  002C64  5005               	movf	??___xxtofl^0,w,c
  8818  002C66  120B               	iorwf	___xxtofl@arg^0,f,c
  8819  002C68  5006               	movf	(??___xxtofl+1)^0,w,c
  8820  002C6A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8821  002C6C  5007               	movf	(??___xxtofl+2)^0,w,c
  8822  002C6E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8823  002C70  5008               	movf	(??___xxtofl+3)^0,w,c
  8824  002C72  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8825  002C74  5009               	movf	___xxtofl@sign^0,w,c
  8826  002C76  B4D8               	btfsc	status,2,c
  8827  002C78  EF40  F016         	goto	u5321
  8828  002C7C  EF42  F016         	goto	u5320
  8829  002C80                     u5321:
  8830  002C80  EF4A  F016         	goto	l4395
  8831  002C84                     u5320:
  8832  002C84  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8833  002C86  EF49  F016         	goto	u5330
  8834  002C8A  EF47  F016         	goto	u5331
  8835  002C8E                     u5331:
  8836  002C8E  EF4A  F016         	goto	l4395
  8837  002C92                     u5330:
  8838  002C92  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8839  002C94                     l4395:
  8840  002C94  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8841  002C98  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8842  002C9C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8843  002CA0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8844  002CA4                     l781:
  8845  002CA4  0012               	return		;funcret
  8846  002CA6                     __end_of___xxtofl:
  8847                           	callstack 0
  8848                           
  8849 ;; *************** function _Lcd_Write_String *****************
  8850 ;; Defined at:
  8851 ;;		line 104 in file "lcd.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  a               2    4[COMRAM] PTR const unsigned char 
  8854 ;;		 -> buffer(20), 
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;  i               2    6[COMRAM] int 
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      void 
  8859 ;; Registers used:
  8860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8866 ;;      Params:         2       0       0       0       0       0       0       0       0
  8867 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8869 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8870 ;;Total ram usage:        4 bytes
  8871 ;; Hardware stack levels used: 1
  8872 ;; Hardware stack levels required when called: 2
  8873 ;; This function calls:
  8874 ;;		_Lcd_Write_Char
  8875 ;; This function is called by:
  8876 ;;		_main
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           	psect	text34
  8881  003D24                     __ptext34:
  8882                           	callstack 0
  8883  003D24                     _Lcd_Write_String:
  8884                           	callstack 28
  8885  003D24                     
  8886                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  8887  003D24  0E00               	movlw	0
  8888  003D26  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  8889  003D28  0E00               	movlw	0
  8890  003D2A  6E07               	movwf	Lcd_Write_String@i^0,c
  8891  003D2C  EFA3  F01E         	goto	l4351
  8892  003D30                     l4347:
  8893                           
  8894                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  8895  003D30  5007               	movf	Lcd_Write_String@i^0,w,c
  8896  003D32  2405               	addwf	Lcd_Write_String@a^0,w,c
  8897  003D34  6ED9               	movwf	fsr2l,c
  8898  003D36  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  8899  003D38  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8900  003D3A  6EDA               	movwf	fsr2h,c
  8901  003D3C  50DF               	movf	indf2,w,c
  8902  003D3E  EC21  F01F         	call	_Lcd_Write_Char
  8903  003D42  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  8904  003D44  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  8905  003D46                     l4351:
  8906  003D46  5007               	movf	Lcd_Write_String@i^0,w,c
  8907  003D48  2405               	addwf	Lcd_Write_String@a^0,w,c
  8908  003D4A  6ED9               	movwf	fsr2l,c
  8909  003D4C  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  8910  003D4E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8911  003D50  6EDA               	movwf	fsr2h,c
  8912  003D52  50DF               	movf	indf2,w,c
  8913  003D54  A4D8               	btfss	status,2,c
  8914  003D56  EFAF  F01E         	goto	u5231
  8915  003D5A  EFB1  F01E         	goto	u5230
  8916  003D5E                     u5231:
  8917  003D5E  EF98  F01E         	goto	l4347
  8918  003D62                     u5230:
  8919  003D62  0012               	return		;funcret
  8920  003D64                     __end_of_Lcd_Write_String:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _Lcd_Write_Char *****************
  8924 ;; Defined at:
  8925 ;;		line 88 in file "lcd.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  a               1    wreg     unsigned char 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  a               1    3[COMRAM] unsigned char 
  8930 ;;  y               1    2[COMRAM] unsigned char 
  8931 ;;  temp            1    1[COMRAM] unsigned char 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0
  8942 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8944 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8945 ;;Total ram usage:        3 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 1
  8948 ;; This function calls:
  8949 ;;		_Lcd_Port
  8950 ;; This function is called by:
  8951 ;;		_Lcd_Write_String
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text35
  8956  003E42                     __ptext35:
  8957                           	callstack 0
  8958  003E42                     _Lcd_Write_Char:
  8959                           	callstack 28
  8960                           
  8961                           ;incstack = 0
  8962                           ;Lcd_Write_Char@a stored from wreg
  8963  003E42  6E04               	movwf	Lcd_Write_Char@a^0,c
  8964  003E44                     
  8965                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  8966  003E44  5004               	movf	Lcd_Write_Char@a^0,w,c
  8967  003E46  0B0F               	andlw	15
  8968  003E48  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8969                           
  8970                           ;lcd.c: 92:     y = a&0xF0;
  8971  003E4A  5004               	movf	Lcd_Write_Char@a^0,w,c
  8972  003E4C  0BF0               	andlw	240
  8973  003E4E  6E03               	movwf	Lcd_Write_Char@y^0,c
  8974  003E50                     
  8975                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  8976  003E50  848C               	bsf	140,2,c	;volatile
  8977  003E52                     
  8978                           ;lcd.c: 94:     Lcd_Port(y>>4);
  8979  003E52  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8980  003E54  0B0F               	andlw	15
  8981  003E56  ECAA  F01D         	call	_Lcd_Port
  8982  003E5A                     
  8983                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  8984  003E5A  868C               	bsf	140,3,c	;volatile
  8985  003E5C                     
  8986                           ;lcd.c: 96:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  8987  003E5C  0EA0               	movlw	160
  8988  003E5E                     u5367:
  8989  003E5E  2EE8               	decfsz	wreg,f,c
  8990  003E60  D7FE               	bra	u5367
  8991  003E62                     
  8992                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  8993  003E62  968C               	bcf	140,3,c	;volatile
  8994  003E64                     
  8995                           ;lcd.c: 98:     Lcd_Port(temp);
  8996  003E64  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8997  003E66  ECAA  F01D         	call	_Lcd_Port
  8998  003E6A                     
  8999                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  9000  003E6A  868C               	bsf	140,3,c	;volatile
  9001  003E6C                     
  9002                           ;lcd.c: 100:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  9003  003E6C  0EA0               	movlw	160
  9004  003E6E                     u5377:
  9005  003E6E  2EE8               	decfsz	wreg,f,c
  9006  003E70  D7FE               	bra	u5377
  9007  003E72                     
  9008                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  9009  003E72  968C               	bcf	140,3,c	;volatile
  9010  003E74  0012               	return		;funcret
  9011  003E76                     __end_of_Lcd_Write_Char:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _Lcd_Set_Cursor *****************
  9015 ;; Defined at:
  9016 ;;		line 26 in file "lcd.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  a               1    wreg     unsigned char 
  9019 ;;  b               1    3[COMRAM] unsigned char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  a               1    4[COMRAM] unsigned char 
  9022 ;;  temp            1    7[COMRAM] unsigned char 
  9023 ;;  y               1    6[COMRAM] unsigned char 
  9024 ;;  z               1    5[COMRAM] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9034 ;;      Params:         1       0       0       0       0       0       0       0       0
  9035 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9037 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9038 ;;Total ram usage:        5 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 2
  9041 ;; This function calls:
  9042 ;;		_Lcd_Cmd
  9043 ;; This function is called by:
  9044 ;;		_main
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text36
  9049  00345A                     __ptext36:
  9050                           	callstack 0
  9051  00345A                     _Lcd_Set_Cursor:
  9052                           	callstack 28
  9053                           
  9054                           ;incstack = 0
  9055                           ;Lcd_Set_Cursor@a stored from wreg
  9056  00345A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  9057  00345C                     
  9058                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  9059  00345C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  9060  00345E  A4D8               	btfss	status,2,c
  9061  003460  EF34  F01A         	goto	u5191
  9062  003464  EF36  F01A         	goto	u5190
  9063  003468                     u5191:
  9064  003468  EF47  F01A         	goto	l4309
  9065  00346C                     u5190:
  9066  00346C                     
  9067                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  9068  00346C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9069  00346E  0F7F               	addlw	127
  9070  003470  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9071                           
  9072                           ;lcd.c: 32:         z = temp>>4;
  9073  003472  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9074  003474  0B0F               	andlw	15
  9075  003476  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9076                           
  9077                           ;lcd.c: 33:         y = temp & 0x0F;
  9078  003478  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9079  00347A  0B0F               	andlw	15
  9080  00347C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9081  00347E                     
  9082                           ;lcd.c: 34:         Lcd_Cmd(z);
  9083  00347E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9084  003480  EC5F  F01F         	call	_Lcd_Cmd
  9085  003484                     
  9086                           ;lcd.c: 35:         Lcd_Cmd(y);
  9087  003484  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9088  003486  EC5F  F01F         	call	_Lcd_Cmd
  9089                           
  9090                           ;lcd.c: 36:     }
  9091  00348A  EF95  F01A         	goto	l96
  9092  00348E                     l4309:
  9093  00348E  0E02               	movlw	2
  9094  003490  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9095  003492  A4D8               	btfss	status,2,c
  9096  003494  EF4E  F01A         	goto	u5201
  9097  003498  EF50  F01A         	goto	u5200
  9098  00349C                     u5201:
  9099  00349C  EF61  F01A         	goto	l4317
  9100  0034A0                     u5200:
  9101  0034A0                     
  9102                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  9103  0034A0  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9104  0034A2  0FBF               	addlw	191
  9105  0034A4  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9106                           
  9107                           ;lcd.c: 40:         z = temp>>4;
  9108  0034A6  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9109  0034A8  0B0F               	andlw	15
  9110  0034AA  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9111                           
  9112                           ;lcd.c: 41:         y = temp & 0x0F;
  9113  0034AC  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9114  0034AE  0B0F               	andlw	15
  9115  0034B0  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9116  0034B2                     
  9117                           ;lcd.c: 42:         Lcd_Cmd(z);
  9118  0034B2  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9119  0034B4  EC5F  F01F         	call	_Lcd_Cmd
  9120  0034B8                     
  9121                           ;lcd.c: 43:         Lcd_Cmd(y);
  9122  0034B8  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9123  0034BA  EC5F  F01F         	call	_Lcd_Cmd
  9124                           
  9125                           ;lcd.c: 44:     }
  9126  0034BE  EF95  F01A         	goto	l96
  9127  0034C2                     l4317:
  9128  0034C2  0E03               	movlw	3
  9129  0034C4  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9130  0034C6  A4D8               	btfss	status,2,c
  9131  0034C8  EF68  F01A         	goto	u5211
  9132  0034CC  EF6A  F01A         	goto	u5210
  9133  0034D0                     u5211:
  9134  0034D0  EF7B  F01A         	goto	l4325
  9135  0034D4                     u5210:
  9136  0034D4                     
  9137                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  9138  0034D4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9139  0034D6  0F93               	addlw	147
  9140  0034D8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9141                           
  9142                           ;lcd.c: 48:         z = temp>>4;
  9143  0034DA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9144  0034DC  0B0F               	andlw	15
  9145  0034DE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9146                           
  9147                           ;lcd.c: 49:         y = temp & 0x0F;
  9148  0034E0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9149  0034E2  0B0F               	andlw	15
  9150  0034E4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9151  0034E6                     
  9152                           ;lcd.c: 50:         Lcd_Cmd(z);
  9153  0034E6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9154  0034E8  EC5F  F01F         	call	_Lcd_Cmd
  9155  0034EC                     
  9156                           ;lcd.c: 51:         Lcd_Cmd(y);
  9157  0034EC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9158  0034EE  EC5F  F01F         	call	_Lcd_Cmd
  9159                           
  9160                           ;lcd.c: 52:     }
  9161  0034F2  EF95  F01A         	goto	l96
  9162  0034F6                     l4325:
  9163  0034F6  0E04               	movlw	4
  9164  0034F8  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9165  0034FA  A4D8               	btfss	status,2,c
  9166  0034FC  EF82  F01A         	goto	u5221
  9167  003500  EF84  F01A         	goto	u5220
  9168  003504                     u5221:
  9169  003504  EF95  F01A         	goto	l92
  9170  003508                     u5220:
  9171  003508                     
  9172                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  9173  003508  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9174  00350A  0FD3               	addlw	211
  9175  00350C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9176                           
  9177                           ;lcd.c: 56:         z = temp>>4;
  9178  00350E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9179  003510  0B0F               	andlw	15
  9180  003512  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9181                           
  9182                           ;lcd.c: 57:         y = temp & 0x0F;
  9183  003514  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9184  003516  0B0F               	andlw	15
  9185  003518  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9186  00351A                     
  9187                           ;lcd.c: 58:         Lcd_Cmd(z);
  9188  00351A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9189  00351C  EC5F  F01F         	call	_Lcd_Cmd
  9190  003520                     
  9191                           ;lcd.c: 59:         Lcd_Cmd(y);
  9192  003520  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9193  003522  EC5F  F01F         	call	_Lcd_Cmd
  9194  003526  EF95  F01A         	goto	l96
  9195  00352A                     l92:
  9196  00352A                     l96:
  9197  00352A  0012               	return		;funcret
  9198  00352C                     __end_of_Lcd_Set_Cursor:
  9199                           	callstack 0
  9200                           
  9201 ;; *************** function _Lcd_Init *****************
  9202 ;; Defined at:
  9203 ;;		line 63 in file "lcd.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;		None
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  1    wreg      void 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0
  9218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9220 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9221 ;;Total ram usage:        2 bytes
  9222 ;; Hardware stack levels used: 1
  9223 ;; Hardware stack levels required when called: 3
  9224 ;; This function calls:
  9225 ;;		_Lcd_Clear
  9226 ;;		_Lcd_Cmd
  9227 ;;		_Lcd_Port
  9228 ;; This function is called by:
  9229 ;;		_main
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text37
  9234  0039AA                     __ptext37:
  9235                           	callstack 0
  9236  0039AA                     _Lcd_Init:
  9237                           	callstack 27
  9238  0039AA                     
  9239                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  9240  0039AA  9495               	bcf	149,2,c	;volatile
  9241                           
  9242                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  9243  0039AC  9695               	bcf	149,3,c	;volatile
  9244                           
  9245                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  9246  0039AE  9895               	bcf	149,4,c	;volatile
  9247                           
  9248                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  9249  0039B0  9A95               	bcf	149,5,c	;volatile
  9250                           
  9251                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  9252  0039B2  9C95               	bcf	149,6,c	;volatile
  9253                           
  9254                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  9255  0039B4  9E95               	bcf	149,7,c	;volatile
  9256  0039B6                     
  9257                           ;lcd.c: 71:     Lcd_Port(0x00);
  9258  0039B6  0E00               	movlw	0
  9259  0039B8  ECAA  F01D         	call	_Lcd_Port
  9260  0039BC                     
  9261                           ;lcd.c: 72:     _delay((unsigned long)((20)*(48000000/4000.0)));
  9262  0039BC  0E02               	movlw	2
  9263  0039BE  6E05               	movwf	(??_Lcd_Init+1)^0,c
  9264  0039C0  0E38               	movlw	56
  9265  0039C2  6E04               	movwf	??_Lcd_Init^0,c
  9266  0039C4  0EAD               	movlw	173
  9267  0039C6                     u5387:
  9268  0039C6  2EE8               	decfsz	wreg,f,c
  9269  0039C8  D7FE               	bra	u5387
  9270  0039CA  2E04               	decfsz	??_Lcd_Init^0,f,c
  9271  0039CC  D7FC               	bra	u5387
  9272  0039CE  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  9273  0039D0  D7FA               	bra	u5387
  9274  0039D2  F000               	nop	
  9275  0039D4                     
  9276                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  9277  0039D4  0E03               	movlw	3
  9278  0039D6  EC5F  F01F         	call	_Lcd_Cmd
  9279  0039DA                     
  9280                           ;lcd.c: 74:     _delay((unsigned long)((5)*(48000000/4000.0)));
  9281  0039DA  0E4E               	movlw	78
  9282  0039DC  6E04               	movwf	??_Lcd_Init^0,c
  9283  0039DE  0EEB               	movlw	235
  9284  0039E0                     u5397:
  9285  0039E0  2EE8               	decfsz	wreg,f,c
  9286  0039E2  D7FE               	bra	u5397
  9287  0039E4  2E04               	decfsz	??_Lcd_Init^0,f,c
  9288  0039E6  D7FC               	bra	u5397
  9289  0039E8  F000               	nop	
  9290  0039EA                     
  9291                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  9292  0039EA  0E03               	movlw	3
  9293  0039EC  EC5F  F01F         	call	_Lcd_Cmd
  9294  0039F0                     
  9295                           ;lcd.c: 76:     _delay((unsigned long)((11)*(48000000/4000.0)));
  9296  0039F0  0EAC               	movlw	172
  9297  0039F2  6E04               	movwf	??_Lcd_Init^0,c
  9298  0039F4  0E6C               	movlw	108
  9299  0039F6                     u5407:
  9300  0039F6  2EE8               	decfsz	wreg,f,c
  9301  0039F8  D7FE               	bra	u5407
  9302  0039FA  2E04               	decfsz	??_Lcd_Init^0,f,c
  9303  0039FC  D7FC               	bra	u5407
  9304  0039FE  D000               	nop2	
  9305  003A00                     
  9306                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  9307  003A00  0E03               	movlw	3
  9308  003A02  EC5F  F01F         	call	_Lcd_Cmd
  9309  003A06                     
  9310                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  9311  003A06  0E02               	movlw	2
  9312  003A08  EC5F  F01F         	call	_Lcd_Cmd
  9313  003A0C                     
  9314                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  9315  003A0C  0E02               	movlw	2
  9316  003A0E  EC5F  F01F         	call	_Lcd_Cmd
  9317  003A12                     
  9318                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  9319  003A12  0E08               	movlw	8
  9320  003A14  EC5F  F01F         	call	_Lcd_Cmd
  9321  003A18                     
  9322                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  9323  003A18  0E00               	movlw	0
  9324  003A1A  EC5F  F01F         	call	_Lcd_Cmd
  9325  003A1E                     
  9326                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  9327  003A1E  0E0C               	movlw	12
  9328  003A20  EC5F  F01F         	call	_Lcd_Cmd
  9329  003A24                     
  9330                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  9331  003A24  0E00               	movlw	0
  9332  003A26  EC5F  F01F         	call	_Lcd_Cmd
  9333  003A2A                     
  9334                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  9335  003A2A  0E06               	movlw	6
  9336  003A2C  EC5F  F01F         	call	_Lcd_Cmd
  9337  003A30                     
  9338                           ;lcd.c: 85:     Lcd_Clear();
  9339  003A30  EC77  F01F         	call	_Lcd_Clear	;wreg free
  9340  003A34  0012               	return		;funcret
  9341  003A36                     __end_of_Lcd_Init:
  9342                           	callstack 0
  9343                           
  9344 ;; *************** function _Lcd_Clear *****************
  9345 ;; Defined at:
  9346 ;;		line 20 in file "lcd.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;		None
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9360 ;;      Params:         0       0       0       0       0       0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9364 ;;Total ram usage:        0 bytes
  9365 ;; Hardware stack levels used: 1
  9366 ;; Hardware stack levels required when called: 2
  9367 ;; This function calls:
  9368 ;;		_Lcd_Cmd
  9369 ;; This function is called by:
  9370 ;;		_Lcd_Init
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text38
  9375  003EEE                     __ptext38:
  9376                           	callstack 0
  9377  003EEE                     _Lcd_Clear:
  9378                           	callstack 27
  9379  003EEE                     
  9380                           ;lcd.c: 22:     Lcd_Cmd(0);
  9381  003EEE  0E00               	movlw	0
  9382  003EF0  EC5F  F01F         	call	_Lcd_Cmd
  9383                           
  9384                           ;lcd.c: 23:     Lcd_Cmd(1);
  9385  003EF4  0E01               	movlw	1
  9386  003EF6  EC5F  F01F         	call	_Lcd_Cmd
  9387  003EFA  0012               	return		;funcret
  9388  003EFC                     __end_of_Lcd_Clear:
  9389                           	callstack 0
  9390                           
  9391 ;; *************** function _Lcd_Cmd *****************
  9392 ;; Defined at:
  9393 ;;		line 11 in file "lcd.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  a               1    wreg     unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  a               1    2[COMRAM] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9409 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9410 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9411 ;;Total ram usage:        2 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; Hardware stack levels required when called: 1
  9414 ;; This function calls:
  9415 ;;		_Lcd_Port
  9416 ;; This function is called by:
  9417 ;;		_Lcd_Clear
  9418 ;;		_Lcd_Set_Cursor
  9419 ;;		_Lcd_Init
  9420 ;;		_Lcd_Shift_Right
  9421 ;;		_Lcd_Shift_Left
  9422 ;;		_Lcd_Blink
  9423 ;;		_Lcd_NoBlink
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text39
  9428  003EBE                     __ptext39:
  9429                           	callstack 0
  9430  003EBE                     _Lcd_Cmd:
  9431                           	callstack 28
  9432                           
  9433                           ;incstack = 0
  9434                           ;Lcd_Cmd@a stored from wreg
  9435  003EBE  6E03               	movwf	Lcd_Cmd@a^0,c
  9436  003EC0                     
  9437                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  9438  003EC0  948C               	bcf	140,2,c	;volatile
  9439  003EC2                     
  9440                           ;lcd.c: 14:     Lcd_Port(a);
  9441  003EC2  5003               	movf	Lcd_Cmd@a^0,w,c
  9442  003EC4  ECAA  F01D         	call	_Lcd_Port
  9443  003EC8                     
  9444                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  9445  003EC8  868C               	bsf	140,3,c	;volatile
  9446  003ECA                     
  9447                           ;lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
  9448  003ECA  0E3F               	movlw	63
  9449  003ECC  6E02               	movwf	??_Lcd_Cmd^0,c
  9450  003ECE  0E55               	movlw	85
  9451  003ED0                     u5417:
  9452  003ED0  2EE8               	decfsz	wreg,f,c
  9453  003ED2  D7FE               	bra	u5417
  9454  003ED4  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  9455  003ED6  D7FC               	bra	u5417
  9456  003ED8  F000               	nop	
  9457  003EDA                     
  9458                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  9459  003EDA  968C               	bcf	140,3,c	;volatile
  9460  003EDC  0012               	return		;funcret
  9461  003EDE                     __end_of_Lcd_Cmd:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _Lcd_Port *****************
  9465 ;; Defined at:
  9466 ;;		line 3 in file "lcd.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  a               1    wreg     unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  a               1    0[COMRAM] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0
  9481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9483 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9484 ;;Total ram usage:        1 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_Lcd_Cmd
  9490 ;;		_Lcd_Init
  9491 ;;		_Lcd_Write_Char
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text40
  9496  003B54                     __ptext40:
  9497                           	callstack 0
  9498  003B54                     _Lcd_Port:
  9499                           	callstack 28
  9500                           
  9501                           ;incstack = 0
  9502                           ;Lcd_Port@a stored from wreg
  9503  003B54  6E01               	movwf	Lcd_Port@a^0,c
  9504  003B56                     
  9505                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  9506  003B56  A001               	btfss	Lcd_Port@a^0,0,c
  9507  003B58  EFB0  F01D         	goto	u4221
  9508  003B5C  EFB2  F01D         	goto	u4220
  9509  003B60                     u4221:
  9510  003B60  EFB5  F01D         	goto	l65
  9511  003B64                     u4220:
  9512  003B64  888C               	bsf	140,4,c	;volatile
  9513  003B66  EFB6  F01D         	goto	l3653
  9514  003B6A                     l65:
  9515  003B6A  988C               	bcf	140,4,c	;volatile
  9516  003B6C                     l3653:
  9517                           
  9518                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  9519  003B6C  A201               	btfss	Lcd_Port@a^0,1,c
  9520  003B6E  EFBB  F01D         	goto	u4231
  9521  003B72  EFBD  F01D         	goto	u4230
  9522  003B76                     u4231:
  9523  003B76  EFC0  F01D         	goto	l69
  9524  003B7A                     u4230:
  9525  003B7A  8A8C               	bsf	140,5,c	;volatile
  9526  003B7C  EFC1  F01D         	goto	l3657
  9527  003B80                     l69:
  9528  003B80  9A8C               	bcf	140,5,c	;volatile
  9529  003B82                     l3657:
  9530                           
  9531                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  9532  003B82  A401               	btfss	Lcd_Port@a^0,2,c
  9533  003B84  EFC6  F01D         	goto	u4241
  9534  003B88  EFC8  F01D         	goto	u4240
  9535  003B8C                     u4241:
  9536  003B8C  EFCB  F01D         	goto	l73
  9537  003B90                     u4240:
  9538  003B90  8C8C               	bsf	140,6,c	;volatile
  9539  003B92  EFCC  F01D         	goto	l3661
  9540  003B96                     l73:
  9541  003B96  9C8C               	bcf	140,6,c	;volatile
  9542  003B98                     l3661:
  9543                           
  9544                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  9545  003B98  A601               	btfss	Lcd_Port@a^0,3,c
  9546  003B9A  EFD1  F01D         	goto	u4251
  9547  003B9E  EFD3  F01D         	goto	u4250
  9548  003BA2                     u4251:
  9549  003BA2  EFD6  F01D         	goto	l77
  9550  003BA6                     u4250:
  9551  003BA6  8E8C               	bsf	140,7,c	;volatile
  9552  003BA8  EFD7  F01D         	goto	l80
  9553  003BAC                     l77:
  9554  003BAC  9E8C               	bcf	140,7,c	;volatile
  9555  003BAE                     l80:
  9556  003BAE  0012               	return		;funcret
  9557  003BB0                     __end_of_Lcd_Port:
  9558                           	callstack 0
  9559                           
  9560 ;; *************** function _ADC_Read *****************
  9561 ;; Defined at:
  9562 ;;		line 18 in file "adc.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  ch              1    wreg     unsigned char 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  ch              1    2[COMRAM] unsigned char 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  2    0[COMRAM] unsigned int 
  9569 ;; Registers used:
  9570 ;;		wreg, status,2, status,0
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9576 ;;      Params:         2       0       0       0       0       0       0       0       0
  9577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9579 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9580 ;;Total ram usage:        3 bytes
  9581 ;; Hardware stack levels used: 1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_main
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text41
  9590  003C9A                     __ptext41:
  9591                           	callstack 0
  9592  003C9A                     _ADC_Read:
  9593                           	callstack 30
  9594                           
  9595                           ;incstack = 0
  9596                           ;ADC_Read@ch stored from wreg
  9597  003C9A  6E03               	movwf	ADC_Read@ch^0,c
  9598  003C9C                     
  9599                           ;adc.c: 18: unsigned int ADC_Read(unsigned char ch);adc.c: 19: {;adc.c: 20:     if(ch > 
      +                          13){
  9600  003C9C  0E0D               	movlw	13
  9601  003C9E  6403               	cpfsgt	ADC_Read@ch^0,c
  9602  003CA0  EF54  F01E         	goto	u5171
  9603  003CA4  EF56  F01E         	goto	u5170
  9604  003CA8                     u5171:
  9605  003CA8  EF5C  F01E         	goto	l4293
  9606  003CAC                     u5170:
  9607  003CAC                     
  9608                           ;adc.c: 21:         return 0;
  9609  003CAC  0E00               	movlw	0
  9610  003CAE  6E02               	movwf	(?_ADC_Read+1)^0,c
  9611  003CB0  0E00               	movlw	0
  9612  003CB2  6E01               	movwf	?_ADC_Read^0,c
  9613  003CB4  EF6F  F01E         	goto	l51
  9614  003CB8                     l4293:
  9615                           
  9616                           ;adc.c: 23:         ADCON0 = 0x00;
  9617  003CB8  0E00               	movlw	0
  9618  003CBA  6EC2               	movwf	194,c	;volatile
  9619  003CBC                     
  9620                           ;adc.c: 24:         ADCON0 = (ch << 2);
  9621  003CBC  4403               	rlncf	ADC_Read@ch^0,w,c
  9622  003CBE  46E8               	rlncf	wreg,f,c
  9623  003CC0  0BFC               	andlw	252
  9624  003CC2  6EC2               	movwf	194,c	;volatile
  9625  003CC4                     
  9626                           ;adc.c: 25:         ADCON0bits.ADON = 1;
  9627  003CC4  80C2               	bsf	194,0,c	;volatile
  9628  003CC6                     
  9629                           ;adc.c: 26:         ADCON0bits.GO_DONE = 1;
  9630  003CC6  82C2               	bsf	194,1,c	;volatile
  9631  003CC8                     l53:
  9632  003CC8  B2C2               	btfsc	194,1,c	;volatile
  9633  003CCA  EF69  F01E         	goto	u5181
  9634  003CCE  EF6B  F01E         	goto	u5180
  9635  003CD2                     u5181:
  9636  003CD2  EF64  F01E         	goto	l53
  9637  003CD6                     u5180:
  9638  003CD6                     
  9639                           ;adc.c: 28:         return ADRES;
  9640  003CD6  CFC3 F001          	movff	4035,?_ADC_Read	;volatile
  9641  003CDA  CFC4 F002          	movff	4036,?_ADC_Read+1	;volatile
  9642  003CDE                     l51:
  9643  003CDE  0012               	return		;funcret
  9644  003CE0                     __end_of_ADC_Read:
  9645                           	callstack 0
  9646                           
  9647 ;; *************** function _ADC_Init *****************
  9648 ;; Defined at:
  9649 ;;		line 11 in file "adc.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  p_ang           1    wreg     unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  p_ang           1    0[COMRAM] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0
  9664 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9666 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9667 ;;Total ram usage:        1 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_main
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text42
  9677  003EDE                     __ptext42:
  9678                           	callstack 0
  9679  003EDE                     _ADC_Init:
  9680                           	callstack 30
  9681                           
  9682                           ;incstack = 0
  9683                           ;ADC_Init@p_ang stored from wreg
  9684  003EDE  6E01               	movwf	ADC_Init@p_ang^0,c
  9685  003EE0                     
  9686                           ;adc.c: 11: void ADC_Init(unsigned char p_ang);adc.c: 12: {;adc.c: 13:     ADCON1 = p_an
      +                          g;
  9687  003EE0  C001  FFC1         	movff	ADC_Init@p_ang,4033	;volatile
  9688  003EE4                     
  9689                           ;adc.c: 14:     ADCON0 = 0x00;
  9690  003EE4  0E00               	movlw	0
  9691  003EE6  6EC2               	movwf	194,c	;volatile
  9692  003EE8                     
  9693                           ;adc.c: 15:     ADCON2 = 0x8F;
  9694  003EE8  0E8F               	movlw	143
  9695  003EEA  6EC0               	movwf	192,c	;volatile
  9696  003EEC  0012               	return		;funcret
  9697  003EEE                     __end_of_ADC_Init:
  9698                           	callstack 0
  9699                           
  9700                           	psect	rparam
  9701  0000                     
  9702                           	psect	idloc
  9703                           
  9704                           ;Config register IDLOC0 @ 0x200000
  9705                           ;	unspecified, using default values
  9706  200000                     	org	2097152
  9707  200000  FF                 	db	255
  9708                           
  9709                           ;Config register IDLOC1 @ 0x200001
  9710                           ;	unspecified, using default values
  9711  200001                     	org	2097153
  9712  200001  FF                 	db	255
  9713                           
  9714                           ;Config register IDLOC2 @ 0x200002
  9715                           ;	unspecified, using default values
  9716  200002                     	org	2097154
  9717  200002  FF                 	db	255
  9718                           
  9719                           ;Config register IDLOC3 @ 0x200003
  9720                           ;	unspecified, using default values
  9721  200003                     	org	2097155
  9722  200003  FF                 	db	255
  9723                           
  9724                           ;Config register IDLOC4 @ 0x200004
  9725                           ;	unspecified, using default values
  9726  200004                     	org	2097156
  9727  200004  FF                 	db	255
  9728                           
  9729                           ;Config register IDLOC5 @ 0x200005
  9730                           ;	unspecified, using default values
  9731  200005                     	org	2097157
  9732  200005  FF                 	db	255
  9733                           
  9734                           ;Config register IDLOC6 @ 0x200006
  9735                           ;	unspecified, using default values
  9736  200006                     	org	2097158
  9737  200006  FF                 	db	255
  9738                           
  9739                           ;Config register IDLOC7 @ 0x200007
  9740                           ;	unspecified, using default values
  9741  200007                     	org	2097159
  9742  200007  FF                 	db	255
  9743                           
  9744                           	psect	config
  9745                           
  9746                           ;Config register CONFIG1L @ 0x300000
  9747                           ;	PLL Prescaler Selection bits
  9748                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  9749                           ;	System Clock Postscaler Selection bits
  9750                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9751                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9752                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  9753  300000                     	org	3145728
  9754  300000  21                 	db	33
  9755                           
  9756                           ;Config register CONFIG1H @ 0x300001
  9757                           ;	Oscillator Selection bits
  9758                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  9759                           ;	Fail-Safe Clock Monitor Enable bit
  9760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9761                           ;	Internal/External Oscillator Switchover bit
  9762                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9763  300001                     	org	3145729
  9764  300001  0E                 	db	14
  9765                           
  9766                           ;Config register CONFIG2L @ 0x300002
  9767                           ;	Power-up Timer Enable bit
  9768                           ;	PWRT = OFF, PWRT disabled
  9769                           ;	Brown-out Reset Enable bits
  9770                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9771                           ;	Brown-out Reset Voltage bits
  9772                           ;	BORV = 3, Minimum setting 2.05V
  9773                           ;	USB Voltage Regulator Enable bit
  9774                           ;	VREGEN = OFF, USB voltage regulator disabled
  9775  300002                     	org	3145730
  9776  300002  19                 	db	25
  9777                           
  9778                           ;Config register CONFIG2H @ 0x300003
  9779                           ;	Watchdog Timer Enable bit
  9780                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9781                           ;	Watchdog Timer Postscale Select bits
  9782                           ;	WDTPS = 32768, 1:32768
  9783  300003                     	org	3145731
  9784  300003  1E                 	db	30
  9785                           
  9786                           ; Padding undefined space
  9787  300004                     	org	3145732
  9788  300004  FF                 	db	255
  9789                           
  9790                           ;Config register CONFIG3H @ 0x300005
  9791                           ;	CCP2 MUX bit
  9792                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9793                           ;	PORTB A/D Enable bit
  9794                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9795                           ;	Low-Power Timer 1 Oscillator Enable bit
  9796                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9797                           ;	MCLR Pin Enable bit
  9798                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9799  300005                     	org	3145733
  9800  300005  81                 	db	129
  9801                           
  9802                           ;Config register CONFIG4L @ 0x300006
  9803                           ;	Stack Full/Underflow Reset Enable bit
  9804                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9805                           ;	Single-Supply ICSP Enable bit
  9806                           ;	LVP = OFF, Single-Supply ICSP disabled
  9807                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9808                           ;	ICPRT = OFF, ICPORT disabled
  9809                           ;	Extended Instruction Set Enable bit
  9810                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9811                           ;	Background Debugger Enable bit
  9812                           ;	DEBUG = 0x1, unprogrammed default
  9813  300006                     	org	3145734
  9814  300006  81                 	db	129
  9815                           
  9816                           ; Padding undefined space
  9817  300007                     	org	3145735
  9818  300007  FF                 	db	255
  9819                           
  9820                           ;Config register CONFIG5L @ 0x300008
  9821                           ;	Code Protection bit
  9822                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9823                           ;	Code Protection bit
  9824                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9825                           ;	Code Protection bit
  9826                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9827                           ;	Code Protection bit
  9828                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9829  300008                     	org	3145736
  9830  300008  0F                 	db	15
  9831                           
  9832                           ;Config register CONFIG5H @ 0x300009
  9833                           ;	Boot Block Code Protection bit
  9834                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9835                           ;	Data EEPROM Code Protection bit
  9836                           ;	CPD = OFF, Data EEPROM is not code-protected
  9837  300009                     	org	3145737
  9838  300009  C0                 	db	192
  9839                           
  9840                           ;Config register CONFIG6L @ 0x30000A
  9841                           ;	Write Protection bit
  9842                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9843                           ;	Write Protection bit
  9844                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9845                           ;	Write Protection bit
  9846                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9847                           ;	Write Protection bit
  9848                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9849  30000A                     	org	3145738
  9850  30000A  0F                 	db	15
  9851                           
  9852                           ;Config register CONFIG6H @ 0x30000B
  9853                           ;	Configuration Register Write Protection bit
  9854                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9855                           ;	Boot Block Write Protection bit
  9856                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9857                           ;	Data EEPROM Write Protection bit
  9858                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9859  30000B                     	org	3145739
  9860  30000B  E0                 	db	224
  9861                           
  9862                           ;Config register CONFIG7L @ 0x30000C
  9863                           ;	Table Read Protection bit
  9864                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9865                           ;	Table Read Protection bit
  9866                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9867                           ;	Table Read Protection bit
  9868                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9869                           ;	Table Read Protection bit
  9870                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9871  30000C                     	org	3145740
  9872  30000C  0F                 	db	15
  9873                           
  9874                           ;Config register CONFIG7H @ 0x30000D
  9875                           ;	Boot Block Table Read Protection bit
  9876                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9877  30000D                     	org	3145741
  9878  30000D  40                 	db	64
  9879                           tosu	equ	0xFFF
  9880                           tosh	equ	0xFFE
  9881                           tosl	equ	0xFFD
  9882                           stkptr	equ	0xFFC
  9883                           pclatu	equ	0xFFB
  9884                           pclath	equ	0xFFA
  9885                           pcl	equ	0xFF9
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           indf0	equ	0xFEF
  9893                           postinc0	equ	0xFEE
  9894                           postdec0	equ	0xFED
  9895                           preinc0	equ	0xFEC
  9896                           plusw0	equ	0xFEB
  9897                           fsr0h	equ	0xFEA
  9898                           fsr0l	equ	0xFE9
  9899                           wreg	equ	0xFE8
  9900                           indf1	equ	0xFE7
  9901                           postinc1	equ	0xFE6
  9902                           postdec1	equ	0xFE5
  9903                           preinc1	equ	0xFE4
  9904                           plusw1	equ	0xFE3
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           bsr	equ	0xFE0
  9908                           indf2	equ	0xFDF
  9909                           postinc2	equ	0xFDE
  9910                           postdec2	equ	0xFDD
  9911                           preinc2	equ	0xFDC
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    115     157
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S814_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41627
                                            113 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   33724
                                             97 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33213
                                             89 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   32827
                                             91 COMRAM     4     4      0
                                             61 BANK0     28    22      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4443
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22772
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     420
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     802
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              3 COMRAM     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      20        0.0%
DATA                 0      0     14C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 15:53:24 2021

             ___fldiv@aexp 0040               ___fldiv@bexp 003F               ___fldiv@sign 0038  
                       l30 2F6A                         l51 3CDE                         l53 3CC8  
                       l47 3EEC                         l55 3CD6                         l80 3BAE  
                       l73 3B96                         l65 3B6A                         l83 3EDC  
                       l92 352A                         l77 3BAC                         l69 3B80  
                       l86 3EFA                         l96 352A                         l99 3A34  
             ___awdiv@sign 0006        ___wmul@multiplicand 0003                        l102 3E74  
                      l123 3E9A                        l108 3D62                        l420 3090  
                      l354 384E                        l710 24FE                        l382 39A8  
                      l367 38FE                        l705 26DA                        l393 3194  
                      l561 3362                        l801 3C00                        l707 253A  
                      l651 1C46                        l571 35DA                        l716 2580  
                      l388 314E                        l660 1F16                        l652 1C34  
                      l741 2340                        l397 3DD2                        l653 1BFA  
                      l718 25F8                        l719 25E6                        l911 105C  
                      l744 21D2                        l568 3382                        l737 1FDC  
                      l754 2302                        l746 224A                        l842 370C  
                      l578 35FA                        l747 2238                        l668 1D60  
                      l781 2CA4                        l677 1E30                        l693 3C98  
                      l845 374E                        l678 1E1E                        l847 378A  
                      l792 2C3C                        l785 2BE0                        l865 1486  
                      l945 2926                        l778 2B48                        l883 0C1C  
                      l955 2AF0                        l947 292E                        l991 18F4  
                      l984 1A56                        l969 157A                        l998 3A8E  
                      l999 3A96                        _pad 36C6               ___awmod@sign 0006  
                      wreg 000FE8               ___flmul@aexp 0020               ___flmul@bexp 0021  
             ___flmul@sign 001B               ___flmul@temp 0026               ___flmul@prod 0022  
             ___fltol@exp1 000A                       l1103 3B52                       l1041 2E34  
                     l1009 3292                       l1113 3458                       l1050 2830  
                     l1123 3AEE                       l1109 3E40                       l1038 2E2C  
                     l1047 28EC                       l1071 3D9A                       l1128 3AF6  
                     l1057 3E0A                       l1065 3C52                       l3001 1E16  
                     l3011 1E94                       l3101 23FE                       l3021 1EDA  
                     l3005 1E40                       l3013 1E96                       l1086 36C4  
                     l1094 3D22                       l3111 2440                       l3103 240E  
                     l3031 1F04                       l3023 1EE8                       l3015 1EA6  
                     l3007 1E4C                       l3105 2424                       l3033 1F06  
                     l3025 1EEE                       l3017 1EB6                       l3009 1E5A  
                     l1097 3EFC                       l3041 3CFE                       l4001 2A9E  
                     l4011 2CBA                       l3131 24C2                       l3123 2478  
                     l3107 2434                       l3115 2454                       l3211 1F44  
                     l3203 1F18                       l3027 1EF0                       l3019 1ED6  
                     l3043 3D02                       l3051 3E34                       l4003 2AB8  
                     l3061 3E92                       l4021 2D18                       l4013 2CBE  
                     l3141 2508                       l3133 24CA                       l3125 2492  
                     l3117 2464                       l3109 243C                       l3221 1F80  
                     l3213 1F54                       l3205 1F24                       l3029 1EF6  
                     l3037 3CE0                       l3045 3E0C                       l4005 2AC8  
                     l4031 2D44                       l4015 2CC2                       l3151 2560  
                     l3143 2526                       l3135 24DA                       l3127 24A2  
                     l3119 2464                       l3071 235E                       l3303 225A  
                     l3311 22A2                       l3231 1FB6                       l3223 1F86  
                     l3215 1F64                       l3207 1F32                       l3039 3CEC  
                     l3047 3E18                       l3055 3D64                       l4111 1508  
                     l4103 14FC                       l4041 2DEC                       l4033 2D78  
                     l4025 2D1E                       l4017 2CDE                       l4009 2CA6  
                     l3401 38A6                       l3161 259E                       l3153 2566  
                     l3145 2528                       l3137 24EE                       l3129 24B2  
                     l3073 236E                       l3081 2398                       l3065 2342  
                     l3321 2316                       l3313 22BC                       l3305 2266  
                     l3233 1FC6                       l3225 1F94                       l3217 1F6A  
                     l3209 1F34                       l3049 3E1C                       l4121 158A  
                     l3059 3E76                       l4043 2DFE                       l4027 2D34  
                     l4019 2D14                       l3403 38B4                       l3411 38DE  
                     l3171 2608                       l3163 25A2                       l3155 2570  
                     l3147 2538                       l3139 24FC                       l3091 23C4  
                     l3083 23A8                       l3075 237E                       l3067 234E  
                     l3323 2324                       l3315 22D0                       l3307 2274  
                     l3251 2048                       l3243 2010                       l3235 1FCC  
                     l3227 1F96                       l3219 1F7A                       l4051 3384  
                     l4131 1622                       l4123 15AE                       l4115 1514  
                     l4107 1502                       l4203 1A20                       l4301 345C  
                     l4221 3E50                       l4045 2E10                       l4037 2DAE  
                     l4029 2D3C                       l3341 3790                       l3413 38EE  
                     l3405 38CA                       l3181 266A                       l3173 2614  
                     l3165 25B0                       l3157 257E                       l3149 254A  
                     l3093 23D4                       l3085 23AE                       l3077 238E  
                     l3069 235C                       l3421 392E                       l3325 2326  
                     l3317 22EA                       l3309 229E                       l3261 2092  
                     l3253 2060                       l3245 201C                       l3237 1FEC  
                     l3229 1FA6                       l3333 3C54                       l3501 3060  
                     l4061 33E0                       l4053 33AE                       l4205 1A44  
                     l4133 1642                       l4125 15B6                       l4141 16AA  
                     l4117 1568                       l4071 3EC0                       l4311 34A0  
                     l4303 346C                       l4231 3E64                       l4223 3E52  
                     l3351 37C0                       l3343 379E                       l3415 38F6  
                     l3407 38D2                       l3191 26C8                       l3183 2680  
                     l3175 2622                       l3167 25DE                       l3159 2590  
                     l3095 23E4                       l3087 23B4                       l3079 2390  
                     l3431 39A6                       l3423 393E                       l3319 2306  
                     l3327 232C                       l3271 20E8                       l3263 20A2  
                     l3255 206C                       l3247 2026                       l3239 1FFC  
                     l3335 3C64                       l3503 3070                       l4063 33FC  
                     l3511 32A0                       l4151 1750                       l4143 16CC  
                     l4135 1650                       l4127 15C4                       l4119 1588  
                     l4073 3EC2                       l4217 3EEE                       l4321 34E6  
                     l4313 34B2                       l4305 347E                       l4233 3E6A  
                     l4225 3E5A                       l3361 37EE                       l3353 37C4  
                     l3345 37A6                       l3409 38D8                       l3193 26CE  
                     l3185 269A                       l3177 264C                       l3097 23F4  
                     l3089 23C2                       l3425 396C                       l3441 30FE  
                     l3329 2330                       l3281 218C                       l3273 2104  
                     l3265 20AE                       l3257 2078                       l3249 203C  
                     l3505 3080                       l3601 3AE0                       l4065 340E  
                     l4057 33BA                       l3521 32FA                       l3513 32BE  
                     l4153 1762                       l4145 16DC                       l4129 15E8  
                     l4081 1488                       l4241 3A3E                       l4401 2E40  
                     l4251 3EE8                       l4075 3EC8                       l4331 3520  
                     l4323 34EC                       l4315 34B8                       l4307 3484  
                     l4235 3E6C                       l4227 3E5C                       l4219 3E44  
                     l3371 3822                       l3363 37FC                       l3355 37CC  
                     l3347 37AA                       l3339 378C                       l3195 26D0  
                     l3187 26B6                       l3179 2650                       l3099 23F6  
                     l3427 397C                       l3419 3900                       l3451 318C  
                     l3443 310E                       l3435 3092                       l3291 21E2  
                     l3283 219A                       l3275 2110                       l3267 20BE  
                     l3259 2086                       l3611 2766                       l4067 3436  
                     l4059 33C8                       l3523 3328                       l3515 32C6  
                     l3531 352C                       l4171 1890                       l4155 1778  
                     l4163 17E2                       l4147 170E                       l4139 1698  
                     l4091 14DC                       l4083 14AC                       l4243 3A4C  
                     l4411 2ECC                       l4403 2E42                       l4077 3ECA  
                     l4261 39DA                       l4253 39AA                       l4325 34F6  
                     l4317 34C2                       l4309 348E                       l4237 3E72  
                     l4229 3E62                       l3373 3828                       l3365 3802  
                     l3357 37DE                       l3349 37B8                       l3189 26BA  
                     l3429 39A0                       l3453 3192                       l3445 311C  
                     l3437 30C0                       l3293 21F0                       l3285 21B8  
                     l3277 212C                       l3269 20D8                       l3461 3DC2  
                     l2901 1B80                       l3613 2774                       l3621 2854  
                     l3605 26DC                       l2821 35FC                       l3701 0946  
                     l3525 3348                       l3517 32DA                       l3509 3294  
                     l3541 35A2                       l3533 354A                       l4181 192C  
                     l4173 18C4                       l4165 1810                       l4157 1786  
                     l4149 171E                       l4093 14DE                       l4085 14BA  
                     l4245 3A72                       l4341 3BEE                       l4333 3BB0  
                     l4421 2F32                       l4413 2EEA                       l4405 2E44  
                     l4247 3EE0                       l4079 3EDA                       l4271 3A0C  
                     l4263 39EA                       l4255 39B6                       l4327 3508  
                     l4319 34D4                       l4351 3D46                       l3367 3818  
                     l3359 37E6                       l3375 382E                       l3391 386E  
                     l3383 3850                       l3447 312E                       l3439 30D0  
                     l3295 21F4                       l3287 21C2                       l3279 2156  
                     l2911 1B94                       l2903 1B84                       l3471 2FB6  
                     l3623 2890                       l3607 26FC                       l2831 367E  
                     l2823 360E                       l3551 36EA                       l3703 0958  
                     l3527 334A                       l3519 32E8                       l3543 35C2  
                     l3535 3552                       l4191 19E2                       l4183 1978  
                     l4159 17B6                       l4095 14F0                       l4087 14CC  
                     l4239 3A36                       l4335 3BC2                       l4423 2F64  
                     l4415 2EF6                       l4407 2E52                       l4249 3EE4  
                     l4281 3A2A                       l4273 3A12                       l4265 39F0  
                     l4257 39BC                       l4329 351A                       l4345 3D24  
                     l4361 2B6E                       l4353 2AF4                       l3633 3DD4  
                     l3641 3C1A                       l3377 383E                       l3369 3820  
                     l3393 387C                       l3385 3854                       l3449 313C  
                     l3297 2202                       l3289 21D0                       l3457 3D9C  
                     l2921 1BF2                       l2905 1B88                       l2913 1B98  
                     l2841 1A74                       l3481 3004                       l3473 2FE0  
                     l3465 2F8C                       l3625 28A4                       l3617 27E4  
                     l3609 2752                       l2825 3620                       l3561 3730  
                     l3553 36F8                       l3801 0D42                       l3721 0A2C  
                     l3705 0974                       l3713 09BE                       l3529 335C  
                     l3545 35D4                       l3537 3566                       l4193 19F6  
                     l4169 187E                       l4089 14D0                       l4337 3BCA  
                     l4425 2F6C                       l4417 2F00                       l4409 2EC2  
                     l3651 3B64                       l4283 3A30                       l4275 3A18  
                     l4267 3A00                       l4259 39D4                       l4347 3D30  
                     l4371 2BC8                       l4355 2B04                       l3643 3C48  
                     l3379 3846                       l3395 3884                       l3387 3862  
                     l3299 2230                       l3459 3DB2                       l2931 1C28  
                     l2923 1C08                       l2915 1B9C                       l2907 1B8C  
                     l2843 1A84                       l2851 1AAE                       l2835 1A58  
                     l3491 3030                       l3475 2FE2                       l3467 2FA2  
                     l3571 31B6                       l3627 28CC                       l3619 2820  
                     l2827 362A                       l3563 375E                       l3555 3704  
                     l3547 36C6                       l3811 0E56                       l3803 0D52  
                     l3723 0A48                       l3715 09E4                       l3731 0A64  
                     l3707 098C                       l3539 3574                       l4187 19B0  
                     l4179 1908                       l4099 14F6                       l4339 3BD2  
                     l4419 2F26                       l4293 3CB8                       l4285 3C9C  
                     l3661 3B98                       l3653 3B6C                       l4277 3A1E  
                     l4269 3A06                       l4349 3D42                       l4381 2C2C  
                     l4373 2BCA                       l4365 2B82                       l4357 2B12  
                     l3645 3C4C                       l3637 3C02                       l3397 3896  
                     l3389 386A                       l2941 1C78                       l2933 1C32  
                     l2925 1C14                       l2917 1BC6                       l2909 1B90  
                     l2861 1ADE                       l2853 1ABE                       l2845 1A94  
                     l2837 1A64                       l3477 2FF2                       l3573 31F4  
                     l3581 3234                       l3629 28DC                       l2829 3648  
                     l3565 3772                       l3557 3718                       l3549 36D6  
                     l3901 129E                       l3821 0EF6                       l3805 0D66  
                     l3813 0E5C                       l3741 0AEE                       l3733 0A7E  
                     l3709 0996                       l4189 19D4                       l4197 1A04  
                     ?_pad 0011                       l4295 3CBC                       l4287 3CAC  
                     l3663 3BA6                       l3655 3B7A                       l4279 3A24  
                     l4391 2C84                       l4383 2C4A                       l4375 2BD6  
                     l4367 2B8A                       l4359 2B58                       l3639 3C06  
                     l3399 389E                       l2951 1CB4                       l2943 1C88  
                     l2935 1C54                       l2927 1C18                       l2919 1BE2  
                     l2871 1B1E                       l2863 1AEC                       l2855 1AC4  
                     l2847 1AA4                       l2839 1A72                       l3487 301C  
                     l3479 2FF6                       l3583 3246                       l3575 321C  
                     l3559 372C                       l3591 3AF8                       l3911 12E2  
                     l3903 12AC                       l3831 0FD2                       l3823 0F28  
                     l3815 0E7A                       l3807 0DCA                       l3751 0BC6  
                     l3743 0B48                       l3719 0A1A                       l3671 0858  
                     l4199 1A12                       l4297 3CC4                       l3657 3B82  
                     l3649 3B56                       l4393 2C92                       l4385 2C4C  
                     l4377 2C12                       l4369 2B96                       l2961 1CFA  
                     l2953 1CC2                       l2945 1C96                       l2937 1C64  
                     l2929 1C26                       l2881 1B58                       l2873 1B20  
                     l2865 1AEE                       l2857 1AD6                       l2849 1AA6  
                     l3497 3044                       l3489 3026                       l3577 3228  
                     l3569 3196                       l3593 3B08                       l3921 1318  
                     l3913 12EA                       l3905 12BC                       l3841 1034  
                     l3833 0FD8                       l3825 0F38                       l3817 0EAE  
                     l3809 0E22                       l3761 0C10                       l3753 0BCA  
                     l3745 0B7C                       l3737 0AB4                       l3681 08A8  
                     l3673 0860                       l3665 0830                       l4299 3CC6  
                     l3659 3B90                       l4395 2C94                       l4387 2C50  
                     l4379 2C1E                       l2971 1D76                       l2963 1D2E  
                     l2955 1CC4                       l2947 1CA4                       l2891 1B6C  
                     l2883 1B5C                       l2867 1AFE                       l2875 1B28  
                     l2859 1AD8                       l3499 3050                       l3587 328A  
                     l3595 3A98                       l3931 1374                       l3923 1320  
                     l3915 12FA                       l3907 12C0                       l3851 10EC  
                     l3843 1048                       l3835 100C                       l3827 0F48  
                     l3819 0EE0                       l3771 0C4C                       l3755 0BDC  
                     l3763 0C28                       l3747 0B84                       l3739 0AE8  
                     l3691 08E0                       l3683 08B6                       l3675 0884  
                     l3667 083A                       l4389 2C74                       l2981 1DB2  
                     l2973 1D86                       l2965 1D30                       l2957 1CCE  
                     l2949 1CB0                       l2893 1B70                       l2885 1B60  
                     l2877 1B38                       l2869 1B0E                       l3941 13B4  
                     l3933 137C                       l3925 132C                       l3917 1302  
                     l3909 12D0                       l3861 1138                       l3853 10FE  
                     l3845 1054                       l3837 1020                       l3829 0F7C  
                     l3781 0CB2                       l3773 0C68                       l3757 0BEE  
                     l3749 0BB6                       l3693 08E4                       l3685 08C8  
                     l3677 088E                       l3669 084A                       l4485 153A  
                     l4487 2D62                       l2991 1DDE                       l2983 1DB4  
                     l2967 1D40                       l2959 1CD4                       l2895 1B74  
                     l2887 1B64                       l2879 1B4A                       l3599 3ACE  
                     l3951 13F0                       l3943 13C6                       l3927 1332  
                     l3935 1382                       l3919 1310                       l3871 116C  
                     l3863 1146                       l3855 1110                       l3847 1078  
                     l3839 1024                       l3791 0CFA                       l3783 0CC4  
                     l3775 0C9E                       l3759 0BF6                       l3687 08D4  
                     l3695 08EA                       l3679 0896                       l4399 2E36  
                     l2985 1DC2                       l2977 1D9A                       l2993 1DE0  
                     l2969 1D50                       l2897 1B78                       l2889 1B68  
                     l3961 1448                       l3953 13F6                       l3945 13D2  
                     l3937 1394                       l3929 1358                       l3881 119E  
                     l3873 117C                       l3865 1156                       l3857 111E  
                     l3849 10DC                       l3793 0D08                       l3785 0CD6  
                     l3777 0CA6                       l3769 0C3A                       l3697 0910  
                     l3689 08DC                       l2987 1DCA                       l2979 1DA4  
                     l2995 1DEE                       l2899 1B7C                       l3963 1450  
                     l3947 13DA                       l3939 13AE                       l3891 1246  
                     l3883 11B0                       l3875 1180                       l3867 115A  
                     l3859 1126                       l3795 0D20                       l3787 0CE4  
                     l3779 0CAA                       l2997 1DF2                       l2989 1DCE  
                     l3965 1460                       l3957 142A                       l3949 13EA  
                     l3893 124E                       l3885 11B4                       l3877 1186  
                     l3869 1160                       l3797 0D32                       l3789 0CE8  
                     l3981 2956                       l3973 28EE                       l2999 1E00  
                     l3967 1466                       l3959 143C                       l3879 118C  
                     l3887 11BA                       l3895 1252                       l3799 0D3A  
                     l3991 29EA                       l3983 295E                       l3975 28FE  
                     l3897 1270                       l3889 1212                       l3993 29F0  
                     l3985 2968                       l3977 2900                       l3899 128C  
                     l3987 296E                       l3995 2A54                       l3979 291A  
                     l3997 2A66                       l3989 29E4                       l3999 2A84  
                     STR_1 0810                       STR_2 0801                       STR_3 081B  
                     STR_4 0823                       STR_7 081F                       STR_8 0827  
                     u3000 1E00                       u3001 1DFC                       u3010 1E16  
                     u3011 1E12                       u3100 1F04                       u3020 1E2C  
                     u3101 1F00                       u3021 1E28                       u3030 1E40  
                     u3110 3D22                       u3031 1E3C                       u3111 3D1E  
                     u3200 23E4                       u3040 1E5A                       u3120 3E34  
                     u3201 23E0                       u3041 1E56                       u3121 3E30  
                     u3210 2424                       u3050 1E94                       u4010 3280  
                     u3130 3D94                       u3211 2420                       u3051 1E90  
                     u4011 327A                       u3131 3D8E                       u3300 25B0  
                     u3220 2464                       u3060 1EA6                       u4020 3282  
                     u4100 2774                       u3140 3D96                       u3301 25AC  
                     u3221 2460                       u3061 1EA2                       u4005 3258  
                     u4101 2770                       u3310 25DE                       u3230 24DA  
                     u3150 235C                       u3070 1EB6                       u4030 3B40  
                     u3311 25DA                       u3231 24D6                       u3151 2358  
                     u3071 1EB2                       u4200 3C1A                       u3320 25F4  
                     u3240 24FC                       u3160 236E                       u3400 1F54  
                     u3080 1ED6                       u4120 27E0                       u4040 3B52  
                     u5000 157A                       u4201 3C16                       u3321 25F0  
                     u3241 24F8                       u3161 236A                       u3401 1F50  
                     u3081 1ED2                       u4121 27DC                       u4041 3B4E  
                     u5001 1576                       u4210 3C48                       u3330 2608  
                     u3250 2526                       u3170 237E                       u3410 1F94  
                     u3090 1EE8                       u4130 2804                       u4050 3AC8  
                     u5010 1588                       u4211 3C44                       u3331 2604  
                     u3251 2522                       u3171 237A                       u3411 1F90  
                     u3091 1EE4                       u4115 2788                       u4051 3AC2  
                     u5011 1584                       u4220 3B64                       u3340 2622  
                     u3260 254A                       u3180 23C2                       u3500 2230  
                     u3420 1FA6                       u4140 2820                       u4116 2792  
                     u2700 3648                       u4060 3ACA                       u4300 0910  
                     u5100 1810                       u5020 15AE                       u4221 3B60  
                     u3341 261E                       u3261 2546                       u3181 23BE  
                     u3501 222C                       u3421 1FA2                       u4141 281C  
                     u4117 27A2                       u2701 3644                       u4037 3B36  
                     u4301 090C                       u5101 180C                       u5021 15AA  
                     u4230 3B7A                       u3350 266A                       u3270 2560  
                     u3190 23D4                       u3510 2246                       u3430 1FB6  
                     u4150 2874                       u2710 367E                       u4070 3AE0  
                     u4310 0940                       u5110 1876                       u5030 15E8  
                     u4231 3B76                       u3351 2666                       u3271 255C  
                     u3191 23D0                       u3511 2242                       u3431 1FB2  
                     u4135 27FA                       u2711 367A                       u4071 3ADC  
                     u4311 093A                       u5111 1870                       u5031 15E4  
                     u4240 3B90                       u5200 34A0                       u3600 37FC  
                     u3360 269A                       u3280 257E                       u3520 225A  
                     u3440 1FEC                       u2800 1B58                       u2720 1A72  
                     u4160 2890                       u4080 2724                       u4400 0BB6  
                     u4320 0942                       u5120 1878                       u5040 1690  
                     u4241 3B8C                       u5201 349C                       u3601 37F8  
                     u3361 2696                       u3281 257A                       u3521 2256  
                     u3441 1FE8                       u2801 1B54                       u2721 1A6E  
                     u4161 288C                       u4401 0BB2                       u5041 168A  
                     u4250 3BA6                       u5210 34D4                       u3610 3818  
                     u3370 26C8                       u3290 259E                       u3530 2274  
                     u3450 1FFC                       u2810 1BC6                       u2730 1A84  
                     u4170 28CC                       u4090 2752                       u4410 0BDC  
                     u4330 0958                       u5130 1890                       u5050 1692  
                     u4251 3BA2                       u5211 34D0                       u3611 3814  
                     u3371 26C4                       u3291 259A                       u3531 2270  
                     u3451 1FF8                       u2811 1BC2                       u2731 1A80  
                     u4171 28C8                       u4155 286A                       u4091 274E  
                     u4411 0BD8                       u4331 0954                       u5131 188C  
                     u5220 3508                       u5300 2C3C                       u4180 3E04  
                     u3620 383E                       u3700 396C                       u3540 22BC  
                     u3460 2176                       u3380 1F32                       u2900 1CA4  
                     u2820 1BDE                       u2740 1A94                       u4500 0CE4  
                     u4420 0BEE                       u4340 09E4                       u4260 0858  
                     u5140 192C                       u5060 16AA                       u5221 3504  
                     u5301 2C38                       u4181 3DFE                       u3621 383A  
                     u3701 3968                       u3541 22B8                       u3381 1F2E  
                     u2901 1CA0                       u2821 1BD8                       u2741 1A90  
                     u4085 271A                       u4501 0CE0                       u4421 0BEA  
                     u4341 09E0                       u4261 0854                       u5141 1928  
                     u5061 16A6                       u5230 3D62                       u5310 2C4A  
                     u4190 3E06                       u3630 3862                       u3710 39A0  
                     u3550 22EA                       u3470 21D0                       u3390 1F44  
                     u2910 1CC2                       u2830 1BE0                       u2750 1AD6  
                     u4510 0CFA                       u4430 0C10                       u4350 0A14  
                     u4270 08A8                       u5150 19D4                       u5070 16DC  
                     u5231 3D5E                       u5311 2C46                       u3631 385E  
                     u3711 399C                       u3551 22E6                       u3471 21CC  
                     u3391 1F40                       u2911 1CBE                       u2751 1AD2  
                     u4511 0CF6                       u4431 0C0C                       u4351 0A0E  
                     u4271 08A4                       u5151 19D0                       u5071 16D8  
                     u5320 2C84                       u5240 2B04                       u3640 387C  
                     u3720 30C0                       u3560 2324                       u3480 21F0  
                     u2920 1CFA                       u2840 1C08                       u2760 1AEC  
                     u3800 3004                       u2680 360E                       u4600 1048  
                     u4520 0D08                       u4440 0C36                       u4360 0A16  
                     u4280 08B6                       u5080 171E                       u5160 3A8E  
                     u5321 2C80                       u5241 2B00                       u3641 3878  
                     u3721 30BC                       u3561 2320                       u3481 21EC  
                     u3465 216C                       u2921 1CF6                       u2841 1C04  
                     u2761 1AE8                       u3801 3000                       u2681 360A  
                     u4601 1044                       u4521 0D04                       u4441 0C32  
                     u4281 08B2                       u5081 171A                       u5161 3A8A  
                     u5170 3CAC                       u5330 2C92                       u5250 2B12  
                     u3570 379E                       u3650 3896                       u3730 30FE  
                     u3490 2202                       u2930 1D40                       u2850 1C26  
                     u2770 1AFE                       u3810 3018                       u2690 3620  
                     u4610 10EC                       u4530 0D32                       u4450 0C4C  
                     u4370 0A2C                       u4290 08C8                       u5090 1762  
                     u5171 3CA8                       u5331 2C8E                       u5251 2B0E  
                     u3571 379A                       u3651 3892                       u3731 30FA  
                     u3491 21FE                       u2931 1D3C                       u2851 1C22  
                     u2771 1AFA                       u3811 3014                       u2691 361C  
                     u4611 10E8                       u4531 0D2E                       u4451 0C48  
                     u4371 0A28                       u4291 08C4                       u5091 175E  
                     u5180 3CD6                       u5260 2B6E                       u3580 37B8  
                     u3660 38B4                       u3740 311C                       u2940 1D76  
                     u2860 1C46                       u2780 1B0E                       u3820 3040  
                     u4700 129E                       u4620 10FE                       u4540 0E7A  
                     u4460 0C68                       u4380 0AB0                       u3900 3574  
                     u5340 2F64                       u5181 3CD2                       u5261 2B6A  
                     u3581 37B4                       u3661 38B0                       u3741 3118  
                     u2941 1D72                       u2861 1C42                       u2781 1B0A  
                     u3821 303C                       u4701 129A                       u4621 10FA  
                     u4541 0E76                       u4461 0C64                       u4381 0AAC  
                     u3901 3570                       u5341 2F60                       u5190 346C  
                     u5270 2BC4                       u3590 37DE                       u3670 38CA  
                     u3750 313C                       u2950 1D86                       u2870 1C54  
                     u2790 1B4A                       u3830 3060                       u4710 12AC  
                     u4630 1110                       u4550 0EE0                       u4470 0C9E  
                     u4390 0B44                       u3910 35A2                       u5407 39F6  
                     u5191 3468                       u5271 2BC0                       u3591 37DA  
                     u3671 38C6                       u3751 3138                       u2951 1D82  
                     u2871 1C50                       u2791 1B46                       u3831 305C  
                     u4711 12A8                       u4631 110C                       u4551 0EDC  
                     u4471 0C9A                       u4391 0B40                       u3911 359E  
                     u5280 2C0E                       u3680 38EE                       u3760 318C  
                     u2960 1DB2                       u2880 1C64                       u3840 3070  
                     u3920 36D6                       u4720 12E2                       u4640 111E  
                     u4560 0F28                       u4480 0CC4                       u4800 28FE  
                     u5417 3ED0                       u5281 2C0A                       u3681 38EA  
                     u3761 3188                       u2961 1DAE                       u2881 1C60  
                     u3841 306C                       u3921 36D2                       u4721 12DE  
                     u4641 111A                       u4561 0F24                       u4481 0CC0  
                     u4801 28FA                       u5290 2C2C                       u3690 392E  
                     u3770 3DB2                       u2970 1DC2                       u2890 1C96  
                     u3930 36F8                       u4730 1310                       u4650 1138  
                     u4570 0F38                       u4490 0CD6                       u4810 291A  
                     u5291 2C28                       u3691 392A                       u3771 3DAE  
                     u2971 1DBE                       u2891 1C92                       u3931 36F4  
                     u4731 130C                       u4651 1134                       u4571 0F34  
                     u4491 0CD2                       u3851 329A                       u4811 2916  
                     u4900 2DE6                       u2980 1DDE                       u3780 2FA2  
                     u3940 374E                       u4740 1394                       u4660 1146  
                     u4580 0FD2                       u3860 32BE                       u4820 2A66  
                     u4901 2DE0                       u2981 1DDA                       u3781 2F9E  
                     u3941 374A                       u4741 1390                       u4661 1142  
                     u4581 0FCE                       u3861 32BA                       u4821 2A62  
                     u5357 2F78                       u4910 2DE8                       u2990 1DEE  
                     u3790 2FD6                       u3950 375E                       u4750 13AE  
                     u4670 119E                       u4590 1020                       u3870 32E8  
                     u4830 2A84                       u5367 3E5E                       u2991 1DEA  
                     u3951 375A                       u4751 13AA                       u4671 119A  
                     u4591 101C                       u3871 32E4                       u4831 2A80  
                     u4920 2DFE                       u3960 31D6                       u4760 13C6  
                     u4680 1270                       u3880 3328                       u4840 2A9E  
                     u5377 3E6E                       u4921 2DFA                       u4761 13C2  
                     u4681 126C                       u3881 3324                       u4841 2A9A  
                     u4930 2E10                       u3970 31F4                       u4770 1424  
                     u4690 128C                       u3890 354A                       u4850 2AB8  
                     u5387 39C6                       u4931 2E0C                       u3795 2FCC  
                     u3971 31F0                       u4771 141E                       u4691 1288  
                     u3891 3546                       u4851 2AB4                       u3980 321C  
                     u4780 1426                       u4940 33AE                       u4860 2AC8  
                     u5397 39E0                       u3981 3218                       u3965 31CC  
                     u4941 33AA                       u4861 2AC4                       u4870 2CDE  
                     u3990 3246                       u4790 143C                       u4950 33E0  
                     u4871 2CDA                       u3991 3242                       u4791 1438  
                     u4951 33DC                       u4880 2D14                       u4960 33FC  
                     u4881 2D10                       u4961 33F8                       u4890 2D30  
                     u4970 340E                       u4891 2D2C                       u4971 340A  
                     u4980 3436                       u4981 3432                       u4990 14AC  
                     u4991 14A8          ?_Lcd_Write_String 0005                       _dbuf 0100  
                     _atoi 2CA6                       _main 2E36                       _prec 00E3  
                     _nout 00DF                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9                       _utoa 28EE           __end_of_ADC_Init 3EEE  
         __end_of_ADC_Read 3CE0              ___fpclassifyf 3196                       prodh 000FF4  
                     prodl 000FF3                       start 0000         ??_Lcd_Write_String 0007  
          ___fldiv@new_exp 0039            __end_of_Lcd_Cmd 3EDE               _tolower$1106 000D  
             ___param_bank 000000                      ??_pad 0017              ___fltol@sign1 0009  
                    ?_atoi 0008            __end_of___fladd 1F18                      ?_main 0001  
          __end_of___fldiv 26DC            __end_of___awdiv 3850            __end_of___flneg 3DD4  
                    _ADRES 000FC3                      STR_11 082B                      STR_13 082B  
          __end_of___awmod 3900            __end_of___flmul 2342            __end_of___flsub 3C9A  
          __end_of___fltol 3092                      ?_utoa 001C            __end_of___lodiv 3384  
          ___awdiv@divisor 0003            __end_of___lomod 35FC            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 009F               vfpfcnvrt@llu 00A3    __size_of_Lcd_Set_Cursor 00D2  
                    _flags 00E5                      _fputc 35FC                      _fputs 3CE0  
          __end_of_isdigit 3E0C                      atoi@n 0015                      pad@fp 0011  
                    atoi@s 0008                      _width 00E1                      _putch 3EFC  
          __end_of_isspace 3C54            __end_of_isupper 3D9C                      tablat 000FF5  
                    utoa@d 001E                      utoa@i 003A                      utoa@n 0032  
                    utoa@p 002E                      utoa@w 0030                      status 000FD8  
          __end_of_sprintf 3C02             ?___fpclassifyf 0001            __end_of_tolower 3AF8  
          __end_of_strncmp 345A           ___lodiv@dividend 0001           __end_of_Lcd_Init 3A36  
         __end_of_Lcd_Port 3BB0            __initialization 3E9C               __end_of_atoi 2E36  
             __end_of_main 2F8C               __end_of_utoa 2AF2                     ??_atoi 000A  
                   ??_main 00D1                     ??_utoa 0026         __size_of_Lcd_Clear 000E  
            __activetblptr 000002           ___lodiv@quotient 0011                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0                     ?_fputc 0001  
                   ?_fputs 000A           ___awdiv@dividend 0001                     ?_putch 0001  
                ??_Lcd_Cmd 0002              vfpfcnvrt@done 00AB    __size_of_Lcd_Write_Char 0034  
         __end_of___xxtofl 2CA6               vfprintf@cfmt 00BF                     ___flge 3092  
                   ___fleq 3900                  ??___fladd 0009                     ___wmul 3E76  
                ??___fldiv 0030                  ??___awdiv 0005                  ??___flneg 0005  
                ??___awmod 0005                  ??___flmul 0017                  ??___flsub 0030  
                ??___fltol 0005                  ??___lodiv 0011                  ??___lomod 0011  
                   _efgtoa 0830                     _buffer 00E9                     _floorf 26DC  
                   clear_0 3EA2                     clear_1 3EAE           ___awdiv@quotient 0007  
          ___awmod@divisor 0003                     isa$std 000001            ___awmod@counter 0005  
                   pad@buf 0013                     _strcpy 3AF8                     _strlen 3E0C  
                   fputc@c 0001                     fputs@c 000E                     fputs@i 000F  
                   fputs@s 000A                  ??_isdigit 0003            ___fpclassifyf@e 0009  
                ?_ADC_Init 0001            ___fpclassifyf@u 000B                  ?_ADC_Read 0001  
          ___fpclassifyf@x 0001               __mediumconst 0000                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001           __end_of_vfprintf 3A98  
                   utoa@fp 001C                  ??_sprintf 0060                  ??_tolower 0009  
                ??_strncmp 0007            Lcd_Set_Cursor@a 0005            Lcd_Set_Cursor@b 0004  
          Lcd_Set_Cursor@y 0007            Lcd_Set_Cursor@z 0006                 ___flge@ff1 0028  
               ___flge@ff2 002C            ??___fpclassifyf 0005               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0060    __end_of__initialization 3EB4  
               ___flneg@f1 0001          __end_of_Lcd_Clear 3EFC              ___rparam_used 000001  
               ___fltol@f1 0001             __pcstackCOMRAM 0001              __end_of_fputc 36C6  
            __end_of_fputs 3D24              __end_of_putch 3EFE             _Lcd_Set_Cursor 345A  
               ??_ADC_Init 0001                 ??_ADC_Read 0003                  ?_Lcd_Init 0001  
                ?_Lcd_Port 0001                    ??_fputc 0005                    ??_fputs 000E  
                  ??_putch 0001                 __pbssBANK0 00D3                 __pbssBANK1 0100  
               _efgtoa$940 0067                 _efgtoa$950 006D                 _efgtoa$951 006F  
               _efgtoa$945 0069                 _efgtoa$939 0065                 _efgtoa$949 006B  
                  ?___flge 0028                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 0055                    ?_floorf 0041  __size_of_Lcd_Write_String 0040  
   __end_of_Lcd_Set_Cursor 352C                 ADC_Read@ch 0003                    ?_strcpy 0001  
                  ?_strlen 0001                  ?___xxtofl 0001         __size_of_vfpfcnvrt 05D0  
               ??_Lcd_Init 0004                 ??_Lcd_Port 0001           ___lomod@dividend 0001  
           _Lcd_Write_Char 3E42                    _Lcd_Cmd 3EBE                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0104            __size_of___fleq 00AA  
                  ___fladd 1A58                    ___fldiv 2342                    ___awdiv 378C  
                  ___flneg 3D9C                    ___awmod 3850                    ___flmul 1F18  
                  ___flsub 3C54                    ___fltol 2F8C            __size_of___wmul 0026  
                  ___lodiv 3294                    ___lomod 352C                  ?_vfprintf 00B9  
             __psmallconst 0800            __size_of_efgtoa 0C58            __size_of_floorf 0212  
                  __pcinit 3E9C                    __ramtop 0800            ?_Lcd_Set_Cursor 0004  
                  __ptext0 2E36                    __ptext1 3BB0                    __ptext2 3A36  
                  __ptext3 1488                    __ptext4 28EE                    __ptext5 352C  
                  __ptext6 3294                    __ptext7 3384                    __ptext8 0830  
                  __ptext9 3A98            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 3DD4                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 3C02                    _isupper 3D64  
                  efgtoa@c 005B                    efgtoa@d 007D                    efgtoa@e 0095  
                  efgtoa@f 0057                    efgtoa@g 0091                    efgtoa@h 0087  
                  efgtoa@i 008F                    efgtoa@l 008B                    efgtoa@m 0077  
                  efgtoa@n 0097                    efgtoa@p 0081                    efgtoa@t 0071  
                  efgtoa@u 0099                    efgtoa@w 0083                    atoi@neg 000E  
                  _sprintf 3BB0                    _tolower 3A98                    _voltaje 00DB  
   __end_of_Lcd_Write_Char 3E76                    _strncmp 3384       end_of_initialization 3EB4  
                  floorf@e 004F                    floorf@m 004B                    floorf@u 0051  
                  floorf@x 0041                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C          __end_of_vfpfcnvrt 1A58                 efgtoa@mode 0086  
               efgtoa@sign 007F                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                  Lcd_Port@a 0001  
               ??_vfprintf 0060                    strcpy@d 0009                    strlen@a 0003  
                  strcpy@s 0007                    strlen@s 0001                ___fladd@grs 0010  
            ___xxtofl@sign 0009                  _TRISBbits 000F93                  _TRISDbits 000F95  
              ___fldiv@grs 003B                ___fldiv@rem 0034          __size_of_ADC_Init 0010  
        __size_of_ADC_Read 0046            ?_Lcd_Write_Char 0001          Lcd_Write_String@a 0005  
        Lcd_Write_String@i 0007                ___flmul@grs 001C                  _Lcd_Clear 3EEE  
           __end_of___flge 3196             __end_of___fleq 39AA                vfpfcnvrt@ap 00A1  
              vfpfcnvrt@ct 00B5                vfpfcnvrt@fp 009D             __end_of___wmul 3E9C  
         _Lcd_Write_String 3D24             __end_of_efgtoa 1488             __end_of_floorf 28EE  
               floorf@F527 00D3             __end_of_strcpy 3B54             __end_of_strlen 3E42  
      start_initialization 3E9C            ___lodiv@divisor 0009            ___lodiv@counter 0019  
              __end_of_pad 378C          __size_of_Lcd_Init 008C          __size_of_Lcd_Port 005C  
    __end_of___fpclassifyf 3294                vfprintf@fmt 00BB                 ?_Lcd_Clear 0001  
                 ??___flge 0030                   ??___fleq 0009                   ??___wmul 0005  
                 ??_efgtoa 0060                   ??_floorf 0045            Lcd_Write_Char@a 0004  
          Lcd_Write_Char@y 0003                   ??_strcpy 0005                   ??_strlen 0003  
                ___fladd@a 0005                  ___fladd@b 0001                  ___fldiv@a 002C  
                ___fldiv@b 0028                  ___flmul@a 0013                  ___flmul@b 000F  
                ___flsub@a 002C                  ___flsub@b 0028              __pcstackBANK0 0060  
        __size_of___xxtofl 01B4                   ?_Lcd_Cmd 0001                  _atoi$1011 0010  
                _atoi$1012 0014                  _atoi$1013 0012           ??_Lcd_Set_Cursor 0005  
                 ?___fladd 0001                   ?___fldiv 0028                   ?___awdiv 0001  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 000F  
                 ?___flsub 0028                   ?___fltol 0001                   ?___lodiv 0001  
                 ?___lomod 0001          __size_of_vfprintf 0062            ___lomod@divisor 0009  
              __smallconst 0800            ___lomod@counter 0011                   ?_isdigit 0001  
                 _ADC_Init 3EDE                   _ADC_Read 3C9A                   ?_isspace 0001  
                 ?_isupper 0001                   ?_sprintf 00C1                   ?_tolower 0007  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0001  
           __size_of_putch 0002             ___wmul@product 0005                   _LATBbits 000F8A  
                 _LATDbits 000F8C                   Lcd_Cmd@a 0003                ??_Lcd_Clear 0004  
                _valor_adc 00E7                  _vfpfcnvrt 1488                 _ADCON0bits 000FC2  
        ___wmul@multiplier 0001           ??_Lcd_Write_Char 0002               _isspace$1042 0007  
                 _Lcd_Init 39AA                   _Lcd_Port 3B54                 vfpfcnvrt@c 00B8  
               vfpfcnvrt@f 00B1   __end_of_Lcd_Write_String 3D64           __size_of_Lcd_Cmd 0020  
                 __Hrparam 0000                 vfprintf@ap 00BD                   __Lrparam 0000  
               vfprintf@fp 00B9              ADC_Init@p_ang 0001           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___awdiv 00C4           __size_of___flneg 0038  
         __size_of___awmod 00B0           __size_of___flmul 042A           __size_of___flsub 0046  
         __size_of___fltol 0106           __size_of___lodiv 00F0           __size_of___lomod 00D0  
               ?_vfpfcnvrt 009D         ___fpclassifyf@F465 00D7                 sprintf@fmt 00C3  
                 ___xxtofl 2AF2           __size_of_isdigit 0038           __size_of_isspace 0052  
                 __ptext10 3D64                   __ptext11 3AF8                   __ptext20 3C54  
                 __ptext12 36C6                   __ptext21 1A58                   __ptext13 3E0C  
                 __ptext30 3C02                   __ptext22 3D9C                   __ptext14 3CE0  
                 __ptext31 3DD4                   __ptext23 1F18                   __ptext15 35FC  
                 __ptext40 3B54                   __ptext32 3E76                   __ptext24 3092  
                 __ptext16 3EFC                   __ptext41 3C9A                   __ptext33 2AF2  
                 __ptext25 3900                   __ptext17 26DC                   __ptext42 3EDE  
                 __ptext34 3D24                   __ptext26 2342                   __ptext18 3196  
                 __ptext35 3E42                   __ptext27 3850                   __ptext19 2F8C  
                 __ptext36 345A                   __ptext28 378C                   __ptext37 39AA  
                 __ptext29 2CA6                   __ptext38 3EEE                   __ptext39 3EBE  
         __size_of_isupper 0038           __size_of_sprintf 0052           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 00D6              __size_of_atoi 0190  
            __size_of_main 0156              __size_of_utoa 0204                   efgtoa@fp 0055  
                 efgtoa@ne 0075                   efgtoa@pp 0073                   efgtoa@ou 0079  
                 isa$xinst 000000                   _vfprintf 3A36                   isdigit@c 0001  
       Lcd_Write_Char@temp 0002                  sprintf@ap 00C9                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003                efgtoa@nmode 0085                ??_vfpfcnvrt 005C  
       Lcd_Set_Cursor@temp 0008              _vfpfcnvrt$972 00AD              _vfpfcnvrt$976 00AF  
                 sprintf@f 00CB                   tolower@c 0007                   sprintf@s 00C1  
   __size_of___fpclassifyf 00FE                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 000D               ___fladd@aexp 000E  
             ___fladd@bexp 000F  
