

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 02 21:21:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	nvCOMRAM
    53   000003                     __pnvCOMRAM:
    54                           	callstack 0
    55   000003                     _seleccion:
    56                           	callstack 0
    57   000003                     	ds	1
    58   000000                     _PORTA	set	3968
    59   000000                     _LATA	set	3977
    60   000000                     _ADCON1	set	4033
    61   000000                     _LATD	set	3980
    62   000000                     _LATC	set	3979
    63   000000                     _LATB	set	3978
    64   000000                     _TRISA	set	3986
    65   000000                     _PORTD	set	3971
    66   000000                     _PORTC	set	3970
    67   000000                     _PORTB	set	3969
    68   000000                     _TRISD	set	3989
    69   000000                     _TRISC	set	3988
    70   000000                     _TRISB	set	3987
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   0008E0                     __pcinit:
    76                           	callstack 0
    77   0008E0                     start_initialization:
    78                           	callstack 0
    79   0008E0                     __initialization:
    80                           	callstack 0
    81   0008E0                     end_of_initialization:
    82                           	callstack 0
    83   0008E0                     __end_of__initialization:
    84                           	callstack 0
    85   0008E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
    86   0008E2  6EF8               	movwf	tblptru,c
    87   0008E4  0100               	movlb	0
    88   0008E6  EF68  F004         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91   000001                     __pcstackCOMRAM:
    92                           	callstack 0
    93   000001                     ??_loop:
    94   000001                     
    95                           ; 1 bytes @ 0x0
    96   000001                     	ds	2
    97   000003                     
    98                           ; 1 bytes @ 0x2
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 13 in file "main_.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, status,0, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called: 1
   124 ;; This function calls:
   125 ;;		_loop
   126 ;;		_setup
   127 ;; This function is called by:
   128 ;;		Startup code after reset
   129 ;; This function uses a non-reentrant model
   130 ;;
   131                           
   132                           	psect	text0
   133   0008D0                     __ptext0:
   134                           	callstack 0
   135   0008D0                     _main:
   136                           	callstack 30
   137   0008D0                     
   138                           ;main_.c: 14:     setup();
   139   0008D0  EC4E  F004         	call	_setup	;wreg free
   140   0008D4                     l762:
   141                           
   142                           ;main_.c: 16:         loop();
   143   0008D4  EC01  F004         	call	_loop	;wreg free
   144   0008D8  EF6A  F004         	goto	l762
   145   0008DC  EF00  F000         	goto	start
   146   0008E0                     __end_of_main:
   147                           	callstack 0
   148                           
   149 ;; *************** function _setup *****************
   150 ;; Defined at:
   151 ;;		line 7 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels used: 1
   171 ;; This function calls:
   172 ;;		Nothing
   173 ;; This function is called by:
   174 ;;		_main
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text1
   179   00089C                     __ptext1:
   180                           	callstack 0
   181   00089C                     _setup:
   182                           	callstack 30
   183   00089C                     
   184                           ;main.c: 9:  ADCON1 = 0b00001111;
   185   00089C  0E0F               	movlw	15
   186   00089E  6EC1               	movwf	193,c	;volatile
   187                           
   188                           ;main.c: 11:     LATA = 0x00;
   189   0008A0  0E00               	movlw	0
   190   0008A2  6E89               	movwf	137,c	;volatile
   191                           
   192                           ;main.c: 12:     PORTA = 0x00;
   193   0008A4  0E00               	movlw	0
   194   0008A6  6E80               	movwf	128,c	;volatile
   195                           
   196                           ;main.c: 13:     TRISA = 0b00111111;
   197   0008A8  0E3F               	movlw	63
   198   0008AA  6E92               	movwf	146,c	;volatile
   199                           
   200                           ;main.c: 16:     LATB = 0x00;
   201   0008AC  0E00               	movlw	0
   202   0008AE  6E8A               	movwf	138,c	;volatile
   203                           
   204                           ;main.c: 17:     PORTB = 0x00;
   205   0008B0  0E00               	movlw	0
   206   0008B2  6E81               	movwf	129,c	;volatile
   207   0008B4                     
   208                           ;main.c: 18:     TRISB = 0b11111111;
   209   0008B4  6893               	setf	147,c	;volatile
   210                           
   211                           ;main.c: 21:     LATC = 0x00;
   212   0008B6  0E00               	movlw	0
   213   0008B8  6E8B               	movwf	139,c	;volatile
   214                           
   215                           ;main.c: 22:     PORTC = 0x00;
   216   0008BA  0E00               	movlw	0
   217   0008BC  6E82               	movwf	130,c	;volatile
   218                           
   219                           ;main.c: 23:     TRISC = 0b0001111;
   220   0008BE  0E0F               	movlw	15
   221   0008C0  6E94               	movwf	148,c	;volatile
   222                           
   223                           ;main.c: 26:     LATD = 0x00;
   224   0008C2  0E00               	movlw	0
   225   0008C4  6E8C               	movwf	140,c	;volatile
   226                           
   227                           ;main.c: 27:     PORTD = 0x00;
   228   0008C6  0E00               	movlw	0
   229   0008C8  6E83               	movwf	131,c	;volatile
   230                           
   231                           ;main.c: 28:     TRISD = 0x00;
   232   0008CA  0E00               	movlw	0
   233   0008CC  6E95               	movwf	149,c	;volatile
   234   0008CE  0012               	return		;funcret
   235   0008D0                     __end_of_setup:
   236                           	callstack 0
   237                           
   238 ;; *************** function _loop *****************
   239 ;; Defined at:
   240 ;;		line 32 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0       0       0       0       0
   257 ;;      Totals:         2       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        2 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text2
   268   000802                     __ptext2:
   269                           	callstack 0
   270   000802                     _loop:
   271                           	callstack 30
   272   000802                     
   273                           ;main.c: 36:         LATD = 0x00;
   274   000802  0E00               	movlw	0
   275   000804  6E8C               	movwf	140,c	;volatile
   276   000806                     
   277                           ;main.c: 37:         seleccion = PORTC & 0x0F;
   278   000806  5082               	movf	130,w,c	;volatile
   279   000808  0B0F               	andlw	15
   280   00080A  6E03               	movwf	_seleccion^0,c
   281                           
   282                           ;main.c: 39:         switch(seleccion){
   283   00080C  EF28  F004         	goto	l754
   284   000810                     l49:
   285                           
   286                           ;main.c: 41:                 LATD = PORTA;
   287   000810  CF80 FF8C          	movff	3968,3980	;volatile
   288   000814                     l740:
   289                           
   290                           ;main.c: 42:                 _delay((unsigned long)((100)*(20000000/4000000.0)));
   291   000814  0EA6               	movlw	166
   292   000816                     u17:
   293   000816  2EE8               	decfsz	wreg,f,c
   294   000818  D7FE               	bra	u17
   295   00081A  D000               	nop2	
   296                           
   297                           ;main.c: 44:                 break;
   298   00081C  EF4D  F004         	goto	l56
   299   000820                     l51:
   300                           
   301                           ;main.c: 46:                 LATD = PORTB;
   302   000820  CF81 FF8C          	movff	3969,3980	;volatile
   303   000824  EF0A  F004         	goto	l740
   304   000828                     l744:
   305                           
   306                           ;main.c: 51:             LATD = PORTA + PORTB;
   307   000828  5080               	movf	128,w,c	;volatile
   308   00082A  2481               	addwf	129,w,c	;volatile
   309   00082C  6E8C               	movwf	140,c	;volatile
   310                           
   311                           ;main.c: 52:             break;
   312   00082E  EF4D  F004         	goto	l56
   313   000832                     l746:
   314                           
   315                           ;main.c: 54:             LATD = PORTB - PORTA;
   316   000832  5080               	movf	128,w,c	;volatile
   317   000834  5C81               	subwf	129,w,c	;volatile
   318   000836  6E8C               	movwf	140,c	;volatile
   319                           
   320                           ;main.c: 55:             break;
   321   000838  EF4D  F004         	goto	l56
   322   00083C                     l748:
   323                           
   324                           ;main.c: 57:             LATD = PORTB & PORTA;
   325   00083C  5081               	movf	129,w,c	;volatile
   326   00083E  1480               	andwf	128,w,c	;volatile
   327   000840  6E8C               	movwf	140,c	;volatile
   328                           
   329                           ;main.c: 58:             break;
   330   000842  EF4D  F004         	goto	l56
   331   000846                     l750:
   332                           
   333                           ;main.c: 60:             LATD = PORTB | PORTA;
   334   000846  5081               	movf	129,w,c	;volatile
   335   000848  1080               	iorwf	128,w,c	;volatile
   336   00084A  6E8C               	movwf	140,c	;volatile
   337                           
   338                           ;main.c: 61:             break;
   339   00084C  EF4D  F004         	goto	l56
   340   000850                     l754:
   341   000850  5003               	movf	_seleccion^0,w,c
   342   000852  6E01               	movwf	??_loop^0,c
   343   000854  6A02               	clrf	(??_loop+1)^0,c
   344                           
   345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   346                           ; Switch size 1, requested type "simple"
   347                           ; Number of cases is 1, Range of values is 0 to 0
   348                           ; switch strategies available:
   349                           ; Name         Instructions Cycles
   350                           ; simple_byte            4     3 (average)
   351                           ;	Chosen strategy is simple_byte
   352   000856  5002               	movf	(??_loop+1)^0,w,c
   353   000858  0A00               	xorlw	0	; case 0
   354   00085A  B4D8               	btfsc	status,2,c
   355   00085C  EF32  F004         	goto	l768
   356   000860  EF4D  F004         	goto	l56
   357   000864                     l768:
   358                           
   359                           ; Switch size 1, requested type "simple"
   360                           ; Number of cases is 6, Range of values is 0 to 8
   361                           ; switch strategies available:
   362                           ; Name         Instructions Cycles
   363                           ; simple_byte           19    10 (average)
   364                           ;	Chosen strategy is simple_byte
   365   000864  5001               	movf	??_loop^0,w,c
   366   000866  0A00               	xorlw	0	; case 0
   367   000868  B4D8               	btfsc	status,2,c
   368   00086A  EF08  F004         	goto	l49
   369   00086E  0A01               	xorlw	1	; case 1
   370   000870  B4D8               	btfsc	status,2,c
   371   000872  EF10  F004         	goto	l51
   372   000876  0A03               	xorlw	3	; case 2
   373   000878  B4D8               	btfsc	status,2,c
   374   00087A  EF14  F004         	goto	l744
   375   00087E  0A01               	xorlw	1	; case 3
   376   000880  B4D8               	btfsc	status,2,c
   377   000882  EF19  F004         	goto	l746
   378   000886  0A07               	xorlw	7	; case 4
   379   000888  B4D8               	btfsc	status,2,c
   380   00088A  EF1E  F004         	goto	l748
   381   00088E  0A0C               	xorlw	12	; case 8
   382   000890  B4D8               	btfsc	status,2,c
   383   000892  EF23  F004         	goto	l750
   384   000896  EF4D  F004         	goto	l56
   385   00089A                     l56:
   386   00089A  0012               	return		;funcret
   387   00089C                     __end_of_loop:
   388                           	callstack 0
   389                           
   390                           	psect	smallconst
   391   000800                     __psmallconst:
   392                           	callstack 0
   393   000800  00                 	db	0
   394   000801  00                 	db	0	; dummy byte at the end
   395   000000                     
   396                           	psect	rparam
   397   000000                     
   398                           	psect	idloc
   399                           
   400                           ;Config register IDLOC0 @ 0x200000
   401                           ;	unspecified, using default values
   402   200000                     	org	2097152
   403   200000  FF                 	db	255
   404                           
   405                           ;Config register IDLOC1 @ 0x200001
   406                           ;	unspecified, using default values
   407   200001                     	org	2097153
   408   200001  FF                 	db	255
   409                           
   410                           ;Config register IDLOC2 @ 0x200002
   411                           ;	unspecified, using default values
   412   200002                     	org	2097154
   413   200002  FF                 	db	255
   414                           
   415                           ;Config register IDLOC3 @ 0x200003
   416                           ;	unspecified, using default values
   417   200003                     	org	2097155
   418   200003  FF                 	db	255
   419                           
   420                           ;Config register IDLOC4 @ 0x200004
   421                           ;	unspecified, using default values
   422   200004                     	org	2097156
   423   200004  FF                 	db	255
   424                           
   425                           ;Config register IDLOC5 @ 0x200005
   426                           ;	unspecified, using default values
   427   200005                     	org	2097157
   428   200005  FF                 	db	255
   429                           
   430                           ;Config register IDLOC6 @ 0x200006
   431                           ;	unspecified, using default values
   432   200006                     	org	2097158
   433   200006  FF                 	db	255
   434                           
   435                           ;Config register IDLOC7 @ 0x200007
   436                           ;	unspecified, using default values
   437   200007                     	org	2097159
   438   200007  FF                 	db	255
   439                           
   440                           	psect	config
   441                           
   442                           ;Config register CONFIG1L @ 0x300000
   443                           ;	PLL Prescaler Selection bits
   444                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   445                           ;	System Clock Postscaler Selection bits
   446                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   447                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   448                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   449   300000                     	org	3145728
   450   300000  00                 	db	0
   451                           
   452                           ;Config register CONFIG1H @ 0x300001
   453                           ;	Oscillator Selection bits
   454                           ;	FOSC = HS, HS oscillator (HS)
   455                           ;	Fail-Safe Clock Monitor Enable bit
   456                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   457                           ;	Internal/External Oscillator Switchover bit
   458                           ;	IESO = OFF, Oscillator Switchover mode disabled
   459   300001                     	org	3145729
   460   300001  0C                 	db	12
   461                           
   462                           ;Config register CONFIG2L @ 0x300002
   463                           ;	Power-up Timer Enable bit
   464                           ;	PWRT = OFF, PWRT disabled
   465                           ;	Brown-out Reset Enable bits
   466                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   467                           ;	Brown-out Reset Voltage bits
   468                           ;	BORV = 3, Minimum setting 2.05V
   469                           ;	USB Voltage Regulator Enable bit
   470                           ;	VREGEN = OFF, USB voltage regulator disabled
   471   300002                     	org	3145730
   472   300002  1F                 	db	31
   473                           
   474                           ;Config register CONFIG2H @ 0x300003
   475                           ;	Watchdog Timer Enable bit
   476                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   477                           ;	Watchdog Timer Postscale Select bits
   478                           ;	WDTPS = 32768, 1:32768
   479   300003                     	org	3145731
   480   300003  1E                 	db	30
   481                           
   482                           ; Padding undefined space
   483   300004                     	org	3145732
   484   300004  FF                 	db	255
   485                           
   486                           ;Config register CONFIG3H @ 0x300005
   487                           ;	CCP2 MUX bit
   488                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   489                           ;	PORTB A/D Enable bit
   490                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   491                           ;	Low-Power Timer 1 Oscillator Enable bit
   492                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   493                           ;	MCLR Pin Enable bit
   494                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   495   300005                     	org	3145733
   496   300005  83                 	db	131
   497                           
   498                           ;Config register CONFIG4L @ 0x300006
   499                           ;	Stack Full/Underflow Reset Enable bit
   500                           ;	STVREN = ON, Stack full/underflow will cause Reset
   501                           ;	Single-Supply ICSP Enable bit
   502                           ;	LVP = ON, Single-Supply ICSP enabled
   503                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   504                           ;	ICPRT = OFF, ICPORT disabled
   505                           ;	Extended Instruction Set Enable bit
   506                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   507                           ;	Background Debugger Enable bit
   508                           ;	DEBUG = 0x1, unprogrammed default
   509   300006                     	org	3145734
   510   300006  85                 	db	133
   511                           
   512                           ; Padding undefined space
   513   300007                     	org	3145735
   514   300007  FF                 	db	255
   515                           
   516                           ;Config register CONFIG5L @ 0x300008
   517                           ;	Code Protection bit
   518                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   519                           ;	Code Protection bit
   520                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   521                           ;	Code Protection bit
   522                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   523                           ;	Code Protection bit
   524                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   525   300008                     	org	3145736
   526   300008  0F                 	db	15
   527                           
   528                           ;Config register CONFIG5H @ 0x300009
   529                           ;	Boot Block Code Protection bit
   530                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   531                           ;	Data EEPROM Code Protection bit
   532                           ;	CPD = OFF, Data EEPROM is not code-protected
   533   300009                     	org	3145737
   534   300009  C0                 	db	192
   535                           
   536                           ;Config register CONFIG6L @ 0x30000A
   537                           ;	Write Protection bit
   538                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   539                           ;	Write Protection bit
   540                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   541                           ;	Write Protection bit
   542                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   543                           ;	Write Protection bit
   544                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   545   30000A                     	org	3145738
   546   30000A  0F                 	db	15
   547                           
   548                           ;Config register CONFIG6H @ 0x30000B
   549                           ;	Configuration Register Write Protection bit
   550                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   551                           ;	Boot Block Write Protection bit
   552                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   553                           ;	Data EEPROM Write Protection bit
   554                           ;	WRTD = OFF, Data EEPROM is not write-protected
   555   30000B                     	org	3145739
   556   30000B  E0                 	db	224
   557                           
   558                           ;Config register CONFIG7L @ 0x30000C
   559                           ;	Table Read Protection bit
   560                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   561                           ;	Table Read Protection bit
   562                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   563                           ;	Table Read Protection bit
   564                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   565                           ;	Table Read Protection bit
   566                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   567   30000C                     	org	3145740
   568   30000C  0F                 	db	15
   569                           
   570                           ;Config register CONFIG7H @ 0x30000D
   571                           ;	Boot Block Table Read Protection bit
   572                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   573   30000D                     	org	3145741
   574   30000D  40                 	db	64
   575                           tosu	equ	0xFFF
   576                           tosh	equ	0xFFE
   577                           tosl	equ	0xFFD
   578                           stkptr	equ	0xFFC
   579                           pclatu	equ	0xFFB
   580                           pclath	equ	0xFFA
   581                           pcl	equ	0xFF9
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           prodh	equ	0xFF4
   587                           prodl	equ	0xFF3
   588                           indf0	equ	0xFEF
   589                           postinc0	equ	0xFEE
   590                           postdec0	equ	0xFED
   591                           preinc0	equ	0xFEC
   592                           plusw0	equ	0xFEB
   593                           fsr0h	equ	0xFEA
   594                           fsr0l	equ	0xFE9
   595                           wreg	equ	0xFE8
   596                           indf1	equ	0xFE7
   597                           postinc1	equ	0xFE6
   598                           postdec1	equ	0xFE5
   599                           preinc1	equ	0xFE4
   600                           plusw1	equ	0xFE3
   601                           fsr1h	equ	0xFE2
   602                           fsr1l	equ	0xFE1
   603                           bsr	equ	0xFE0
   604                           indf2	equ	0xFDF
   605                           postinc2	equ	0xFDE
   606                           postdec2	equ	0xFDD
   607                           preinc2	equ	0xFDC
   608                           plusw2	equ	0xFDB
   609                           fsr2h	equ	0xFDA
   610                           fsr2l	equ	0xFD9
   611                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_loop

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
DATA                 0      0       3       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRlhl         5      0       0      23        0.0%
BITBIGSFRllh         5      0       0      24        0.0%
BITBIGSFRlll        20      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 02 21:21:36 2023

                     l51 0820                       l45 08CE                       l56 089A  
                     l49 0810                       u17 0816                      l740 0814  
                    l732 089C                      l750 0846                      l734 08B4  
                    l744 0828                      l736 0802                      l760 08D0  
                    l746 0832                      l754 0850                      l738 0806  
                    l762 08D4                      l748 083C                      l768 0864  
                    wreg 0FE8                     _LATA 0F89                     _LATB 0F8A  
                   _LATC 0F8B                     _LATD 0F8C                     _main 08D0  
                   _loop 0802                     start 0000             ___param_bank 0000  
                  ?_main 0001                    ?_loop 0001                    _PORTA 0F80  
                  _PORTB 0F81                    _PORTC 0F82                    _PORTD 0F83  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95                    _setup 089C                    status 0FD8  
        __initialization 08E0             __end_of_main 08E0             __end_of_loop 089C  
                 ??_main 0003                   ??_loop 0001            __activetblptr 0002  
                 _ADCON1 0FC1                   ?_setup 0001                   isa$std 0001  
           __mediumconst 0000                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 08E0            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_setup 08D0                  ??_setup 0001               __pnvCOMRAM 0003  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 08E0                  __ramtop 0800                  __ptext0 08D0  
                __ptext1 089C                  __ptext2 0802     end_of_initialization 08E0  
          __Lmediumconst 0000      start_initialization 08E0              __smallconst 0800  
              _seleccion 0003                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000  
