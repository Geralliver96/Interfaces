

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 03 21:13:53 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   0008DC                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for main@F3507
    59   0008DC  48                 	db	72
    60   0008DD  6F                 	db	111
    61   0008DE  6C                 	db	108
    62   0008DF  61                 	db	97
    63   0008E0  20                 	db	32
    64   0008E1  4D                 	db	77
    65   0008E2  75                 	db	117
    66   0008E3  6E                 	db	110
    67   0008E4  64                 	db	100
    68   0008E5  6F                 	db	111
    69   0008E6  0A                 	db	10
    70   0008E7  00                 	db	0
    71   000000                     _RCREG	set	4014
    72   000000                     _TXREG	set	4013
    73   000000                     _SPBRG	set	4015
    74   000000                     _BAUDCONbits	set	4024
    75   000000                     _TXSTAbits	set	4012
    76   000000                     _TRISCbits	set	3988
    77   000000                     _RCSTAbits	set	4011
    78   000000                     _PIR1bits	set	3998
    79                           
    80                           ; #config settings
    81                           
    82                           	psect	cinit
    83   000898                     __pcinit:
    84                           	callstack 0
    85   000898                     start_initialization:
    86                           	callstack 0
    87   000898                     __initialization:
    88                           	callstack 0
    89                           
    90                           ; Initialize objects allocated to COMRAM (12 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92   000898  0EDC               	movlw	low __pidataCOMRAM
    93   00089A  6EF6               	movwf	tblptrl,c
    94   00089C  0E08               	movlw	high __pidataCOMRAM
    95   00089E  6EF7               	movwf	tblptrh,c
    96   0008A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97   0008A2  6EF8               	movwf	tblptru,c
    98   0008A4  EE00  F013         	lfsr	0,__pdataCOMRAM
    99   0008A8  EE10 F00C          	lfsr	1,12
   100   0008AC                     copy_data0:
   101   0008AC  0009               	tblrd		*+
   102   0008AE  CFF5 FFEE          	movff	tablat,postinc0
   103   0008B2  50E5               	movf	postdec1,w,c
   104   0008B4  50E1               	movf	fsr1l,w,c
   105   0008B6  E1FA               	bnz	copy_data0
   106   0008B8                     end_of_initialization:
   107                           	callstack 0
   108   0008B8                     __end_of__initialization:
   109                           	callstack 0
   110   0008B8  0100               	movlb	0
   111   0008BA  EF01  F004         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	dataCOMRAM
   114   000013                     __pdataCOMRAM:
   115                           	callstack 0
   116   000013                     main@F3507:
   117                           	callstack 0
   118   000013                     	ds	12
   119                           
   120                           	psect	cstackCOMRAM
   121   000001                     __pcstackCOMRAM:
   122                           	callstack 0
   123   000001                     uartTransmitter@dataTrasmit:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     uartPrint@string:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132   000002                     	ds	1
   133   000003                     uartPrint@index:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137   000003                     	ds	2
   138   000005                     ??_main:
   139                           
   140                           ; 1 bytes @ 0x4
   141   000005                     	ds	2
   142   000007                     main@mensaje:
   143                           	callstack 0
   144                           
   145                           ; 12 bytes @ 0x6
   146   000007                     	ds	12
   147                           
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 6 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  mensaje        12    6[COMRAM] unsigned char [12]
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:        12       0       0       0       0       0       0       0       0
   169 ;;      Temps:          2       0       0       0       0       0       0       0       0
   170 ;;      Totals:        14       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:       14 bytes
   172 ;; Hardware stack levels required when called: 2
   173 ;; This function calls:
   174 ;;		_uartInit
   175 ;;		_uartPrint
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182   000802                     __ptext0:
   183                           	callstack 0
   184   000802                     _main:
   185                           	callstack 29
   186   000802                     
   187                           ;main.c: 9:     uartInit();
   188   000802  EC38  F004         	call	_uartInit	;wreg free
   189   000806                     
   190                           ;main.c: 10:     char mensaje[] = "Hola Mundo\n";
   191   000806  EE20  F013         	lfsr	2,main@F3507
   192   00080A  EE10  F007         	lfsr	1,main@mensaje
   193   00080E  0E0B               	movlw	11
   194   000810                     u61:
   195   000810  CFDB FFE3          	movff	plusw2,plusw1
   196   000814  06E8               	decf	wreg,f,c
   197   000816  E2FC               	bc	u61
   198   000818                     l767:
   199                           
   200                           ;main.c: 12:         uartPrint(mensaje);
   201   000818  0E07               	movlw	low main@mensaje
   202   00081A  6E02               	movwf	uartPrint@string^0,c
   203   00081C  EC20  F004         	call	_uartPrint	;wreg free
   204   000820                     
   205                           ;main.c: 13:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   206   000820  0E1A               	movlw	26
   207   000822  6E06               	movwf	(??_main+1)^0,c
   208   000824  0E5E               	movlw	94
   209   000826  6E05               	movwf	??_main^0,c
   210   000828  0E6E               	movlw	110
   211   00082A                     u77:
   212   00082A  2EE8               	decfsz	wreg,f,c
   213   00082C  D7FE               	bra	u77
   214   00082E  2E05               	decfsz	??_main^0,f,c
   215   000830  D7FC               	bra	u77
   216   000832  2E06               	decfsz	(??_main+1)^0,f,c
   217   000834  D7FA               	bra	u77
   218   000836  D000               	nop2	
   219   000838  EF0C  F004         	goto	l767
   220   00083C  EF00  F000         	goto	start
   221   000840                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _uartPrint *****************
   225 ;; Defined at:
   226 ;;		line 61 in file "libuart4550.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;  string          1    1[COMRAM] PTR unsigned char 
   229 ;;		 -> main@mensaje(12), 
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  index           2    2[COMRAM] int 
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         1       0       0       0       0       0       0       0       0
   242 ;;      Locals:         2       0       0       0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0
   244 ;;      Totals:         3       0       0       0       0       0       0       0       0
   245 ;;Total ram usage:        3 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_uartTransmitter
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256   000840                     __ptext1:
   257                           	callstack 0
   258   000840                     _uartPrint:
   259                           	callstack 29
   260   000840                     
   261                           ;libuart4550.c: 62:     int index =0;
   262   000840  0E00               	movlw	0
   263   000842  6E04               	movwf	(uartPrint@index+1)^0,c
   264   000844  0E00               	movlw	0
   265   000846  6E03               	movwf	uartPrint@index^0,c
   266                           
   267                           ;libuart4550.c: 63:     while(string != 0x00){
   268   000848  EF2F  F004         	goto	l761
   269   00084C                     l757:
   270                           
   271                           ;libuart4550.c: 64:         uartTransmitter(string[index]);
   272   00084C  5002               	movf	uartPrint@string^0,w,c
   273   00084E  2403               	addwf	uartPrint@index^0,w,c
   274   000850  6ED9               	movwf	fsr2l,c
   275   000852  6ADA               	clrf	fsr2h,c
   276   000854  50DF               	movf	indf2,w,c
   277   000856  EC5F  F004         	call	_uartTransmitter
   278   00085A                     
   279                           ;libuart4550.c: 65:         ++index;
   280   00085A  4A03               	infsnz	uartPrint@index^0,f,c
   281   00085C  2A04               	incf	(uartPrint@index+1)^0,f,c
   282   00085E                     l761:
   283                           
   284                           ;libuart4550.c: 63:     while(string != 0x00){
   285   00085E  5002               	movf	uartPrint@string^0,w,c
   286   000860  A4D8               	btfss	status,2,c
   287   000862  EF35  F004         	goto	u51
   288   000866  EF37  F004         	goto	u50
   289   00086A                     u51:
   290   00086A  EF26  F004         	goto	l757
   291   00086E                     u50:
   292   00086E  0012               	return		;funcret
   293   000870                     __end_of_uartPrint:
   294                           	callstack 0
   295                           
   296 ;; *************** function _uartTransmitter *****************
   297 ;; Defined at:
   298 ;;		line 37 in file "libuart4550.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  dataTrasmit     1    wreg     unsigned char 
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  dataTrasmit     1    0[COMRAM] unsigned char 
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         1       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         1       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        1 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_uartPrint
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text2
   326   0008BE                     __ptext2:
   327                           	callstack 0
   328   0008BE                     _uartTransmitter:
   329                           	callstack 29
   330                           
   331                           ;incstack = 0
   332                           ;uartTransmitter@dataTrasmit stored from wreg
   333   0008BE  6E01               	movwf	uartTransmitter@dataTrasmit^0,c
   334   0008C0                     
   335                           ;libuart4550.c: 39:     TXSTAbits.SYNC=0;
   336   0008C0  98AC               	bcf	172,4,c	;volatile
   337                           
   338                           ;libuart4550.c: 40:     RCSTAbits.SPEN = 1;
   339   0008C2  8EAB               	bsf	171,7,c	;volatile
   340                           
   341                           ;libuart4550.c: 41:     TXSTAbits.TXEN = 1;
   342   0008C4  8AAC               	bsf	172,5,c	;volatile
   343                           
   344                           ;libuart4550.c: 43:     TXSTAbits.TXEN = 1;
   345   0008C6  8AAC               	bsf	172,5,c	;volatile
   346   0008C8                     l22:
   347   0008C8  A2AC               	btfss	172,1,c	;volatile
   348   0008CA  EF69  F004         	goto	u11
   349   0008CE  EF6B  F004         	goto	u10
   350   0008D2                     u11:
   351   0008D2  EF64  F004         	goto	l22
   352   0008D6                     u10:
   353   0008D6                     
   354                           ;libuart4550.c: 45:     TXREG = dataTrasmit;
   355   0008D6  C001  FFAD         	movff	uartTransmitter@dataTrasmit,4013	;volatile
   356   0008DA  0012               	return		;funcret
   357   0008DC                     __end_of_uartTransmitter:
   358                           	callstack 0
   359                           
   360 ;; *************** function _uartInit *****************
   361 ;; Defined at:
   362 ;;		line 12 in file "libuart4550.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text3
   390   000870                     __ptext3:
   391                           	callstack 0
   392   000870                     _uartInit:
   393                           	callstack 30
   394   000870                     
   395                           ;libuart4550.c: 13:     RCSTAbits.SPEN = 1;
   396   000870  8EAB               	bsf	171,7,c	;volatile
   397                           
   398                           ;libuart4550.c: 14:     TRISCbits.RC7 = 1;
   399   000872  8E94               	bsf	148,7,c	;volatile
   400                           
   401                           ;libuart4550.c: 15:     TRISCbits.RC6 = 0;
   402   000874  9C94               	bcf	148,6,c	;volatile
   403                           
   404                           ;libuart4550.c: 18:     TXSTAbits.TX9 = 0;
   405   000876  9CAC               	bcf	172,6,c	;volatile
   406                           
   407                           ;libuart4550.c: 19:     TXSTAbits.TXEN = 1;
   408   000878  8AAC               	bsf	172,5,c	;volatile
   409                           
   410                           ;libuart4550.c: 20:     TXSTAbits.SYNC=0;
   411   00087A  98AC               	bcf	172,4,c	;volatile
   412                           
   413                           ;libuart4550.c: 21:     TXSTAbits.SENDB = 0;
   414   00087C  96AC               	bcf	172,3,c	;volatile
   415                           
   416                           ;libuart4550.c: 22:     TXSTAbits.BRGH = 0;
   417   00087E  94AC               	bcf	172,2,c	;volatile
   418                           
   419                           ;libuart4550.c: 23:     TXSTAbits.TRMT = 1;
   420   000880  82AC               	bsf	172,1,c	;volatile
   421                           
   422                           ;libuart4550.c: 25:     RCSTAbits.SPEN = 1;
   423   000882  8EAB               	bsf	171,7,c	;volatile
   424                           
   425                           ;libuart4550.c: 26:     RCSTAbits.RX9 = 0;
   426   000884  9CAB               	bcf	171,6,c	;volatile
   427                           
   428                           ;libuart4550.c: 27:     RCSTAbits.CREN = 1;
   429   000886  88AB               	bsf	171,4,c	;volatile
   430                           
   431                           ;libuart4550.c: 28:     RCSTAbits.ADDEN = 0;
   432   000888  96AB               	bcf	171,3,c	;volatile
   433                           
   434                           ;libuart4550.c: 29:     RCSTAbits.FERR = 0;
   435   00088A  94AB               	bcf	171,2,c	;volatile
   436                           
   437                           ;libuart4550.c: 30:     RCSTAbits.OERR = 0;
   438   00088C  92AB               	bcf	171,1,c	;volatile
   439                           
   440                           ;libuart4550.c: 32:     BAUDCONbits.ABDOVF = 0;
   441   00088E  9EB8               	bcf	184,7,c	;volatile
   442                           
   443                           ;libuart4550.c: 33:     BAUDCONbits.BRG16 = 1;
   444   000890  86B8               	bsf	184,3,c	;volatile
   445   000892                     
   446                           ;libuart4550.c: 34:     SPBRG = 10;
   447   000892  0E0A               	movlw	10
   448   000894  6EAF               	movwf	175,c	;volatile
   449   000896  0012               	return		;funcret
   450   000898                     __end_of_uartInit:
   451                           	callstack 0
   452                           
   453                           	psect	smallconst
   454   000800                     __psmallconst:
   455                           	callstack 0
   456   000800  00                 	db	0
   457   000801  00                 	db	0	; dummy byte at the end
   458   000000                     
   459                           	psect	rparam
   460   000000                     
   461                           	psect	idloc
   462                           
   463                           ;Config register IDLOC0 @ 0x200000
   464                           ;	unspecified, using default values
   465   200000                     	org	2097152
   466   200000  FF                 	db	255
   467                           
   468                           ;Config register IDLOC1 @ 0x200001
   469                           ;	unspecified, using default values
   470   200001                     	org	2097153
   471   200001  FF                 	db	255
   472                           
   473                           ;Config register IDLOC2 @ 0x200002
   474                           ;	unspecified, using default values
   475   200002                     	org	2097154
   476   200002  FF                 	db	255
   477                           
   478                           ;Config register IDLOC3 @ 0x200003
   479                           ;	unspecified, using default values
   480   200003                     	org	2097155
   481   200003  FF                 	db	255
   482                           
   483                           ;Config register IDLOC4 @ 0x200004
   484                           ;	unspecified, using default values
   485   200004                     	org	2097156
   486   200004  FF                 	db	255
   487                           
   488                           ;Config register IDLOC5 @ 0x200005
   489                           ;	unspecified, using default values
   490   200005                     	org	2097157
   491   200005  FF                 	db	255
   492                           
   493                           ;Config register IDLOC6 @ 0x200006
   494                           ;	unspecified, using default values
   495   200006                     	org	2097158
   496   200006  FF                 	db	255
   497                           
   498                           ;Config register IDLOC7 @ 0x200007
   499                           ;	unspecified, using default values
   500   200007                     	org	2097159
   501   200007  FF                 	db	255
   502                           
   503                           	psect	config
   504                           
   505                           ;Config register CONFIG1L @ 0x300000
   506                           ;	PLL Prescaler Selection bits
   507                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   508                           ;	System Clock Postscaler Selection bits
   509                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   510                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   511                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   512   300000                     	org	3145728
   513   300000  00                 	db	0
   514                           
   515                           ;Config register CONFIG1H @ 0x300001
   516                           ;	Oscillator Selection bits
   517                           ;	FOSC = HS, HS oscillator (HS)
   518                           ;	Fail-Safe Clock Monitor Enable bit
   519                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   520                           ;	Internal/External Oscillator Switchover bit
   521                           ;	IESO = OFF, Oscillator Switchover mode disabled
   522   300001                     	org	3145729
   523   300001  0C                 	db	12
   524                           
   525                           ;Config register CONFIG2L @ 0x300002
   526                           ;	Power-up Timer Enable bit
   527                           ;	PWRT = OFF, PWRT disabled
   528                           ;	Brown-out Reset Enable bits
   529                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   530                           ;	Brown-out Reset Voltage bits
   531                           ;	BORV = 3, Minimum setting 2.05V
   532                           ;	USB Voltage Regulator Enable bit
   533                           ;	VREGEN = OFF, USB voltage regulator disabled
   534   300002                     	org	3145730
   535   300002  1F                 	db	31
   536                           
   537                           ;Config register CONFIG2H @ 0x300003
   538                           ;	Watchdog Timer Enable bit
   539                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   540                           ;	Watchdog Timer Postscale Select bits
   541                           ;	WDTPS = 32768, 1:32768
   542   300003                     	org	3145731
   543   300003  1E                 	db	30
   544                           
   545                           ; Padding undefined space
   546   300004                     	org	3145732
   547   300004  FF                 	db	255
   548                           
   549                           ;Config register CONFIG3H @ 0x300005
   550                           ;	CCP2 MUX bit
   551                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   552                           ;	PORTB A/D Enable bit
   553                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   554                           ;	Low-Power Timer 1 Oscillator Enable bit
   555                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   556                           ;	MCLR Pin Enable bit
   557                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   558   300005                     	org	3145733
   559   300005  01                 	db	1
   560                           
   561                           ;Config register CONFIG4L @ 0x300006
   562                           ;	Stack Full/Underflow Reset Enable bit
   563                           ;	STVREN = ON, Stack full/underflow will cause Reset
   564                           ;	Single-Supply ICSP Enable bit
   565                           ;	LVP = ON, Single-Supply ICSP enabled
   566                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   567                           ;	ICPRT = OFF, ICPORT disabled
   568                           ;	Extended Instruction Set Enable bit
   569                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   570                           ;	Background Debugger Enable bit
   571                           ;	DEBUG = 0x1, unprogrammed default
   572   300006                     	org	3145734
   573   300006  85                 	db	133
   574                           
   575                           ; Padding undefined space
   576   300007                     	org	3145735
   577   300007  FF                 	db	255
   578                           
   579                           ;Config register CONFIG5L @ 0x300008
   580                           ;	Code Protection bit
   581                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   582                           ;	Code Protection bit
   583                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   584                           ;	Code Protection bit
   585                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   586                           ;	Code Protection bit
   587                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   588   300008                     	org	3145736
   589   300008  0F                 	db	15
   590                           
   591                           ;Config register CONFIG5H @ 0x300009
   592                           ;	Boot Block Code Protection bit
   593                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   594                           ;	Data EEPROM Code Protection bit
   595                           ;	CPD = OFF, Data EEPROM is not code-protected
   596   300009                     	org	3145737
   597   300009  C0                 	db	192
   598                           
   599                           ;Config register CONFIG6L @ 0x30000A
   600                           ;	Write Protection bit
   601                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   602                           ;	Write Protection bit
   603                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   604                           ;	Write Protection bit
   605                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   606                           ;	Write Protection bit
   607                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   608   30000A                     	org	3145738
   609   30000A  0F                 	db	15
   610                           
   611                           ;Config register CONFIG6H @ 0x30000B
   612                           ;	Configuration Register Write Protection bit
   613                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   614                           ;	Boot Block Write Protection bit
   615                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   616                           ;	Data EEPROM Write Protection bit
   617                           ;	WRTD = OFF, Data EEPROM is not write-protected
   618   30000B                     	org	3145739
   619   30000B  E0                 	db	224
   620                           
   621                           ;Config register CONFIG7L @ 0x30000C
   622                           ;	Table Read Protection bit
   623                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   624                           ;	Table Read Protection bit
   625                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   626                           ;	Table Read Protection bit
   627                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   628                           ;	Table Read Protection bit
   629                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   630   30000C                     	org	3145740
   631   30000C  0F                 	db	15
   632                           
   633                           ;Config register CONFIG7H @ 0x30000D
   634                           ;	Boot Block Table Read Protection bit
   635                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   636   30000D                     	org	3145741
   637   30000D  40                 	db	64
   638                           tosu	equ	0xFFF
   639                           tosh	equ	0xFFE
   640                           tosl	equ	0xFFD
   641                           stkptr	equ	0xFFC
   642                           pclatu	equ	0xFFB
   643                           pclath	equ	0xFFA
   644                           pcl	equ	0xFF9
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           indf0	equ	0xFEF
   652                           postinc0	equ	0xFEE
   653                           postdec0	equ	0xFED
   654                           preinc0	equ	0xFEC
   655                           plusw0	equ	0xFEB
   656                           fsr0h	equ	0xFEA
   657                           fsr0l	equ	0xFE9
   658                           wreg	equ	0xFE8
   659                           indf1	equ	0xFE7
   660                           postinc1	equ	0xFE6
   661                           postdec1	equ	0xFE5
   662                           preinc1	equ	0xFE4
   663                           plusw1	equ	0xFE3
   664                           fsr1h	equ	0xFE2
   665                           fsr1l	equ	0xFE1
   666                           bsr	equ	0xFE0
   667                           indf2	equ	0xFDF
   668                           postinc2	equ	0xFDE
   669                           postdec2	equ	0xFDD
   670                           preinc2	equ	0xFDC
   671                           plusw2	equ	0xFDB
   672                           fsr2h	equ	0xFDA
   673                           fsr2l	equ	0xFD9
   674                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    uartPrint@string	PTR unsigned char  size(1) Largest target is 12
		 -> main@mensaje(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_uartPrint
    _uartPrint->_uartTransmitter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     183
                                              4 COMRAM    14    14      0
                           _uartInit
                          _uartPrint
 ---------------------------------------------------------------------------------
 (1) _uartPrint                                            3     2      1     159
                                              1 COMRAM     3     2      1
                    _uartTransmitter
 ---------------------------------------------------------------------------------
 (2) _uartTransmitter                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uartInit
   _uartPrint
     _uartTransmitter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      1E       1       31.6%
BITBIGSFRhh         47      0       0      21        0.0%
BITBIGSFRll         34      0       0      25        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRlhl         9      0       0      24        0.0%
BITBIGSFRhlh         8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E       3        0.0%
DATA                 0      0      1E       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 03 21:13:53 2023

                        l22 08C8                          l25 08DA                          l19 0896  
                        l37 086E                          u10 08D6                          u11 08D2  
                        u50 086E                          u51 086A                          u61 0810  
                        u77 082A                         l731 08D6                         l733 0870  
                       l735 0892                         l729 08C0                         l761 085E  
                       l755 0840                         l763 0802                         l757 084C  
                       l765 0806                         l759 085A                         l767 0818  
                       l769 0820                         wreg 0FE8                 main@mensaje 0007  
                      _main 0802                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        start 0000  
              ___param_bank 0000  uartTransmitter@dataTrasmit 0001                       ?_main 0001  
                     _RCREG 0FAE                       _SPBRG 0FAF                       _TXREG 0FAD  
                     tablat 0FF5                       plusw1 0FE3                       plusw2 0FDB  
                     status 0FD8             __initialization 0898                __end_of_main 0840  
                    ??_main 0005               __activetblptr 0000             _uartTransmitter 08BE  
                    isa$std 0001                __pdataCOMRAM 0013            __end_of_uartInit 0898  
              __mediumconst 0000                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                  __accesstop 0060     __end_of__initialization 08B8  
             ___rparam_used 0001              __pcstackCOMRAM 0001     __end_of_uartTransmitter 08DC  
           uartPrint@string 0002                     __Hparam 0000                     __Lparam 0000  
                 ?_uartInit 0001                __psmallconst 0800                     __pcinit 0898  
                   __ramtop 0800                     __ptext0 0802                     __ptext1 0840  
                   __ptext2 08BE                     __ptext3 0870        end_of_initialization 08B8  
          ?_uartTransmitter 0001           __end_of_uartPrint 0870                  ??_uartInit 0001  
                 _RCSTAbits 0FAB                     postdec1 0FE5                     postinc0 0FEE  
                 _TRISCbits 0F94                   _TXSTAbits 0FAC                 _BAUDCONbits 0FB8  
             __pidataCOMRAM 08DC         start_initialization 0898              uartPrint@index 0003  
               __smallconst 0800                    _PIR1bits 0F9E                   _uartPrint 0840  
                 main@F3507 0013                   copy_data0 08AC                    __Hrparam 0000  
                  __Lrparam 0000                  ?_uartPrint 0002                    _uartInit 0870  
                  isa$xinst 0000                 ??_uartPrint 0003           ??_uartTransmitter 0001  
